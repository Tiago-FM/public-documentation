<?xml version="1.0" encoding="utf-8"?>
<project title="FPFIS libs documentation" version="2.8.5">
  <partials/>
  <file path="ecas-phpcas-parser/src/EcasPhpCASParser.php" generated-path="ecas-phpcas-parser.src.EcasPhpCASParser.html" hash="fda958ae0a29ca368e65aedb6d77ed37" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="phpCAS">\phpCAS</namespace-alias>
    <class final="false" abstract="false" namespace="EcasPhpCASParser" line="12" package="Default">
      <extends/>
      <name>EcasPhpCASParser</name>
      <full_name>\EcasPhpCASParser\EcasPhpCASParser</full_name>
      <docblock line="12">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="12" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EcasPhpCASParser" line="20" package="Default">
        <name>parse</name>
        <full_name>\EcasPhpCASParser\EcasPhpCASParser::parse()</full_name>
        <docblock line="20">
          <description>Class EcasPhpCASParser</description>
          <long-description></long-description>
          <tag name="param" line="20" description="&lt;p&gt;XML element coming from phpCAS&lt;/p&gt;" type="\DOMElement" variable="$root">
            <type>\DOMElement</type>
          </tag>
          <tag name="return" line="20" description="Attributes" type="array">
            <type>array</type>
          </tag>
          <tag name="see" line="20" description="" link="\phpCAS"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$root</name>
          <default></default>
          <type>\DOMElement</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="12" code="PPC:ERR-50005">No summary for class \EcasPhpCASParser\EcasPhpCASParser</error>
    </parse_markers>
    <source>eJydVllv2kAQfudXbKVINlHBzStJyEFoXnJJiapIBKFlWexVzNraoxRV/PeOd33io7QrRcb2zDfffHM4F1dxEPc43lAZY0LRlGD5EsSTm9cXLCQV6HcPwfFOT80VnaL0+ToSKDaGaMtUgLBSgi21oihODBDBYbjE5DNzuyZYUT8SO/RKiRZM7fI3EPgT+/XYuQHWKoBw98IC3EarFePowrf315JtA8bpkFM1zn1CRigHHvcvDyhQKpYjz9tut0Of62EkfC99Lz0/Dofqlyo58s/cw4fU9HJIoo1HyYBqEcUYfmE5gNzNpczUM1cNUa0y5+aehFjK5uSsuBWBLYtJu0+hmsAb9HH3/DgN6YZyhU5EFCn0/viAaPoEeDPuo7WINimlCoSgSguOsBB4h26yAsqKjaQUfdR8vfx3rJcgJVprThSLuK2+W6PVzx2KnI27QR6NlIDuc53vkearUi85Q+M9GPNoRZ+gS/vnFfcTQaUOFbq0SbjwuvKerZGbIgRYFim6/f4BEYOWBJYAlrrkPOR5zRb6n2ISALx1wtK6N+HmTBIDyAXyQJeXyOF6s6TCaXNJDom4YlzTOoHk7BufVjVthXZuYIySmuGwqnjBcuigUfHkJw41bYTrN9NLqzNzrgslnfmsFGCeiF1Cr+NUU9x3lXcSsHD1BI3SVl6SGAjKiwqT3KUe2YBnLoNxSLkPew7qdtZWMGudoBduTNGN+61FoCKE7fC3XWw6A2Z48TZ9f1s8Pd9Nu9ojV3hh5HPmeXAL+KNZ1OykC4DA1Ck3xeqbFFtdELqqR+2wHmXWx3Zw/cmJLyIdy/KQH5oU05jXOBlIc9NarWynALBUYiFoHJolBFt35HxFDvyVtWxYP9mpTNwt9RlvIpkcU/EiMCwBm5yDjipzajzv0qJMCjI5glSDguXRMFKayJMuPVvJzrr6wx7oWhUwORjbz0c5Wjvl5u2XpZ7XY8pXrmM+oCuUUmoB3cOHU9KkRF+YlDQfiVlesXnjYjnMvDCvJUY6crLhO/DLzGwmxzJrZWe7qCHPdtkNVi08YJ39T6nqoWf/qNrfJzLpgMP/DOqu1bt0NdaWl7Xa9/a9PwdkzXY=</source>
  </file>
  <file path="itopapi/src/ITopClient.php" generated-path="itopapi.src.ITopClient.html" hash="a56d5ccf83350e3f4b257921bf77922b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="iTopApi" line="8" package="iTopApi">
      <extends/>
      <name>ITopClient</name>
      <full_name>\iTopApi\ITopClient</full_name>
      <docblock line="8">
        <description>Class ITopClient</description>
        <long-description></long-description>
        <tag name="package" line="8" description="iTopApi"/>
      </docblock>
      <property static="false" visibility="private" namespace="iTopApi" line="13" package="iTopApi">
        <name>$endpoint</name>
        <full_name>\iTopApi\ITopClient::endpoint</full_name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="13" description="&lt;p&gt;Endpoint for iTopApi&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="17" package="iTopApi">
        <name>$user</name>
        <full_name>\iTopApi\ITopClient::user</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;Username&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="21" package="iTopApi">
        <name>$password</name>
        <full_name>\iTopApi\ITopClient::password</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="21" description="&lt;p&gt;Password&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="25" package="iTopApi">
        <name>$certificateCheck</name>
        <full_name>\iTopApi\ITopClient::certificateCheck</full_name>
        <default>true</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;Perform ssl checks&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="29" package="iTopApi">
        <name>$curlOptions</name>
        <full_name>\iTopApi\ITopClient::curlOptions</full_name>
        <default>array()</default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="29" description="&lt;p&gt;Array of custom curl options&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="34" package="iTopApi">
        <name>$proxyEnv</name>
        <full_name>\iTopApi\ITopClient::proxyEnv</full_name>
        <default>array()</default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="34" description="&lt;p&gt;use environement proxy or not&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="42" package="iTopApi">
        <name>__construct</name>
        <full_name>\iTopApi\ITopClient::__construct()</full_name>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="42" description="" type="string" variable="$endpoint">
            <type>string</type>
          </tag>
          <tag name="param" line="42" description="" type="string" variable="$user">
            <type>string</type>
          </tag>
          <tag name="param" line="42" description="" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="param" line="42" description="&lt;p&gt;(Default:1.0)&lt;/p&gt;" type="string" variable="$version">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$endpoint</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default>'1.0'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$proxyEnv</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="57" package="iTopApi">
        <name>setCurlOption</name>
        <full_name>\iTopApi\ITopClient::setCurlOption()</full_name>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;One of the CURLOPT_* constant&lt;/p&gt;" type="integer" variable="$option">
            <type>integer</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Setting&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="57" description="" type="\iTopApi\ITopClient">
            <type>\iTopApi\ITopClient</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$option</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="67" package="iTopApi">
        <name>setCertificateCheck</name>
        <full_name>\iTopApi\ITopClient::setCertificateCheck()</full_name>
        <docblock line="67">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;Check for SSL issues&lt;/p&gt;" type="" variable="$bool"/>
          <tag name="return" line="67" description="" type="\iTopApi\ITopClient">
            <type>\iTopApi\ITopClient</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bool</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="79" package="iTopApi">
        <name>sendRequest</name>
        <full_name>\iTopApi\ITopClient::sendRequest()</full_name>
        <docblock line="79">
          <description>Send a JSON request to the API</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="79" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="79" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="146" package="iTopApi">
        <name>operation</name>
        <full_name>\iTopApi\ITopClient::operation()</full_name>
        <docblock line="146">
          <description>Execute an API operation</description>
          <long-description></long-description>
          <tag name="param" line="146" description="" type="string" variable="$operation">
            <type>string</type>
          </tag>
          <tag name="param" line="146" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="146" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="146" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$operation</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="158" package="iTopApi">
        <name>coreGet</name>
        <full_name>\iTopApi\ITopClient::coreGet()</full_name>
        <docblock line="158">
          <description>Execute an API core/get</description>
          <long-description></long-description>
          <tag name="param" line="158" description="&lt;p&gt;Class to look for&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="158" description="&lt;p&gt;Param to be passed as key&lt;/p&gt;" type="mixed" variable="$query">
            <type>mixed</type>
          </tag>
          <tag name="return" line="158" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="180" package="iTopApi">
        <name>coreGetRelated</name>
        <full_name>\iTopApi\ITopClient::coreGetRelated()</full_name>
        <docblock line="180">
          <description>Get relations</description>
          <long-description></long-description>
          <tag name="param" line="180" description="&lt;p&gt;Class to look for&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="180" description="&lt;p&gt;Param to be passed as key&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="180" description="&lt;p&gt;Related class to look for&lt;/p&gt;" type="string" variable="$relation">
            <type>string</type>
          </tag>
          <tag name="param" line="180" description="&lt;p&gt;Depth&lt;/p&gt;" type="integer" variable="$depth">
            <type>integer</type>
          </tag>
          <tag name="return" line="180" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$relation</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$depth</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="200" package="iTopApi">
        <name>coreDelete</name>
        <full_name>\iTopApi\ITopClient::coreDelete()</full_name>
        <docblock line="200">
          <description>Delete one/multiple objects</description>
          <long-description></long-description>
          <tag name="param" line="200" description="&lt;p&gt;Class to delete&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Param to be passed as key&lt;/p&gt;" type="mixed" variable="$query">
            <type>mixed</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Comment to record in iTop&lt;/p&gt;" type="string" variable="$comment">
            <type>string</type>
          </tag>
          <tag name="return" line="200" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$comment</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="216" package="iTopApi">
        <name>coreGetCustomSelect</name>
        <full_name>\iTopApi\ITopClient::coreGetCustomSelect()</full_name>
        <docblock line="216">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="230" package="iTopApi">
        <name>coreUpdate</name>
        <full_name>\iTopApi\ITopClient::coreUpdate()</full_name>
        <docblock line="230">
          <description>Update one/multiple objects in iTop</description>
          <long-description></long-description>
          <tag name="param" line="230" description="&lt;p&gt;Class to update&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="230" description="&lt;p&gt;Param to be passed as key&lt;/p&gt;" type="mixed" variable="$query">
            <type>mixed</type>
          </tag>
          <tag name="param" line="230" description="&lt;p&gt;Data to update&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="230" description="&lt;p&gt;Comment to record in iTop&lt;/p&gt;" type="string" variable="$comment">
            <type>string</type>
          </tag>
          <tag name="return" line="230" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$comment</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="255" package="iTopApi">
        <name>coreCreate</name>
        <full_name>\iTopApi\ITopClient::coreCreate()</full_name>
        <docblock line="255">
          <description>Creates an object in iTop</description>
          <long-description></long-description>
          <tag name="param" line="255" description="&lt;p&gt;Class to create&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="255" description="&lt;p&gt;Data for the objects&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="255" description="&lt;p&gt;Record a comment in iTop&lt;/p&gt;" type="string" variable="$comment">
            <type>string</type>
          </tag>
          <tag name="return" line="255" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$comment</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="277" package="iTopApi">
        <name>getNewObject</name>
        <full_name>\iTopApi\ITopClient::getNewObject()</full_name>
        <docblock line="277">
          <description>Dispense a new ITopObject</description>
          <long-description></long-description>
          <tag name="param" line="277" description="&lt;p&gt;Class to get a new object for&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="277" description="" type="\iTopApi\ITopObject">
            <type>\iTopApi\ITopObject</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="288" package="iTopApi">
        <name>getObjects</name>
        <full_name>\iTopApi\ITopClient::getObjects()</full_name>
        <docblock line="288">
          <description>Get objects from iTopApi</description>
          <long-description></long-description>
          <tag name="param" line="288" description="&lt;p&gt;Class to get objects for&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="288" description="&lt;p&gt;Param to be passed as key&lt;/p&gt;" type="mixed" variable="$query">
            <type>mixed</type>
          </tag>
          <tag name="return" line="288" description="" type="array|\iTopApi\ITopObject">
            <type>array</type>
            <type>\iTopApi\ITopObject</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="42" code="PPC:ERR-50015">Argument $proxyEnv is missing from the Docblock of __construct</error>
      <error line="42" code="PPC:ERR-50014">Name of argument $proxyEnv does not match with the DocBlock's name $version in __construct()</error>
      <error line="42" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="57" code="PPC:ERR-50008">No summary for method setCurlOption()</error>
      <error line="67" code="PPC:ERR-50008">No summary for method setCertificateCheck()</error>
      <error line="216" code="PPC:ERR-50015">Argument $class is missing from the Docblock of coreGetCustomSelect</error>
      <error line="216" code="PPC:ERR-50015">Argument $query is missing from the Docblock of coreGetCustomSelect</error>
      <error line="216" code="PPC:ERR-50008">No summary for method coreGetCustomSelect()</error>
    </parse_markers>
    <source>eJzFWltP20gUfudXTBGSE+RCu49p6S5K3C0rRKIEVltRZA32hLh1bHfG5iKW/77nzIzvduIQyuahIfG5fvOdM2cm/fh7tIh2ArpkIqIOI955GB1HHnnc2SHwOtzfl+9knwx9KgQ5gedD32NBnH7/B+j9oDeZqv7+UL47TUqPSqRoXpu6pZyImHvBDbECNwq9ICbzkJdNF8zjK+LeLY0Z2WNa40MX8xeCccx6tckEpDqZm0CadyF3V5uLtNRqk9dh6JMJ45D4kgjhE2fBnB9itWmH8dibew58GKI4OSIxT9hqT5Rz+kCO5b/hnDiJiMMlvHGfhFHshcE6pyA5VoLgT1rr9T/srM8OcCUsuPV4GLAl0AJMhvcQAydBGK/BECWt4LaTw4hyukzXKCPIChFc8BWPo/oyV0VuGRcACCG9EZvTxI8H7w/e9ZtzSq59zyHzJHAQQ2LbDiAJy+bEvSxYUwVl5s7N3MkRMcC6YZZgmVNfsNzjYw4PvvbihSfefkrNg3xD4RQE0TkKlUuhIJCGhUJ1ghcE86DT+Jvt5ZlkWeWCT+sWG3MCW4q/ZBwwZHa8YGR4MT0dT87tfSJRpo08WHr3zIX4qJ8wQmYsjmFRS3KcxQkPVLCdVlWweJjVSU8HZmofxWVqwKJQYJda80rih7pl9IpxbQDXnqxH1TKw085mp8QTImFi+6wrLaknfa3LuN7HpNp2yc6A4oSSv2bjM9D9CdnFJA4lLY4nJw2wqM6459KYNuEgaVJ6EC94eCfIN+veYXKdOqIUuFMVT6/gshUj7MxHtRI+IMbhHbuGAr31HCYOOZg7gG3dqNQXmr40aBIvbKxm4yq31VDdBenozi0Kt1R5RB/8kGIf+C7CwGaBE7qspxKqiELG/CHr4KVn+DJ0fzDI0adK9zDrwnlCBXHZM1tkMZ2CaNZX6+IyEUxAyesMS3LF7UfDAATC/XARx5F9nXi+a8t8eyrtmoKjVhXfbC/w4l4FLfkA6gnqvyeFzayXwZspWdFdZWqdX0zPzqfHZ7PP1tSUU0J37S/W8Qi11B7TWW0ynp2b0HeTAB4pgPqbaX8+sU5HMzOFtwqiNye92v6RboWVKlrnbTr+56tJgsSvovrU6rPatTZ0CU3X/tuannz++kUC9VvFcWf1iYWL874aN2EAw3YhvdsupKp6BUrYeRh1FjmehcGSimw3xxpU22a3ZKqb7coY9rDYp3AMAqcsrUd2zxxlraJcZwLjPAgzPfygFZuCRemQ23DqEnh00low+8nvtbEGyOU2QwJ2V9hpersOoE6kJuk9Kt2n/uBbQB7Lfp52axC05rTHcyhUG2Sqnxdhamwf9bJ2/FCwDMYadG88YaudIHPaCFpj8sZJAIvruSSLd87hEIObIQyuA2IclCLuUNKpoUsDE4aN780R8LdzPHhWJdlnFUFuUq+EcbU6kHTASRW7DDkWcDWBIxINcKiBExzjtDKJVA8rq2TUPPLrZ6Ashl4ejlkcwPKTXutcpGaVTF0NK9nH9tnx7afiBFYdVTpD7UD7Orxhqw6W6iJE3aHA5OmHoZy3W48g6Yw0kd+BxjUjOKjAI2iIP9hDlyVpBx0j/pNho8SIzHwik9teC8xYHVCqKJLOMo29LbVlzKxTa3iOBSDdrOo95VXJOVGfyVKwjfq81jZOSu9qhFP51kUAUSUgg68975e+6cQRgBey8mn1HqWZGfDahBwQrnrSjR9lj2lUZIp/gIbTwbM6V0OpQWkv8K8R/vEiLNRh5GSE8M08TDN1egSTTQs1N6ePzZXXX0QjTKH+OE1JyWQJ1gVlwkrKLeOsX88g5Ij5DHpWGLDDZeLHXuTDh+vvzIm70DNjpyvNrG1cz6OmEy7lfeBQv4M2h7mDu8A/eQu8PeEUDJXOZ+auN+iBWqW5C+b25EiA+4TvXXMK2CgIs754YKiZBT63nca3apbK3a/slw0COn1tRX14HosPiQhh7RSRoBqAELJrDdb1laG8z55B9k51p2tbXqDhzQ3jthrDd0e5t9w49X3mDtLfJAaDBm+7JrHsi5k1tUfWZGoNj8+tUX/VGNK8H3cq64vIpS1l3Vg0a8o7keZeuLyLsyQ+GOH7Kmev2A8UfvV+gLG+bltQaGzWFrbpC8rfK/eFucd8VxuREL9U6+hQKkPOIGGBY7uqkOcUiCONdCU53qnjNXOHjVYTY6r4TUn6xYsxXaWfM/31Ga6wez2GK38vy/D/k8AjT0QM7ziovHbA39XHkljdT54w+mptXQLVcV9D3Gi7nV9g9ozdKQXNsDWzejmBjJVIMDM98JtqpTuft9J9T7Kq/p8GOkCTWXjps7nM6N/NUVXSYrOT+l6aRuFH8tJzzgTMCiL/TWftAIIv7AH6El8buDS0J+OqTz7C+ayhIRQBqAYCy1n6nF8E1x3Im2A8+GJVqW+b3PmeyNJA8T4kye4jHy8vjcHAUOfLhrvVFLRLvD1qYac+mirJy7QXXNV5qpJrgCH1UqS0+vdp5z9TeFrS</source>
  </file>
  <file path="itopapi/src/ITopObject.php" generated-path="itopapi.src.ITopObject.html" hash="71d59b603c321ba65486fc34fd3eb16c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="iTopApi" line="9" package="iTopApi">
      <extends/>
      <name>ITopObject</name>
      <full_name>\iTopApi\ITopObject</full_name>
      <docblock line="9">
        <description>Util class to acces iTop object oriented
Class ITopObject</description>
        <long-description></long-description>
        <tag name="package" line="9" description="iTopApi"/>
      </docblock>
      <property static="false" visibility="private" namespace="iTopApi" line="14" package="iTopApi">
        <name>$dirty_</name>
        <full_name>\iTopApi\ITopObject::dirty_</full_name>
        <default>false</default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="14" description="&lt;p&gt;Was the oject updated or not&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="19" package="iTopApi">
        <name>$key_</name>
        <full_name>\iTopApi\ITopObject::key_</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="19" description="&lt;p&gt;This is not an ssh one&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="24" package="iTopApi">
        <name>$class_</name>
        <full_name>\iTopApi\ITopObject::class_</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="24" description="&lt;p&gt;Current class&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="29" package="iTopApi">
        <name>$iTopClient_</name>
        <full_name>\iTopApi\ITopObject::iTopClient_</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="29" description="&lt;p&gt;Current iTopClient&lt;/p&gt;" type="\iTopApi\ITopClient" variable="">
            <type>\iTopApi\ITopClient</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="iTopApi" line="34" package="iTopApi">
        <name>$data_</name>
        <full_name>\iTopApi\ITopObject::data_</full_name>
        <default>array()</default>
        <docblock line="34">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="34" description="&lt;p&gt;Data about the current object&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="41" package="iTopApi">
        <name>__construct</name>
        <full_name>\iTopApi\ITopObject::__construct()</full_name>
        <docblock line="41">
          <description>Instantiate a new ITopObject</description>
          <long-description></long-description>
          <tag name="param" line="41" description="&lt;p&gt;Class for the current object&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="41" description="&lt;p&gt;Data for the current object (content of 'fields')&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$iTopClient</name>
          <default></default>
          <type>\iTopApi\iTopClient</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="58" package="iTopApi">
        <name>save</name>
        <full_name>\iTopApi\ITopObject::save()</full_name>
        <docblock line="58">
          <description>Update/Create the current object in iTop Database</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;Comment to record in iTop&lt;/p&gt;" type="string" variable="$comment">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$comment</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="75" package="iTopApi">
        <name>delete</name>
        <full_name>\iTopApi\ITopObject::delete()</full_name>
        <docblock line="75">
          <description>Delete the current object from the database and mark is a new</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;Comment to save in iTop&lt;/p&gt;" type="string" variable="$comment">
            <type>string</type>
          </tag>
          <tag name="return" line="75" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$comment</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="90" package="iTopApi">
        <name>isDirty</name>
        <full_name>\iTopApi\ITopObject::isDirty()</full_name>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="90" description="Is dirty or not" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="99" package="iTopApi">
        <name>__get</name>
        <full_name>\iTopApi\ITopObject::__get()</full_name>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="99" description="" type="string" variable="$variable">
            <type>string</type>
          </tag>
          <tag name="return" line="99" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$variable</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="108" package="iTopApi">
        <name>__set</name>
        <full_name>\iTopApi\ITopObject::__set()</full_name>
        <docblock line="108">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="108" description="" type="string" variable="$variable">
            <type>string</type>
          </tag>
          <tag name="param" line="108" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$variable</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="118" package="iTopApi">
        <name>getITopClient</name>
        <full_name>\iTopApi\ITopObject::getITopClient()</full_name>
        <docblock line="118">
          <description>Get the current ITopClient</description>
          <long-description></long-description>
          <tag name="return" line="118" description="" type="\iTopApi\ITopClient">
            <type>\iTopApi\ITopClient</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="iTopApi" line="127" package="iTopApi">
        <name>getKey</name>
        <full_name>\iTopApi\ITopObject::getKey()</full_name>
        <docblock line="127">
          <description>Get current key id from iTop object</description>
          <long-description></long-description>
          <tag name="return" line="127" description="Current object ID in iTop db" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="41" code="PPC:ERR-50014">Name of argument $key does not match with the DocBlock's name $data in __construct()</error>
      <error line="41" code="PPC:ERR-50015">Argument $data is missing from the Docblock of __construct</error>
      <error line="41" code="PPC:ERR-50015">Argument $iTopClient is missing from the Docblock of __construct</error>
      <error line="41" code="PPC:ERR-50014">Name of argument $iTopClient does not match with the DocBlock's name $data in __construct()</error>
      <error line="41" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $iTopClient in __construct()</error>
      <error line="90" code="PPC:ERR-50008">No summary for method isDirty()</error>
      <error line="99" code="PPC:ERR-50008">No summary for method __get()</error>
      <error line="108" code="PPC:ERR-50008">No summary for method __set()</error>
    </parse_markers>
    <source>eJytV1tvmzAUfs+vOJMqQapMeV93VTJN0R720moPXYUMmMYrsZFt2kZV//uOL1wLhGrlhQDfuX6fj52PX4p9seDkQFVBEgrsUhTfCgZPiwXgtT4/t3c4hyvNckhyohRoASRJqLJoEPFfmmgQklGuaVrhNxa6Q8QvC6jef8U4d+S2DuXfr+09GTJ6cpB2Ot7VPZEQC5HDb4JZ7SkIm0pZpAQzwZSAC92yWNe/C8nuEQNnKZP6GMEnyEiu6MViMhbjGi73DAtXxjMQDkrtQXA6HeSOHqMTrpWWjN/CppQS2+gaMe3UQk65Na3c5IaZ2jWrX037b3CnghApyRG2RBMgsSi1pSLx4USL/VES0NRwYB2Fy/FwO6404ZoZKwKcPrwQmE+rIJIcqqa6VnlFZqiKyfwqY1eVSw5cdcO2ECYClW+eMwgyRvNUBcvhiss4ZwlkJU80ExyiCE0xyzLRoctyZdWycmFXLbLahDTOm7VhrjON4nz/2SkD++lcXgxhqpbbOIMII1oDwPvg95Y+DKx57KLXa9hllirfrQcaSAp23cGHDpRlEDIV8TLPw1YSy2WvzHYZ1fLFHtJu4OdF82tMT1d2Uqw3khpFDVDLuBtyhv6YKDolMnE42HXm7zglJU2ETCsnHVtJdSk5HNhjNTLth3GpKHJPwzrIJzBdOqGD/mzr9/rd3Gb7ZF8Sj1oTkrouhh31rdoyWnVUt6p7tRxjzBYhcU/C1UGNukYiO+JGIk8HO/MM+6kTFaII65DXgfuqgpu+WXdxONh1gM/BTRdZNa3yeTFDj1ua02EhZlIc7PvUKxE3nxQORN6ZzcjOwtdp0+jpbZSZ2qTnavM1i1zvpXiws+PP98eEFiZcGFzKoykKa3CR/U7gGhVMawpDNXJy2/IAuxNTpcu/qWKY9RHBbn2veoJ1I78R6gypVDzZ889O+YE6deTp0cbU1piEY0R1K3EtmaPhnvTwgMBInNP/01gU3VLcIitnM3M2A+C6Nrp5q+wdxCYPBpKXI+e/F0WodhErbzt3io+KsV+nUbj1PKfgH7R7XtsNHQ9rxga/jleMpDUWM5XWOXfOy7/K3axulrpZ2fpvMlQIa52I/YjdbevtPo3nlveTzl1B3Wnj5tLz4nnxD4qUn2E=</source>
  </file>
  <file path="phpgit/src/GitWorkingCopy.php" generated-path="phpgit.src.GitWorkingCopy.html" hash="0350427a08ded010a66f36bd364a6e90" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhpGit" line="15" package="PhpGit">
      <extends/>
      <name>GitWorkingCopy</name>
      <full_name>\PhpGit\GitWorkingCopy</full_name>
      <docblock line="15">
        <description>Small class to interact with a git working copy directory
Plan :
$gitRepo = new GitRemoteRepo($path);
$gitWorkingCopy = $gitRepo-&gt;clone($workingCopyPath);
// and also :
$gitWorkingCopy-&gt;getRemoteRepo($name);
Class GitWorkingCopy</description>
        <long-description></long-description>
        <tag name="package" line="15" description="PhpGit"/>
      </docblock>
      <property static="false" visibility="public" namespace="PhpGit" line="17" package="PhpGit">
        <name>$workingCopyPath_</name>
        <full_name>\PhpGit\GitWorkingCopy::workingCopyPath_</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="PhpGit" line="18" package="PhpGit">
        <name>$gitBinary_</name>
        <full_name>\PhpGit\GitWorkingCopy::gitBinary_</full_name>
        <default>'git'</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="PhpGit" line="19" package="PhpGit">
        <name>$config_</name>
        <full_name>\PhpGit\GitWorkingCopy::config_</full_name>
        <default>array()</default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="21" package="PhpGit">
        <name>__construct</name>
        <full_name>\PhpGit\GitWorkingCopy::__construct()</full_name>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="28" package="PhpGit">
        <name>add</name>
        <full_name>\PhpGit\GitWorkingCopy::add()</full_name>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="40" package="PhpGit">
        <name>cancel</name>
        <full_name>\PhpGit\GitWorkingCopy::cancel()</full_name>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="52" package="PhpGit">
        <name>commit</name>
        <full_name>\PhpGit\GitWorkingCopy::commit()</full_name>
        <docblock line="52">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="57" package="PhpGit">
        <name>mv</name>
        <full_name>\PhpGit\GitWorkingCopy::mv()</full_name>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="63" package="PhpGit">
        <name>rm</name>
        <full_name>\PhpGit\GitWorkingCopy::rm()</full_name>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$recursive</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$force</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="71" package="PhpGit">
        <name>pull</name>
        <full_name>\PhpGit\GitWorkingCopy::pull()</full_name>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remote</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ref</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="77" package="PhpGit">
        <name>push</name>
        <full_name>\PhpGit\GitWorkingCopy::push()</full_name>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remote</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ref</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="83" package="PhpGit">
        <name>fetch</name>
        <full_name>\PhpGit\GitWorkingCopy::fetch()</full_name>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remote</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ref</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="89" package="PhpGit">
        <name>getRemotes</name>
        <full_name>\PhpGit\GitWorkingCopy::getRemotes()</full_name>
        <docblock line="89">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="93" package="PhpGit">
        <name>getBranches</name>
        <full_name>\PhpGit\GitWorkingCopy::getBranches()</full_name>
        <docblock line="93">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="97" package="PhpGit">
        <name>getBranch</name>
        <full_name>\PhpGit\GitWorkingCopy::getBranch()</full_name>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="104" package="PhpGit">
        <name>getTags</name>
        <full_name>\PhpGit\GitWorkingCopy::getTags()</full_name>
        <docblock line="104">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="109" package="PhpGit">
        <name>getConfigList</name>
        <full_name>\PhpGit\GitWorkingCopy::getConfigList()</full_name>
        <docblock line="109">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="PhpGit" line="124" package="PhpGit">
        <name>runGit</name>
        <full_name>\PhpGit\GitWorkingCopy::runGit()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$arguments</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="21" code="PPC:ERR-50015">Argument $path is missing from the Docblock of __construct</error>
      <error line="21" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="28" code="PPC:ERR-50015">Argument $path is missing from the Docblock of add</error>
      <error line="28" code="PPC:ERR-50008">No summary for method add()</error>
      <error line="40" code="PPC:ERR-50015">Argument $path is missing from the Docblock of cancel</error>
      <error line="40" code="PPC:ERR-50008">No summary for method cancel()</error>
      <error line="52" code="PPC:ERR-50015">Argument $message is missing from the Docblock of commit</error>
      <error line="52" code="PPC:ERR-50008">No summary for method commit()</error>
      <error line="57" code="PPC:ERR-50015">Argument $source is missing from the Docblock of mv</error>
      <error line="57" code="PPC:ERR-50015">Argument $target is missing from the Docblock of mv</error>
      <error line="57" code="PPC:ERR-50008">No summary for method mv()</error>
      <error line="63" code="PPC:ERR-50015">Argument $path is missing from the Docblock of rm</error>
      <error line="63" code="PPC:ERR-50015">Argument $recursive is missing from the Docblock of rm</error>
      <error line="63" code="PPC:ERR-50015">Argument $force is missing from the Docblock of rm</error>
      <error line="63" code="PPC:ERR-50008">No summary for method rm()</error>
      <error line="71" code="PPC:ERR-50015">Argument $remote is missing from the Docblock of pull</error>
      <error line="71" code="PPC:ERR-50015">Argument $ref is missing from the Docblock of pull</error>
      <error line="71" code="PPC:ERR-50008">No summary for method pull()</error>
      <error line="77" code="PPC:ERR-50015">Argument $remote is missing from the Docblock of push</error>
      <error line="77" code="PPC:ERR-50015">Argument $ref is missing from the Docblock of push</error>
      <error line="77" code="PPC:ERR-50008">No summary for method push()</error>
      <error line="83" code="PPC:ERR-50015">Argument $remote is missing from the Docblock of fetch</error>
      <error line="83" code="PPC:ERR-50015">Argument $ref is missing from the Docblock of fetch</error>
      <error line="83" code="PPC:ERR-50008">No summary for method fetch()</error>
      <error line="89" code="PPC:ERR-50008">No summary for method getRemotes()</error>
      <error line="93" code="PPC:ERR-50008">No summary for method getBranches()</error>
      <error line="97" code="PPC:ERR-50015">Argument $name is missing from the Docblock of getBranch</error>
      <error line="97" code="PPC:ERR-50008">No summary for method getBranch()</error>
      <error line="104" code="PPC:ERR-50008">No summary for method getTags()</error>
      <error line="109" code="PPC:ERR-50015">Argument $object is missing from the Docblock of getConfigList</error>
      <error line="109" code="PPC:ERR-50008">No summary for method getConfigList()</error>
      <error line="124" code="PPC:ERR-50015">Argument $arguments is missing from the Docblock of runGit</error>
      <error line="124" code="PPC:ERR-50008">No summary for method runGit()</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $workingCopyPath_</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $gitBinary_</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $config_</error>
    </parse_markers>
    <source>eJztWG1v2zYQ/u5fcS20SQr80vVj3KRrsyAdVqxGUmAYusJgKMriKpECSdkxhvz3HUVZ1ltWGf1WTB8cibx77u65I3nMq9d5kk8EyZjOCWWwSvIbbuCfyWQC+CzOzsq/cAZ3GUlToCnRGowELgxThBrYcZMAgQ1q7aT6wsUGqMz3EHHFqJFqfwBYpUTA+eHLQ4Vblku4AMF2cGO/MmmYHQu8nJgkXDZl/3DYVxb6otaeXdJUChZ4u+P0qqW7WAAREZBUy7bxBuDscsNa5i0fR4irMuablsph7mdk7QvZ1MRV44vyLx1QtNRC9WyJgq7n62V7Gj19ywVR+zWG7eOX3xGgUsR8Y2eJUmQfoN+1QF7cp5xCXAhquBSwXqO0NqqgpuIY3YHGw+PgGddrzJ2bn//y6+311ccPt3+u765Xb27f4Ovcn1s3wrClaR+TKLkr0/nX9QNlubVZ4fjANQhpsFJaVWLLJlfybyyVuR8uW5CeSbjGDNcB5kRptuaCr2Oesq95uHCK/hTjZcPQXe5tZVnQo/Dj02SSKBom0SNqY5PlL7vcIrUuSU6vq2ifWCpGaAJOBIgGzwY7JFrbmqMx8OdMU5IznbA0xdHA6S17ao+tkUdgqWYD6AfkLmpzaQ4iKmYKJQ4Uq0LgAgh0rnDHiAPf0gY/aH9q8cNwFNOUCMrS/8k+nWzFNDMn0y2zDFE8PBM0bm09xqtx6Lt70Fie4qMzB7MZni9yN2NZbvYwy5zXB8RxnmfbwNOyUJRNPYMeMdNz3k0P+O4mevtEiTIgXsGfFGm2xaBcXB0vx4WnMlcRUw+P1kJpvmUXMZ5siIOVTKuPXshlbY+qrSOu3QmPH6+x5GcKf857C81ZtuLupRSNa9GTijVz9DiGautVcNNqGY9iKi9S3C9UeaRfCPyweHH51qPHSWEEuGGIhl5oY7FxdImrpnvUxW2M+D8A4tMKx4bTIMaaLwMazYZOvis2dPINbMTM0O+JjjKeb+Cj7n110A2/bRkFr8qW6j3XJvCdJX+0kbcKj/HkVCv3pdapVqoWvpvN+8oFu13V1o5+9VoI7IXx/AxqvU8l7OeB1reKodyAh7PXwRgbz0ey6TO2WGRSG3ty5ihPDItgp0ieMwVsiz/nX68fHwzZjKe1kRJP3tt2vUeuG9bNi0hzvuq1gk5Xb3su937HSmu/MbzgXXYGhzqySmJFVGmUPeSpjBgGhqugizjQmWF6qSwExtPACeEVvIQQmRWGi4L11dIGBb9jIqcej27JLrQl1QAasgdNPXh2ATWTT5tbLOwywyP4uSUQNPYLprzQMhH1GeERumEUxz6h9GrqP+9eqpqp+oRSn4+OV3SNaTcrgFb1HMtH8S3WZKNvcSVnW9AiY8LS3E4nTcob5/ClrLuX0ixqrN/6ejwgVbXqR7tPyby8/PGnbl8jC5MX5qlq9hTFqRftQfbAaGBRp5U2bsO0t6tgGaDyJbwYeYH27f8VLHThji+CN43Itlfz1bvV+vrD+znPXOlX3wfr4YD5OoGlRG/1P04eJ/8Cfqz7qg==</source>
  </file>
  <file path="phpgit/src/GitRemoteRepo.php" generated-path="phpgit.src.GitRemoteRepo.html" hash="23bb47fdc39efbb16f8dd1af5dc46027" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhpGit" line="9" package="PhpGit">
      <extends/>
      <name>GitRemoteRepo</name>
      <full_name>\PhpGit\GitRemoteRepo</full_name>
      <docblock line="9">
        <description>Small class to interact with a git remote repo
Class GitRemoteRepo</description>
        <long-description></long-description>
        <tag name="package" line="9" description="PhpGit"/>
      </docblock>
      <property static="false" visibility="public" namespace="PhpGit" line="11" package="PhpGit">
        <name>$remoteRepoUrl_</name>
        <full_name>\PhpGit\GitRemoteRepo::remoteRepoUrl_</full_name>
        <default></default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="PhpGit" line="12" package="PhpGit">
        <name>$gitBinary_</name>
        <full_name>\PhpGit\GitRemoteRepo::gitBinary_</full_name>
        <default>'git'</default>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="PhpGit" line="13" package="PhpGit">
        <name>$config_</name>
        <full_name>\PhpGit\GitRemoteRepo::config_</full_name>
        <default>array()</default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="15" package="PhpGit">
        <name>__construct</name>
        <full_name>\PhpGit\GitRemoteRepo::__construct()</full_name>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="23" package="PhpGit">
        <name>cloneRepo</name>
        <full_name>\PhpGit\GitRemoteRepo::cloneRepo()</full_name>
        <docblock line="23">
          <description>This function is not called "clone" because .</description>
          <long-description>..
You can't call a class function clone.</long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$destination</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ref</name>
          <default>'master'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpGit" line="30" package="PhpGit">
        <name>archive</name>
        <full_name>\PhpGit\GitRemoteRepo::archive()</full_name>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ref</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="PhpGit" line="38" package="PhpGit">
        <name>runGit</name>
        <full_name>\PhpGit\GitRemoteRepo::runGit()</full_name>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$arguments</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50015">Argument $url is missing from the Docblock of __construct</error>
      <error line="15" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="23" code="PPC:ERR-50015">Argument $destination is missing from the Docblock of cloneRepo</error>
      <error line="23" code="PPC:ERR-50015">Argument $ref is missing from the Docblock of cloneRepo</error>
      <error line="30" code="PPC:ERR-50015">Argument $ref is missing from the Docblock of archive</error>
      <error line="30" code="PPC:ERR-50015">Argument $file is missing from the Docblock of archive</error>
      <error line="30" code="PPC:ERR-50008">No summary for method archive()</error>
      <error line="38" code="PPC:ERR-50015">Argument $arguments is missing from the Docblock of runGit</error>
      <error line="38" code="PPC:ERR-50008">No summary for method runGit()</error>
      <error line="11" code="PPC:ERR-50007">No summary for property $remoteRepoUrl_</error>
      <error line="12" code="PPC:ERR-50007">No summary for property $gitBinary_</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $config_</error>
    </parse_markers>
    <source>eJyNlNuO2jAQhu95itEK1QmCsO1lKbTqatVeVCratqoqVUJe4xBrHTvyARZVvPuOE8gBSLW+MfH8/8z4s82Hj0VWDBTNuS0o47DMii/Cwb/BAHBMR6NyhhH8yKmUwCS1FpwGoRw3lDnYCZcBhQ2aDM+14zgV+uS6K/WY8aGMPbRCn7DeE93UJY/r03Jml75TT2FsqYGhqUO/jFzNukHs57NQ1OxXMAeCX+RMwLRKxSZEqTF0H8WzJn3hH6VgkHrFnNAKVitUW2c8c9HQGxljL9AaQ5cJO1l0G8LMQduUPTQFaq4Vip9ob6rhb6UdMOTN13DDpFb8Bh45o95ySJKkbf2jPSoVqfR4EBW5OlnpbjumvbsspaH7aLjm1iG9sDxGzumc5NTigZOLnVOzCYArM5CEW0YLbjMuJYaiq2TihEDrOOo8yRzO7a1G4tlV5l7hLYmC/0xguPNGgeK7cI9+a/Mk1OZOF/u+rIf+C0ANy8SWR4HFeJgKyXtBHKV9GyQwmVQ05q+E9TpQ2FiPksDiyrmUe7gK7L9g24yM2FJ87jWklsPnXDl7wYjl6/AqqgLNC51dqsq+SdLk6tO8W7x5e45ae1d4137ZnbBhGLrtLvJnzqKQdXx047VnZ0aRQhTMC7iNO4EwXGb0rrxsf++fGS8CkYiE/7WQ2peAUirCi36PG1t+Xa7uv39LRF5IvebR8ftUPb5S/nQ8leLiSA6Dw+AFPSiX8g==</source>
  </file>
  <file path="oe-poetry-client/templates/messages/status.tpl.php" generated-path="oe-poetry-client.templates.messages.status.tpl.html" hash="00ada12cdc42493e67a430c0e639e322" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxtkDFvgzAQhXd+xQ1Ixihp9iYhkaIOHSpFTbfSwSIHWAIb+Y5I/PsanFIixYutu/fde77doau7aJOmEaRwLHWD4+ML265RjDAWXnxl6t6Ug/ztlJ8tshvyC7qbLpDy8yilfIZirjU9Iz6QSFVe+onUWUP+dWHFPUHchtZMETttKoj1FQ3rUqPzrU10yKLdmDh4rLNGDbbnRIRbrOBb/BMC9tlywgoEDx1OZUGTsSdEYdu2N7pQrK0JzD3NOquQT8t2In8kTCH2fxE87v/iPZIH7H22TaTcwhy8tA5VUcOjOqwBKZGg/DZCOAmvIwf+PPe7yxbT0VzvBtvoF+CZm8c=</source>
  </file>
  <file path="oe-poetry-client/templates/messages/request.tpl.php" generated-path="oe-poetry-client.templates.messages.request.tpl.html" hash="0b7bd5ee519903f7eae4dd1a7724838e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytkU1vgkAQhu/8ij2QAEbrvSq2wR56aGKUW+lhswy6CezS3cXEf9/hQ8SvFpJ6UJh5n3nfcebLfJ9b09HIIiPykvAUyocQsjylBkhZeMJK1T1QRaK3IFpLMOoYbUEdOAMdrUupjlrINnuu7xEfoDXdoXQD3wVoo6NAARKhokIjyqVoOsTOam07RhvFxY7YPAZheMJBYWtqLX1rXq5Qm078lB5lYVyn/nXG5NM5Ew5Z+N0JY+KYYw51uTGc+DswIVZdD9tMZlkhOKuy3eqCbtv1vjxS5Vmc0iCeS4F27gX23iZwPW9G2h14Qi6FKzCUpxpV5LmUEfz8Pf5MdWaDiHnym1cghaHMXJuV2kTimdj+IUCoJjarXzvw47Qn7ezSBzM2VkOCb8AUSrzGscLiwL/qmh3iu5WFYjDQsIWGOIVU4Xf/y7T66jCmeut1l0b6T2dJQIFgsJKsyHB8//z30GoVdd3otdUt1X9By/oB8M2fhw==</source>
  </file>
  <file path="oe-poetry-client/templates/messages/request-new-number.tpl.php" generated-path="oe-poetry-client.templates.messages.request-new-number.tpl.html" hash="89be98f535d688cb31f81c2b22c6d151" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxtjs1OwzAQhO9+ij1Esh219AFoU6QKIQ5UFfSGOZiwTS3FP9iborw9TgOhCE5ezcznmeU6HANblCWDEm4OpsXh2KMNrSaEQbjKytk96QjqdqN2Hin26gnjydSY1G6IJjVBBR1N+o94wJR0k6OP+N5hoqTukLb4se3sK0Yo7OhPaKJoXAOFeUNH5mAwZmvB1hVbDrPHonnV6t53JPj48hk88x+Cw6q6/GEGnPqAo/xVOK8apH1Whcx27a3tnKk1Ge/+5jaXtpAvEs57Vt9rMh68y3XiF3Y/LRBSXrNPymR8mg==</source>
  </file>
  <file path="oe-poetry-client/templates/wsdl.tpl.php" generated-path="oe-poetry-client.templates.wsdl.tpl.html" hash="122e8024f1ce0b6f74372032541d5291" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzNVctuGyEU3c9XIBopUqQap91Uo3m0jbJrUqvOIgtvyAy2UceAAHviv++FYSZ+ENvZdVYD95z74lzISrVUCbm5SdAN+j7nDXM/T2ylGmoZchsj2PHWDdVodn83m0hm9XY2ZXrDK2ZmEwc1s4F0ZZfcDAxjNRcLdFXRpnmh1V8wkKQssjK/zsrXVYM2TBsuRY5vR2OMmKhkDYQcr+388zdcFtdlkWQ1m3PBLeAMEnTFcvz7vsvjruFMWJyg3c9SvWD2EYBG0QrQay3SkwzIRJjUCnMx9tXUOV5aq1JC2rYdtV9HUi/Il/H4ljw//JpWS7aiUaaRVA1U43FmBCa37320pm6IW5F3+dCnky48u29m3I2Lcj6NGPUCVuFpGRyAoQsWPbOHzhagHq6otgG7NkxjZLcK/qHVaacjjEgcrqgxrdT1BygrsziBzkjI/YJK/oDMQJnvlaKZBU19IJaS2j4BOBpsAsbdQFIxTd1kBPSSirrZTcWjuFBri0KYHIPQ0/hp7Har87+2Z6hD+XudJkNifZF9WWH9woUTZ7TIn52t79lxzMMuOPmlvUdjt43ru6rAgabCuMjnx8XZ92u4rLc+9hvULX9U1t9px3fJp+DjqM/+hPb3diqT9RbBSOTYzzQDnYuTt9twkU67Xlx+VRwlRiKZBVX8l+kephZRYhBKWJruJYsK8VFaPueVZ++NtxzGOyJMFALElNtLOyYiWtca5gw1souYY3gn395OVBYHM+bS6IsKZcBrSXaeyyL5Bx+gcnU=</source>
  </file>
  <file path="oe-poetry-client/templates/notifications/status.tpl.php" generated-path="oe-poetry-client.templates.notifications.status.tpl.html" hash="4c619667c1f522924003aae3ef05de4c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytkL1qwzAUhXc/xR0Mskx+9jZxCqFDhpZA0qnqIOxrW2BLQpIDfvtKtus6EOhSLRL3nu+cg3YHXetom6YRpPBSigbD44qtbrhDCIONnwzbGzfAXo/srNCZnl3Q3ESOlp2D1LIZil0t7CPiDa3llZe+KydKkXMnlLTs4rjr7IcuPFxA3I6q2cA6I2QFsShQBgyNX22jQxbtQvkxbp01vFedS8h4kxV8kl+CwD5bOqyAuF7jMCZ2yPcEyVXbdnIqNjJTm3VWoTsu1wn9ojCU2P9U8LhW0mckd9hpjk0ofYa5eKkM8ryGe/X4G2gTCtx6Z278kMJT4MCfx3mTbOGOspgC/oy8DvB/Jkbf/57D2w==</source>
  </file>
  <file path="oe-poetry-client/templates/notifications/translation.tpl.php" generated-path="oe-poetry-client.templates.notifications.translation.tpl.html" hash="ed2741c6ad0660da2aad698499f4103f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxtjz9vgzAQxXc+xQ1ItlHS7E1CIkUdOjSK2mx1BwsOsAQ2sh0kvn1soIRI8eA/d+/37nl3aKs22iRJBAkcC1ljuFyxaWvhEELhzVeGbicM8I8Tv2h0puc/aDqZoeWXILV8hmJXSfuK+EJrRemlZ+1kITPhpFYeNELZenh8Y4aywxziZtTONtYZqUqIZY4qwGh8axMd0mgXvjAOXae16PXNUTKeZAW/5EEQ2KdLhxUQ17c4lIl7pPAYyXTT3NSUcQSnSOu0RHdatin7YzAk2f/n8HirlR9En7DPeTZlbAtz+kIbFFkFz+qrMH63lIGw3nh4MXgPGPj1etwkW5ijyif/bXQH8Yej4A==</source>
  </file>
  <file path="oe-poetry-client/templates/components/reference-document.tpl.php" generated-path="oe-poetry-client.templates.components.reference-document.tpl.html" hash="f8f3b3632f650f87f702cabc339e196e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyVk11vgjAUhu/7K7rECyVR7hdWRnC720LUO+tFhwdptEDaarL9+rXFj02hc1yRc973OU9IiOKmbFAYBAgH+LngO7AvCxDNjmnAdjAxE7c9MInpS0qzGrT8pHOQB56DopmNKnouDXTJVVfjDZRiGxNNa9HUFVRa0RkUIKHKYVrne2FGeJCftoYRopigaH3cncM4ip/aO2PCtJb8Y28UhpfqmGxAJ5fNaIRjQhA2zy3tnQkg0cMynSaLZOnQv0E2MLSE1YpEYXe/ZdvPiXmBr1Uypksr8WggLtltYmNek5bTa+L6P0ygWhuZ+A+5Of+CO+RszCvXcnrlXP/fcjMQTG7v0GuDXsETq1fxyOiVvCm8mh/Ee9IGPAddH3UsCPoGtesryA==</source>
  </file>
  <file path="oe-poetry-client/templates/components/contact.tpl.php" generated-path="oe-poetry-client.templates.components.contact.tpl.html" hash="2c19adc6d619ef7691afdb273615e4ed" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9kE+LwjAQxe/5FLPgQQvau2RTS/WoCOvNeIhx1GCblmYU/PabtFv/FNmcwrz3e28YnlTnisVRxCCC2dHkGD4bLKpcEUIYTPykUW+qBrnI5LpEqu/yB+ub0ejkOlidfEADOhv3iViic+rkrVlZVKVFS+FrSWmCge5mnoxZIhjXreSAJ99t6Fgootrsr75v+CTG4oSUPpXRCBIhGPjXhayMvlhVoOBf22yebtJtE/oe0ZmGgd/tBI/7dJsZbgbmCP0VFoUyeWifer6xvq7QqP/2//G98pZ7aUZ78OXhQp3FCfYLJVyTHw==</source>
  </file>
  <file path="oe-poetry-client/templates/components/source.tpl.php" generated-path="oe-poetry-client.templates.components.source.tpl.html" hash="8c1d9b2cd5ded1bcafddc848dc4889cf" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyFks1ugzAQhO88hSv1QCKl3As1RbQ9tRVScgs5uGQBS+FHtonUPn3XJiENcYGTtZ75dnZNELZl63jLpUOW5DnnB9CHDVTtgSkguvCAFXN7ZIKkr3GaNKDEd7oGceQZyDTRUpkOpntVcmlzfICUrEBp3FRtU0OtZLpuOpGhJzuX0Og5IXWCfZN1FRZOiiB86skrypQS/KvDpu7Ft6IFqOhys1iQkFKH4DdCfbIKaHC3jV+iTbQ13GuKFrjavtvRwLOYbdQ3XNUkVQv+oxpzT9UPQnhOxqMlTJV6qEckGKUlg9ZMZugh9gzG/CcD1HuMEc7E6r3vrC46/bS3CY0xbwSwrJx3EybxlZnAuxGohw3/wMBxz3L/ti2OcOrsXw9iZvPnh+M/MLdzrZnceQ+x79yYbTsfC6nzC1PRKSw=</source>
  </file>
  <file path="oe-poetry-client/templates/components/status.tpl.php" generated-path="oe-poetry-client.templates.components.status.tpl.html" hash="773e711746c5318ef2f1aeb38c5c1de5" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyFkEuLwjAUhff5FVdwoQWn+yGTTGldCoLdGRdRrxroi+YqzL+fpA9txXG6Kvec75xDuKwuFQuDgEEA3yeTof9JMa8yTQj+8OEujXrTNahlrNYlUv2jNljfzAGtWnurVXdoShdjXxErtFafnTUu86ossCCrNqTpamF66E8ODJkUjNtW4fKrTVwITVSb/dWVzR7+hTgjRQ9lPgcpBAP3dRGJGyX4ZBsnURptm7wx7Q0zj+12gocDqE3xTwTmBM+lqcnR1306snEOOr32trOFx50NNOjE4uhq5T8zulf9a0knvx1zjxjv6dFXk3qPYL8Xw7bl</source>
  </file>
  <file path="oe-poetry-client/templates/components/identifier.tpl.php" generated-path="oe-poetry-client.templates.components.identifier.tpl.html" hash="f404c9754ff9c03897b5a775af99339d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx1kkFPgzAYhu/9FT3ssJEod62wBD3soCGZMTHppdKPrclosS0k/ntbWhC141Lyvc/zvYSUlP25R3mWIZzhfSsu4F9eoesvzAL2g1s3mdKRaUyfKlorsPqLHkGPogFDa48aukgbexYmZTyDMezk0Ep1vZIgraEH7g7RCtB408xjJ+eoLBDh0DHJ4cALhN1DGsXhMcwGXZDyYSXdFCewlQO2O1wWJP/NBp9JCZDy3oHp6AUm8P7vYNHi7R/8Zeg+wAk7fOeciZ14OXSgVapgNqaKiK06QHLR3s+7rvYe4XMA2cD/ZhOTVPePNbUv6PX+EbQRSqaWvYUo7prBoPVMW5H8hNolUYlQNLTig7BJxUfNYkUQkXx1KdA3om7dnA==</source>
  </file>
  <file path="oe-poetry-client/templates/components/return-address.tpl.php" generated-path="oe-poetry-client.templates.components.return-address.tpl.html" hash="a91b1400a3e81614b8acdb5601d78ee4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyVkUtvgzAQhO/8ClfKoUFKuVeuHUR7rITS9BTn4IZNQA0PrU2q/vvaPEKCeKg+Ic83O7OY8iIuHM91HeKS9TE5g/3YQlqcpQZiL57MTaVeJBLxFogwB42/4gPwkhxAidCiSlxNCx0nasjxDkrJk0GDPC3yDDKtxAZ0iZkfRWhEsji0ivF7DmcORdB5iYTyl3rwikmtMfkqTeZjx6/YCbTfKcsl4Yw5xBxqdyTJkfTxTwVowWeDVmRF14FWY/RhF7z6W39XpQ+ZjXO/Z9S7Md1kQhaZWD5TI5RK/eQYjVVp9ck63ZD7SlfzaK2aa15gMqNh+hGtdW5LHY9vqOOZ7ay5v5kx/ftnbyCV+D1WpFYnq7QD7ss0xqE6LcL+AGRIE2w=</source>
  </file>
  <file path="oe-poetry-client/templates/components/details.tpl.php" generated-path="oe-poetry-client.templates.components.details.tpl.html" hash="7c72801b3e3517d04d9cb3761ff1a888" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJydlktvozAUhff8Ck/VRRupzX5EYSLoSFnMKGojzaJ04YGbxCrBjG1a5d/P5eEEgnlmRa7vOXy5OTbYbnpIreViYZEF+bFjMeQXWzimMVVA8sIjVorVTypI8OwFGw5KnIJXEJ8sBBls8lYZnEW36sCkSfELpKR7bPX4MeUJJEoGPijKYkluQ11D5dJyHcuO4EiTCByL4MfOQQnbkbtL54OzB+XFDC/X0d39PflO3LK7UGQSxAvsQEASgmN/e/P81Xb1ZrtPpNMDDd7fHXvZ1NYIIIkQwh2A2jIVQ5tIMSX6SSqhxigFk2//AhK/SfbXBMHFniZMUsV4UjVSbOzFahhquC6jybirTB246CfFHshEL6S2MfFV8hmT/JeBVGCgk2X+/TKlA2w1H43X0k+fW5rGLCx+nyn/9LI8bhtc+WlQo8+MSR6p+GhTiryOwxkYXynWSGfRZAwfYnpqU0RYZr0IlVATlIK5efLxnDRAYLWKw5gwlSZnoJp4MtaroiqThowX9TFM2uGc7oZyMtA6wb2inzBtrhDPmixWZVTrrb2MV6YatdtsHvY6kXhuZ7ldmzwVPIQoE3DdOkze8NXw3X4zsllt7p/41Jfd+7Xe9ZuroayaTC/7uGU2GXujJ9AzbMKip5uCLn83eXBAhjSFXifXuVnOOV7wD0io+b+PLovjgK7c5iFtT6npVQSr4yC0ft7d/3DxsYv5l8cjA8VXbbU3Rk0bHZ+G3ISWn9PVCfQfm0BmMQ==</source>
  </file>
  <file path="oe-poetry-client/templates/components/target.tpl.php" generated-path="oe-poetry-client.templates.components.target.tpl.html" hash="73510b6960b7685953fb96e4877b7baa" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytlE9vgjAYxu98is54UBPnfSKM4DxtiXHexEMHr0gGhbTVxG+/toCI/BHMOEl5nqfv86upbibHRJtNJhqaoPdDEIL8sYUoCTEHJBdexYr6esYUOR+2s46B04vzDfQcuMCctZQy52oa8mPA6hxfwBj2hdSOoyQmQLhwYeoDR0M3XxLGmWYamo45p8HPiQcxEWni0eWsKDigUaGeGsJtuVI0Go/RGxJOlD1YLS8GurlIZ5oawFycQLPfNAY3WwHxxG5Z4iGmEeYd0lZKmKWh0LdjDzrYPjHxT4JOZjTaK28gwvS3UrkELdUY+svOXlpba6dGqI8RGfu9oc9q7E08GkdbQogv7ZNJSVB8ak0qcJbyeh3JXVB+ytVmrbCyYnWsVKH+qCzXhYSD1xVZrn+MrpT8HwgbAp9EeVe8EWmu6492A/xEieV5VFw6wKpwlVHUB+weH7sRZmiI0/cajDf4rkGjq35e3ViUyPael6uodvOH9bYUEyZvW28lruj2v45UtJ7GfVjdcaiQ3qdgx4SLa7gv/sKmuLvpa2fuuf457uXehvYHUU8v1g==</source>
  </file>
  <file path="oe-poetry-client/templates/components/source-language.tpl.php" generated-path="oe-poetry-client.templates.components.source-language.tpl.html" hash="59bf0aa71c311a3f2797f58065ff0e5d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx1jtEKwiAYhe99Chu7WIPaC5gWq7uCwbrLLsT+tsE2Rd2gt08XFcHySs75zqeE6VqjLE0RTvH23rQQLmfodCsc4BCsfTK1ozCYH3JeKHDmwUswYyPB8iKgln9GsasbO7c4gbWi8miuOq166J3lpRqMhKPoq8FXOJbvygsyxCgiNyWHzgdfErdVrm6wiQjbvF5bUbBSaEi++xWtwAUsWS4xoxFF2J8ZWxG+RMniku93591lcv5aJiIJluuVkuyfAs1VFD0BZ693KQ==</source>
  </file>
  <file path="oe-poetry-client/templates/layout.tpl.php" generated-path="oe-poetry-client.templates.layout.tpl.html" hash="6d03aec0d1fd79809351b5ac815ab93f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJxlUV1rwyAUfc+vEClkK1Tb7WWUxAy2spduK20fNggMMbeN0KhT07T/fuaDjq2+qOfce7znmGSmNBEdjyM0Ro87eYD2sIXKHLgH1AIkIB175Bbli6d8pcHbc74Be5QCXL5qS11+aRr5UrpLh/NWqj0ayQKUlzsJ9oryZwNXoNBVVSspuJdaBZZGGUuyNE6yU3VAR7Au4CmekSlGoIQuQleKa7+bPOCMxRmLktX7Yrv+RKFeufnJyRSX3ps5pU3TkOaeaLund9PpjH68LjeihIpPpHKeKwEYhfq50m+8Ame4gJ5f6n6ei5JU3vJ9cE1AEKitNjxs9PllS00X05cbYhru5OQKzCIUVmLhuwbn0R+rKQ4u/9lHGcNIFgP1m2SHt+kNTHtssV6/e6ODw39MmAPRat3EQisfFOLbUNoPQodJQma0D41FPwb/rUM=</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Requests/CreateTranslationRequestSpec.php" generated-path="oe-poetry-client.spec.Messages.Requests.CreateTranslationRequestSpec.html" hash="fabf078163605d18e0e608d930d62a52" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Contact">\EC\Poetry\Messages\Components\Contact</namespace-alias>
    <namespace-alias name="Details">\EC\Poetry\Messages\Components\Details</namespace-alias>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="ReferenceDocument">\EC\Poetry\Messages\Components\ReferenceDocument</namespace-alias>
    <namespace-alias name="ReturnAddress">\EC\Poetry\Messages\Components\ReturnAddress</namespace-alias>
    <namespace-alias name="Source">\EC\Poetry\Messages\Components\Source</namespace-alias>
    <namespace-alias name="Target">\EC\Poetry\Messages\Components\Target</namespace-alias>
    <namespace-alias name="CreateTranslationRequest">\EC\Poetry\Messages\Requests\CreateTranslationRequest</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <namespace-alias name="ObjectBehavior">\PhpSpec\ObjectBehavior</namespace-alias>
    <namespace-alias name="AssertContactsTrait">\spec\EC\Poetry\Messages\Traits\AssertContactsTrait</namespace-alias>
    <namespace-alias name="AssertDetailsTrait">\spec\EC\Poetry\Messages\Traits\AssertDetailsTrait</namespace-alias>
    <namespace-alias name="AssertReferenceDocumentsTrait">\spec\EC\Poetry\Messages\Traits\AssertReferenceDocumentsTrait</namespace-alias>
    <namespace-alias name="AssertReturnAddressTrait">\spec\EC\Poetry\Messages\Traits\AssertReturnAddressTrait</namespace-alias>
    <namespace-alias name="AssertSourceTrait">\spec\EC\Poetry\Messages\Traits\AssertSourceTrait</namespace-alias>
    <namespace-alias name="AssertTargetsTrait">\spec\EC\Poetry\Messages\Traits\AssertTargetsTrait</namespace-alias>
    <class final="false" abstract="false" namespace="spec\EC\Poetry\Messages\Requests" line="22" package="Default">
      <extends>\PhpSpec\ObjectBehavior</extends>
      <name>CreateTranslationRequestSpec</name>
      <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec</full_name>
      <docblock line="22">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="22" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="31" package="Default">
        <name>let</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::let()</full_name>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="36" package="Default">
        <name>it_is_initializable</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::it_is_initializable()</full_name>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="41" package="Default">
        <name>it_has_details</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::it_has_details()</full_name>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$details1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$details2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="46" package="Default">
        <name>it_has_source</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::it_has_source()</full_name>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="51" package="Default">
        <name>it_has_return_address</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::it_has_return_address()</full_name>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddress1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnAddress2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="56" package="Default">
        <name>it_has_contacts</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::it_has_contacts()</full_name>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contact1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="61" package="Default">
        <name>it_has_reference_documents</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::it_has_reference_documents()</full_name>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$document1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="66" package="Default">
        <name>it_has_targets</name>
        <full_name>\spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec::it_has_targets()</full_name>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="24" package="spec\EC\Poetry\Messages\Traits">
        <name>assertDetails</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertDetailsTrait::assertDetails()</full_name>
        <docblock line="24">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Details" variable="$details1">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Details" variable="$details2">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$details1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$details2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
        <inherited_from>\spec\EC\Poetry\Messages\Traits\AssertDetailsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="24" package="spec\EC\Poetry\Messages\Traits">
        <name>assertSource</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertSourceTrait::assertSource()</full_name>
        <docblock line="24">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Source" variable="$source1">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Source" variable="$source2">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
        <inherited_from>\spec\EC\Poetry\Messages\Traits\AssertSourceTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="24" package="spec\EC\Poetry\Messages\Traits">
        <name>assertReturnAddress</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertReturnAddressTrait::assertReturnAddress()</full_name>
        <docblock line="24">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="$returnAddress1">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="$returnAddress2">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddress1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnAddress2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
        <inherited_from>\spec\EC\Poetry\Messages\Traits\AssertReturnAddressTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertContacts</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertContactsTrait::assertContacts()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact1">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact2">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact3">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact4">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contact1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <inherited_from>\spec\EC\Poetry\Messages\Traits\AssertContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertReferenceDocuments</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertReferenceDocumentsTrait::assertReferenceDocuments()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document1">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document2">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document3">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document4">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$document1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <inherited_from>\spec\EC\Poetry\Messages\Traits\AssertReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Requests" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertTargets</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertTargetsTrait::assertTargets()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target1">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target2">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target3">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target4">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <inherited_from>\spec\EC\Poetry\Messages\Traits\AssertTargetsTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="22" code="PPC:ERR-50005">No summary for class \spec\EC\Poetry\Messages\Requests\CreateTranslationRequestSpec</error>
      <error line="31" code="PPC:ERR-50015">Argument $identifier is missing from the Docblock of let</error>
      <error line="31" code="PPC:ERR-50015">Argument $settings is missing from the Docblock of let</error>
      <error line="31" code="PPC:ERR-50008">No summary for method let()</error>
      <error line="36" code="PPC:ERR-50008">No summary for method it_is_initializable()</error>
      <error line="41" code="PPC:ERR-50015">Argument $details1 is missing from the Docblock of it_has_details</error>
      <error line="41" code="PPC:ERR-50015">Argument $details2 is missing from the Docblock of it_has_details</error>
      <error line="41" code="PPC:ERR-50008">No summary for method it_has_details()</error>
      <error line="46" code="PPC:ERR-50015">Argument $source1 is missing from the Docblock of it_has_source</error>
      <error line="46" code="PPC:ERR-50015">Argument $source2 is missing from the Docblock of it_has_source</error>
      <error line="46" code="PPC:ERR-50008">No summary for method it_has_source()</error>
      <error line="51" code="PPC:ERR-50015">Argument $returnAddress1 is missing from the Docblock of it_has_return_address</error>
      <error line="51" code="PPC:ERR-50015">Argument $returnAddress2 is missing from the Docblock of it_has_return_address</error>
      <error line="51" code="PPC:ERR-50008">No summary for method it_has_return_address()</error>
      <error line="56" code="PPC:ERR-50015">Argument $contact1 is missing from the Docblock of it_has_contacts</error>
      <error line="56" code="PPC:ERR-50015">Argument $contact2 is missing from the Docblock of it_has_contacts</error>
      <error line="56" code="PPC:ERR-50015">Argument $contact3 is missing from the Docblock of it_has_contacts</error>
      <error line="56" code="PPC:ERR-50015">Argument $contact4 is missing from the Docblock of it_has_contacts</error>
      <error line="56" code="PPC:ERR-50008">No summary for method it_has_contacts()</error>
      <error line="61" code="PPC:ERR-50015">Argument $document1 is missing from the Docblock of it_has_reference_documents</error>
      <error line="61" code="PPC:ERR-50015">Argument $document2 is missing from the Docblock of it_has_reference_documents</error>
      <error line="61" code="PPC:ERR-50015">Argument $document3 is missing from the Docblock of it_has_reference_documents</error>
      <error line="61" code="PPC:ERR-50015">Argument $document4 is missing from the Docblock of it_has_reference_documents</error>
      <error line="61" code="PPC:ERR-50008">No summary for method it_has_reference_documents()</error>
      <error line="66" code="PPC:ERR-50015">Argument $target1 is missing from the Docblock of it_has_targets</error>
      <error line="66" code="PPC:ERR-50015">Argument $target2 is missing from the Docblock of it_has_targets</error>
      <error line="66" code="PPC:ERR-50015">Argument $target3 is missing from the Docblock of it_has_targets</error>
      <error line="66" code="PPC:ERR-50015">Argument $target4 is missing from the Docblock of it_has_targets</error>
      <error line="66" code="PPC:ERR-50008">No summary for method it_has_targets()</error>
    </parse_markers>
    <source>eJydVMGO0zAQvecrfMjBSMuBltMuAi1dJDggVttKXCpFrjNtjFIneJyKBe2/4yROYyeNScmhdmfmvRnP8/jdhzIro0iyI2DJOBAsgW8/rbaPBWj1vP0KiOwAuH2CnxWgxrsoqhDIhYhVcSwLCVLXW6kZ13czQh9AM5HjnNAvqVnEXoCaE/0Ee1AgOTwUvDoa0zyQrpS8T1NlnHMA66JSHOZEbpg6wHQRXX+3KwVMw0YxiTnTopDWM0SuQZ0EN8g1aC3kwZb7mJXrWsJvux/A9UfI2EkUtmFT2ppkwmS+RwSlrXbYGK/AWSGvhY1k+g8GR7Nrwa1+16JaLbtkEc8ZIpkSrpaDwC8NMkXiyxL9iYj56ryXmuj7vFJ916UW+BEDVYfwCQ38sMGpa+e+krw+KslB034+SSzO+xvSXVASo929asDt4esv1pnA1+93YMpErSquIf0udEY9nh7eVvYyqEHoRGAipNCC5eI32+VAJzJhVlR5+pmdYPNcAp2S7va2kXY6X8YwSVvNqNWOxNbw5oYMTYuJcpgrPnUIemCwBGyuBm1viOlTsxq4bwhnb2NpDz6jgqlVc/US1t496t1EEiv3r+EMucPleUg6Ih5SBWvmdhionQoSW4shGpoWY9NybHobrL0bPurkcfgd3p7vH023A5uk3cTS0RCby2N3TeMnvYugdxn0hs89fleoW5NbgZvPYe+6UP9e7IRu3yTavk0mfbMact+wGBqWQ0P4JPbpoz1/T9wznqm6sl+iv+JnQgY=</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Responses/StatusSpec.php" generated-path="oe-poetry-client.spec.Messages.Responses.StatusSpec.html" hash="7020dbb56ec3edd769fa6cf9462b7e5d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ObjectBehavior">\PhpSpec\ObjectBehavior</namespace-alias>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="Status">\EC\Poetry\Messages\Responses\Status</namespace-alias>
    <namespace-alias name="Component">\EC\Poetry\Messages\Components</namespace-alias>
    <namespace-alias name="AssertStatusesTrait">\spec\EC\Poetry\Messages\Traits\AssertStatusesTrait</namespace-alias>
    <class final="false" abstract="false" namespace="spec\EC\Poetry\Messages\Responses" line="11" package="Default">
      <extends>\PhpSpec\ObjectBehavior</extends>
      <name>StatusSpec</name>
      <full_name>\spec\EC\Poetry\Messages\Responses\StatusSpec</full_name>
      <docblock line="11">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="11" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Responses" line="15" package="Default">
        <name>let</name>
        <full_name>\spec\EC\Poetry\Messages\Responses\StatusSpec::let()</full_name>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Responses" line="20" package="Default">
        <name>it_is_initializable</name>
        <full_name>\spec\EC\Poetry\Messages\Responses\StatusSpec::it_is_initializable()</full_name>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Responses" line="25" package="Default">
        <name>it_has_contacts</name>
        <full_name>\spec\EC\Poetry\Messages\Responses\StatusSpec::it_has_contacts()</full_name>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$status1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Responses" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertStatuses</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertStatusesTrait::assertStatuses()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status1">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status2">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status3">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status4">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$status1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <inherited_from>\spec\EC\Poetry\Messages\Traits\AssertStatusesTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50005">No summary for class \spec\EC\Poetry\Messages\Responses\StatusSpec</error>
      <error line="15" code="PPC:ERR-50015">Argument $identifier is missing from the Docblock of let</error>
      <error line="15" code="PPC:ERR-50008">No summary for method let()</error>
      <error line="20" code="PPC:ERR-50008">No summary for method it_is_initializable()</error>
      <error line="25" code="PPC:ERR-50015">Argument $status1 is missing from the Docblock of it_has_contacts</error>
      <error line="25" code="PPC:ERR-50015">Argument $status2 is missing from the Docblock of it_has_contacts</error>
      <error line="25" code="PPC:ERR-50015">Argument $status3 is missing from the Docblock of it_has_contacts</error>
      <error line="25" code="PPC:ERR-50015">Argument $status4 is missing from the Docblock of it_has_contacts</error>
      <error line="25" code="PPC:ERR-50008">No summary for method it_has_contacts()</error>
    </parse_markers>
    <source>eJyNUctOwzAQvPsrfOghSHDgcWoRCCIkOCAqWolLpGrrbPGi1I6ym4qC+u84CSQU1RK+2N6ZnfGsL69LWyrlYI1cgkHNJZrsLs2mHqXaZo/IDK/I2XPAvWPkiVI1o57actZQn5ZvaOQWLWzIV5MWO9Ce+nVoRyecPeRhoxVhnN2bZTMBqfkfshpY97eOH4syr4DCO26YsZLOALkthmymAGbdVZuAGt8FXc56P6j6VDqsxuawToOuameEvNMFSjLE1iPqz0ctsRNr1kgs8cnVEtOQX6raCOYvJDb53TNp6bs/JiQL4gU5EoKCPmBZYBKRZ+vrIr+HDc63JSbd28fjNntc3QIvjHcCRjjpZ/39RXrE7X56rGPQWRw6j0MXkQywN/ZksB/cBvFe6yfcTn0BOvQHhA==</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Components/IdentifierSpec.php" generated-path="oe-poetry-client.spec.Messages.Components.IdentifierSpec.html" hash="ebe92856e3e6481aecac94c10157a2df" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="Poetry">\EC\Poetry\Poetry</namespace-alias>
    <namespace-alias name="ObjectBehavior">\PhpSpec\ObjectBehavior</namespace-alias>
    <namespace-alias name="Argument">\Prophecy\Argument</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="RecursiveValidator">\Symfony\Component\Validator\Validator\RecursiveValidator</namespace-alias>
    <class final="false" abstract="false" namespace="spec\EC\Poetry\Messages\Components" line="12" package="Default">
      <extends>\PhpSpec\ObjectBehavior</extends>
      <name>IdentifierSpec</name>
      <full_name>\spec\EC\Poetry\Messages\Components\IdentifierSpec</full_name>
      <docblock line="12">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="12" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Components" line="14" package="Default">
        <name>it_is_initializable</name>
        <full_name>\spec\EC\Poetry\Messages\Components\IdentifierSpec::it_is_initializable()</full_name>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Components" line="19" package="Default">
        <name>it_returns_formatted_identifier</name>
        <full_name>\spec\EC\Poetry\Messages\Components\IdentifierSpec::it_returns_formatted_identifier()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Components" line="31" package="Default">
        <name>it_should_have_setters_and_getters_working</name>
        <full_name>\spec\EC\Poetry\Messages\Components\IdentifierSpec::it_should_have_setters_and_getters_working()</full_name>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="12" code="PPC:ERR-50005">No summary for class \spec\EC\Poetry\Messages\Components\IdentifierSpec</error>
      <error line="14" code="PPC:ERR-50008">No summary for method it_is_initializable()</error>
      <error line="19" code="PPC:ERR-50008">No summary for method it_returns_formatted_identifier()</error>
      <error line="31" code="PPC:ERR-50008">No summary for method it_should_have_setters_and_getters_working()</error>
    </parse_markers>
    <source>eJyVUk1P4zAQvftX5LBSksMq4vNAEQiqRcuhuxWskFayFE2daeKlsS3b6RJQ/zuO0yZQAhRfbM+b92bm2afnqlCECCjRKGAYGIWM/hjTqUSrazpBYyBHQ8eyVFKgsGZESGUw+DCHXmdu43OOerSV3W5tdFqo26be79k/ZPYSC1hyuWZMtVQFsppe6LwqnVobvq3LuRR1X4vewYJnYKWmE1CKi5yOF2DMBC24MHxO6083yCpt+BK7kBuWNWpBP1DTcYAPFkVmgtedkycSuDWvBLNcioDblJuUC265E3yE2QKj2Ke0ic36Zgtuvp+ZQlaL7Ccs8U+tMOrLnZz4BuKRZ6zImwoabaWFSedSl2AtZinvyO9WQzuWGUbhXhh3WLM89BdBR+H+EPSrKmdONjwYAu/QmSdFFB4OoVPQNgqPBiEts4o59PgNmqO92gx2vT3XCxFv3423wk2V7CcHyWFylDjBd41rOal7OkxdE9Z1n4LI0nx9/i/1vftOn3oIMxbGvlN/j7e78fhogN751StsQruLdN71IpvQF0T827xQaO670ze/ohdYR3aXaP9cL+DvH9FXZEWeAeJIfbI=</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Components/DetailsSpec.php" generated-path="oe-poetry-client.spec.Messages.Components.DetailsSpec.html" hash="c9aac70bc1a5c767ad97115b437b0bc8" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Details">\EC\Poetry\Messages\Components\Details</namespace-alias>
    <namespace-alias name="ObjectBehavior">\PhpSpec\ObjectBehavior</namespace-alias>
    <namespace-alias name="Argument">\Prophecy\Argument</namespace-alias>
    <class final="false" abstract="false" namespace="spec\EC\Poetry\Messages\Components" line="9" package="Default">
      <extends>\PhpSpec\ObjectBehavior</extends>
      <name>DetailsSpec</name>
      <full_name>\spec\EC\Poetry\Messages\Components\DetailsSpec</full_name>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Components" line="11" package="Default">
        <name>it_is_initializable</name>
        <full_name>\spec\EC\Poetry\Messages\Components\DetailsSpec::it_is_initializable()</full_name>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Components" line="16" package="Default">
        <name>it_should_have_setters_and_getters_working</name>
        <full_name>\spec\EC\Poetry\Messages\Components\DetailsSpec::it_should_have_setters_and_getters_working()</full_name>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="9" code="PPC:ERR-50005">No summary for class \spec\EC\Poetry\Messages\Components\DetailsSpec</error>
      <error line="11" code="PPC:ERR-50008">No summary for method it_is_initializable()</error>
      <error line="16" code="PPC:ERR-50008">No summary for method it_should_have_setters_and_getters_working()</error>
    </parse_markers>
    <source>eJyVk8FO4zAQhu9+ihyQaA+8AF2BoF20PawWUY6RItcZkgHX9nrGXQrqu+OkQcTQRYlPzj8z3/z2OD8uXe2EMHID5KSCjByo/Oc8v7XAfpf/BiJZAeVzu3HWgGGaCREIsm9z8gWwRB1zm9Tb2q0a7J/1Iyi+hlpu0fou5q2rQe3yK1+FTayNeKUlUdYhmsoMnhlMSVlKEK8ii+shGMVoTYZcIBVokFFqfJFrDZNpm3JIbNYJ10hnF1TboMtfcgv3OweTrtf5edt6OmvT9+IL/lBWxPZQEDCDp0Kasqi6/T/rn9BU/+0KPNcYD7ksJ6dyrU6nZxdVT5u+G7sDDt50ObMjmCvnNCrZ+EpZaWAEMHBtfUI6KMMRd/A3AMV76FM+xOGge+Q4uR7kIIxxspH+KbXRKiM8NM+ib6H5Hl6+iGdG046hT+nLw2HxH1FQBp8Y+hDHuNJyl/pphNEjXkiGI0Nu5eGwFUsO1Od0ynDE0sSXtQK/RQUJKQ2MBC5NnBKHz8P7Ehtzbw/gwSi4QQ107HkeiX+H34u9eANLHtxy</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Traits/AssertSourceTrait.php" generated-path="oe-poetry-client.spec.Messages.Traits.AssertSourceTrait.html" hash="f6b585488354f69cb32cb794514823df" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Source">\EC\Poetry\Messages\Components\Source</namespace-alias>
    <trait namespace="spec\EC\Poetry\Messages\Traits" line="16" package="spec\EC\Poetry\Messages\Traits">
      <name>AssertSourceTrait</name>
      <full_name>\spec\EC\Poetry\Messages\Traits\AssertSourceTrait</full_name>
      <docblock line="16">
        <description>Trait AssertDetailsTrait</description>
        <long-description></long-description>
        <tag name="method" line="16" description="" method_name="setSource"/>
        <tag name="method" line="16" description="" method_name="getSource"/>
        <tag name="method" line="16" description="" method_name="withSource"/>
        <tag name="package" line="16" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Traits" line="24" package="spec\EC\Poetry\Messages\Traits">
        <name>assertSource</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertSourceTrait::assertSource()</full_name>
        <docblock line="24">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Source" variable="$source1">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Source" variable="$source2">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytUj1PwzAQ3f0rbuiQREBExhYBpTAwIBAwZrGSaxOR2JHvIoRQ/zuO84EpkTrALSfde8/vnu2Lq6ZohFCyRmpkhkANZundJn3SyOYjfUAiuUNKX40smVZCtIQwg2903WiFiil90a3J0FLjKBIQgZPCmggN3yLLsiI3slgHX9fIhc6BkHtl0DdY5I4c+qTdRPoxfi+58OYOsnHe7GpHEllqLNjbsD+mX/BTgC0Xo6tooMAU9mwARtyaGlnDnN2vC4IFuX7+F3EyiGPXt63KuNQKpBclGH1OJlHo2H26rhZclHR6+f0CoyS0w0K3Vf6M3BoVOGK4OhR6r3IoGA+y3+GYW/JfbsmMm/9DRtUNrtW9IpYqw8ft8O2Wy6yy1zfY7sVefAH1NAM+</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Traits/AssertStatusesTrait.php" generated-path="oe-poetry-client.spec.Messages.Traits.AssertStatusesTrait.html" hash="f4e802ef68b6324f01fd11945e1bf56e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Component">\EC\Poetry\Messages\Components</namespace-alias>
    <trait namespace="spec\EC\Poetry\Messages\Traits" line="17" package="spec\EC\Poetry\Messages\Traits">
      <name>AssertStatusesTrait</name>
      <full_name>\spec\EC\Poetry\Messages\Traits\AssertStatusesTrait</full_name>
      <docblock line="17">
        <description>Trait AssertTargetsTrait</description>
        <long-description></long-description>
        <tag name="method" line="17" description="" method_name="addStatus"/>
        <tag name="method" line="17" description="" method_name="setStatuses"/>
        <tag name="method" line="17" description="" method_name="getStatuses"/>
        <tag name="method" line="17" description="" method_name="withStatus"/>
        <tag name="package" line="17" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Traits" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertStatuses</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertStatusesTrait::assertStatuses()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status1">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status2">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status3">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Status" variable="$status4">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$status1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVE1vgkAQve+v2EMPQLRW9KSNrTU99NCPtN7EwwZGIZWFMEsa0/jfuyALi5LQoHtZ2Hnvzcxj2PuH2I8J4SwEjJkLFGNwneeF8xGBSPbOKyCyLaCzTFggcEpIikAb4osojCMOXCBlSMs3SRhYFqEWzQXoHBESsWTJFgTmRzKWhR9DEH7kUeZ5X4KJFI1Swzke0BvMd1OHI4hjFNBgScL2CgV13FbD1QI/gfCLhKYqRRrxLZtq8UJCB0RoXakEx7Z+CZUrbz5bVgGqrLktAiou0yYspE0JK3NPvBheQrYvIY8uIY8L8iDfNyl3RRBxOTi6jYbqsVcW3KNl+upxbOYqR7+zdSP8APuzapKUkNmfoR+lO+8TRJpwIwea01ai/U9ibcgU5Qnm2VwaLfDV3bpiVBW3kIYNJFuSTln6b7KqLFQOrrs0qFX8FolORdd4dheHRl0cGjc4pN8D2qfjL1xyuAvvm7MLaTJxd3Jkzyu4pla9G3t9Xb1RN70DOZA/j+EJsA==</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Traits/AssertReturnAddressTrait.php" generated-path="oe-poetry-client.spec.Messages.Traits.AssertReturnAddressTrait.html" hash="ec94dd3a9f70f02d1fc7b4b767b51996" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ReturnAddress">\EC\Poetry\Messages\Components\ReturnAddress</namespace-alias>
    <trait namespace="spec\EC\Poetry\Messages\Traits" line="16" package="spec\EC\Poetry\Messages\Traits">
      <name>AssertReturnAddressTrait</name>
      <full_name>\spec\EC\Poetry\Messages\Traits\AssertReturnAddressTrait</full_name>
      <docblock line="16">
        <description>Trait AssertReturnAddressTrait.</description>
        <long-description></long-description>
        <tag name="method" line="16" description="" method_name="getReturnAddress"/>
        <tag name="method" line="16" description="" method_name="setReturnAddress"/>
        <tag name="method" line="16" description="" method_name="withReturnAddress"/>
        <tag name="package" line="16" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Traits" line="24" package="spec\EC\Poetry\Messages\Traits">
        <name>assertReturnAddress</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertReturnAddressTrait::assertReturnAddress()</full_name>
        <docblock line="24">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="$returnAddress1">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="$returnAddress2">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddress1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnAddress2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1UrFOwzAQ3f0VN3RIImhExhYBoWJgQCDEmMVKrk1EY0c+Rwih/jsXN0WNk4KQ4BbLeu+e3zvf5XVTNkIoWSM1MkegBvPsbpU9abTmPXtAIrlByl6MrCwthWgJYQJf6brRCpWl7Blta1RaFIZB7oijSEAETgFSIjR2QHHAnCkd66ZGW+oCNjgkBeExSj46uMHMHF8HnW+VLcfCjsH5XznLDyNgaizst1nEhwAul7urqGfC15DmPXDA+W0ja5h69dRgvZAXfyeV9FKxO9etym2lFchx2sDzcOYrhU5iP46uZras6Pxq9H2eTsiUUrfbYs8KXFu49GXGO+L3ebK8jL9zkvyPk2TCycRiHjRuMVX3iqxUOT6uh7u+WORb/pne0k7sxCe7bEoC</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Traits/AssertDetailsTrait.php" generated-path="oe-poetry-client.spec.Messages.Traits.AssertDetailsTrait.html" hash="451d6faa0a4e2914fca314c7563a06fc" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Details">\EC\Poetry\Messages\Components\Details</namespace-alias>
    <trait namespace="spec\EC\Poetry\Messages\Traits" line="16" package="spec\EC\Poetry\Messages\Traits">
      <name>AssertDetailsTrait</name>
      <full_name>\spec\EC\Poetry\Messages\Traits\AssertDetailsTrait</full_name>
      <docblock line="16">
        <description>Trait AssertDetailsTrait</description>
        <long-description></long-description>
        <tag name="method" line="16" description="" method_name="getDetails"/>
        <tag name="method" line="16" description="" method_name="setDetails"/>
        <tag name="method" line="16" description="" method_name="withDetails"/>
        <tag name="package" line="16" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Traits" line="24" package="spec\EC\Poetry\Messages\Traits">
        <name>assertDetails</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertDetailsTrait::assertDetails()</full_name>
        <docblock line="24">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Details" variable="$details1">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\Components\Details" variable="$details2">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$details1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$details2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytUrFOwzAQ3f0VN3RIIiAiY4uAUhgYEAgxZrGSaxOR2FHuIoRQ/x3H2GnaBnWAWxzde8/P73JXN03RCKFkjdTIDIEazNKHVfqikdvP9AmJ5AYpfWtlybQQoiOECXyl60YrVEzpPbIsq54bR5GACKwWlkTYsgNty2A9fFsjFzqHDXo0CMd92vXdCbPcfuzRPkouxnqLmUzv5n0nYhlqLPi3V34JMGWz9BU5DgyRLxzgcePayhqm/I7H5LPQ5d/kiZPH9lx3KuNSK5DjPMHgdbbThVbwE7KvGRclnV+Ppj6oQtMudFflr8hdqwJLDReH0vGPPFQMV5n1OO2Y/J9jMuG4tzJed4dL9aiIpcrwee1Xbj7PKjNLZ70VW/ENDAwK4Q==</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Traits/AssertContactsTrait.php" generated-path="oe-poetry-client.spec.Messages.Traits.AssertContactsTrait.html" hash="abe36959fce09b78edd416e976057497" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Contact">\EC\Poetry\Messages\Components\Contact</namespace-alias>
    <trait namespace="spec\EC\Poetry\Messages\Traits" line="17" package="spec\EC\Poetry\Messages\Traits">
      <name>AssertContactsTrait</name>
      <full_name>\spec\EC\Poetry\Messages\Traits\AssertContactsTrait</full_name>
      <docblock line="17">
        <description>Trait AssertContactsTrait</description>
        <long-description></long-description>
        <tag name="method" line="17" description="" method_name="addContact"/>
        <tag name="method" line="17" description="" method_name="getContacts"/>
        <tag name="method" line="17" description="" method_name="setContacts"/>
        <tag name="method" line="17" description="" method_name="withContact"/>
        <tag name="package" line="17" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Traits" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertContacts</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertContactsTrait::assertContacts()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact1">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact2">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact3">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Contact" variable="$contact4">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contact1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$contact4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVLtuwjAU3f0VHhiSqJSSMEFFS1GHDn2o6kYYLMeQqMSOch1VqOLf64Q87JIKGvCSq5xz7uPkxrd3SZggxEnMICGUYUgY9R/n/ptgMt36zwyArBn4HymJJEwQyoDhFnwu4kRwxmUeckmoVNyB4yDs4EKLZwAslSUIxTsF5vh9zGQoAkyCoISt8ol7dB/YOm/N6jSWAYAGkDQl21oPBu8rkmFVya6aUON/qlGOOKCoAyT/HOgbYXWKufPjlCRc23NdAhWuyqYkxm0FDy2txxmeJ3fPk3vnyUelfFA8VxmnMhIcE8NOqx71qmm7Cb0mHNlFnr3z+enJMIL+VNumOpfdn0Iosk3wzmSWcqug2pMTpO6JUmM3K8kDm+XbaB2hL26WjUJr+ohq2KZyleq3TP89Fm1OLrsMqXX9ImS3xk2h28knr5NPoxafjOtB+4b8iYMknLLXVXVBjcd0oxb3sPQlcpjtu8uLpPH+lWaHdugH3wf7uQ==</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Traits/AssertTargetsTrait.php" generated-path="oe-poetry-client.spec.Messages.Traits.AssertTargetsTrait.html" hash="a13042fda18088aedbd868e93814b727" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Target">\EC\Poetry\Messages\Components\Target</namespace-alias>
    <trait namespace="spec\EC\Poetry\Messages\Traits" line="17" package="spec\EC\Poetry\Messages\Traits">
      <name>AssertTargetsTrait</name>
      <full_name>\spec\EC\Poetry\Messages\Traits\AssertTargetsTrait</full_name>
      <docblock line="17">
        <description>Trait AssertTargetsTrait</description>
        <long-description></long-description>
        <tag name="method" line="17" description="" method_name="addTarget"/>
        <tag name="method" line="17" description="" method_name="setTargets"/>
        <tag name="method" line="17" description="" method_name="getTargets"/>
        <tag name="method" line="17" description="" method_name="withTarget"/>
        <tag name="package" line="17" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Traits" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertTargets</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertTargetsTrait::assertTargets()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target1">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target2">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target3">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\Target" variable="$target4">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVD1vwjAQ3f0rPDAkUSklMEFFS1GHDv1Q1Y0wWMlBohI7sh1VqOK/1/kwcUoKbVIvjnzv3bt7Ofv6JgkThCiJQSTEBywS8L37hffCQPKd9whCkA0I742TSIopQqkA3BBfsDhhFKhUUMI3IBV04DgIOzin4rkQwGURE/mRimXh2xhkyAJMgqCIWsWGezLfbRMkQKewCOdkh3sB89M4063hNhWudv4RybBUsbW+6vtd9XCmdQUdIPlTK58Iq5U3nC2nxOCDLZdlQMeVKicxbtI7slI7MexCdruQR13I45I8yPd1Sn0ZMYqJ6aKlW7w41HuBD+rV59jOkxR2Z6snw0j0Z9Xw6ER2fyZClm6DV5App1YOtKdnie4vieaEacYdzLOhtE6jl1erilDVe5ozbOC4ivOdZFyQZWWfdm/Vojmj3Ccm21Rco7ktzBm1MGfcYI55+41/Rh+okIT68Lwu357JxN+q+TyW7Z6hVri7+ocko78k2aM9+gKEduiy</source>
  </file>
  <file path="oe-poetry-client/spec/Messages/Traits/AssertReferenceDocumentsTrait.php" generated-path="oe-poetry-client.spec.Messages.Traits.AssertReferenceDocumentsTrait.html" hash="d85ca0bde4554705e86a6f6a44209812" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ReferenceDocument">\EC\Poetry\Messages\Components\ReferenceDocument</namespace-alias>
    <trait namespace="spec\EC\Poetry\Messages\Traits" line="17" package="spec\EC\Poetry\Messages\Traits">
      <name>AssertReferenceDocumentsTrait</name>
      <full_name>\spec\EC\Poetry\Messages\Traits\AssertReferenceDocumentsTrait</full_name>
      <docblock line="17">
        <description>Trait AssertReferenceDocumentsTrait</description>
        <long-description></long-description>
        <tag name="method" line="17" description="" method_name="addReferenceDocument"/>
        <tag name="method" line="17" description="" method_name="setReferenceDocuments"/>
        <tag name="method" line="17" description="" method_name="getReferenceDocuments"/>
        <tag name="method" line="17" description="" method_name="withReferenceDocument"/>
        <tag name="package" line="17" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="spec\EC\Poetry\Messages\Traits" line="27" package="spec\EC\Poetry\Messages\Traits">
        <name>assertReferenceDocuments</name>
        <full_name>\spec\EC\Poetry\Messages\Traits\AssertReferenceDocumentsTrait::assertReferenceDocuments()</full_name>
        <docblock line="27">
          <description>Assert Component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document1">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document2">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document3">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="param" line="27" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$document4">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$document1</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document2</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document3</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$document4</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1lE1Pg0AQhu/7K/bQAxBrLfTUmmqtHjz4EeOt9LCBaSGWXcIsMY3pf3eLVGhZFKXdCxtm3mdn3v24vIqDmBDOIsCYeUAxBs+9m7rPAmSydh8AkS0B3deEhRJHhKQIVBOfiigWHLhE9wUWkAD34FZ4aaR+KVXPsgi1aEahE0RIZCUNs6hK22ZeRyAD4VPm+5VEo/KHdvx8ZpbFCJpVDJYkbF0ocE+y1Er2Ut5DGVRrMneFKxvflCW/OKlSe0Q2sOODUDUy/7bDytPpt+HneWAXVwUkLKK6pX/apMKQ/tFI9tFIztFIg5zUy76LlHsyFJyymk0wClvOSo2V5k5pPjAz6teebUdHBiF2x9pTXJDN7hgDka5UkkwTbmQqc/Q3it2QUnPCd+IbmGzvh9FYOLuYF9pyU40BfS3AVoBDgv5Cz/R7MW9nSKmvRyFbt3bAsNv667T1d6Dxt+ZpK50Nfs9RMhV9WlSf4eHQW6mLVK3sVNy6ju35ydDOP9EbsiGfYyiBAg==</source>
  </file>
  <file path="oe-poetry-client/src/Events/Notifications/AbstractNotificationEvent.php" generated-path="oe-poetry-client.src.Events.Notifications.AbstractNotificationEvent.html" hash="dee0fc3e1a4ba7abd4fee8bc19427e33" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="NotificationEventInterface">\EC\Poetry\Events\NotificationEventInterface</namespace-alias>
    <namespace-alias name="Event">\Symfony\Component\EventDispatcher\Event</namespace-alias>
    <namespace-alias name="MessageInterface">\EC\Poetry\Messages\MessageInterface</namespace-alias>
    <namespace-alias name="MessageAwareTrait">\EC\Poetry\Messages\Traits\MessageAwareTrait</namespace-alias>
    <class final="false" abstract="true" namespace="EC\Poetry\Events\Notifications" line="15" package="EC\Poetry\Events\Notifications">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <implements>\EC\Poetry\Events\NotificationEventInterface</implements>
      <name>AbstractNotificationEvent</name>
      <full_name>\EC\Poetry\Events\Notifications\AbstractNotificationEvent</full_name>
      <docblock line="15">
        <description>Class AbstractNotificationEvent</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Events\Notifications"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Events\Notifications" line="18" package="EC\Poetry\Messages\Traits">
        <name>$message</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::message</full_name>
        <default>null</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\EC\Poetry\Messages\MessageInterface" variable="">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="24" package="EC\Poetry\Events\Notifications">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\Notifications\AbstractNotificationEvent::__construct()</full_name>
        <docblock line="24">
          <description>AbstractNotificationEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$message">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="23" package="EC\Poetry\Messages\Traits">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::getMessage()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="31" package="EC\Poetry\Messages\Traits">
        <name>setMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::setMessage()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="39" package="EC\Poetry\Messages\Traits">
        <name>hasMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::hasMessage()</full_name>
        <docblock line="39">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyNUE1PwzAMvedX+LADVIL+gPI1lR04gJDgWGnKgksjmqSKXWBC++8kadfD2Ae+JLbfe/bz1W3XdEJYaZA6qRAWZfXskP26WnyiZaqeHOtaK8naWSqE6OkEKJUeLKOvg2CRCC9rUzu7rkpnOmdDfyDe6zCUVYN+yIsd9Uckku9I28+O6h7gq5eaJ/z8S3pMpbB4nmUCMihbSQTzFbGXiv8sHiARdReO8REUTtwjQHMhRy1Qx6UBvxntG8GQadO1aKImHD6f+BEQIrrd5yn2kq8Y2ZHRKizLvlfs/OWI3pKCVS8NVP84O8zMUBm5eXq7ftVqBXVvVRwIy+U07eygwnmiDu5izLjRdHEzduF6AhYJshEb8Qt3U+x+</source>
  </file>
  <file path="oe-poetry-client/src/Events/Notifications/StatusUpdatedEvent.php" generated-path="oe-poetry-client.src.Events.Notifications.StatusUpdatedEvent.html" hash="d312f1e0fa4090ec05edb9bd53daa74f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Events\Notifications" line="10" package="EC\Poetry\Events">
      <extends>\EC\Poetry\Events\Notifications\AbstractNotificationEvent</extends>
      <name>StatusUpdatedEvent</name>
      <full_name>\EC\Poetry\Events\Notifications\StatusUpdatedEvent</full_name>
      <docblock line="10">
        <description>Class StatusUpdatedEvent</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Events"/>
        <tag name="inherited_from" description="\EC\Poetry\Events\Notifications\AbstractNotificationEvent" refers="\EC\Poetry\Events\Notifications\AbstractNotificationEvent" link="/classes/EC.Poetry.Events.Notifications.AbstractNotificationEvent.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Events\Notifications" line="12" package="EC\Poetry\Events">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\Notifications\StatusUpdatedEvent::NAME</full_name>
        <value>'poetry.notification.status_updated'</value>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="EC\Poetry\Events\Notifications" line="18" package="EC\Poetry\Messages\Traits">
        <name>$message</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::message</full_name>
        <default>null</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\EC\Poetry\Messages\MessageInterface" variable="">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="17" package="EC\Poetry\Events">
        <name>getName</name>
        <full_name>\EC\Poetry\Events\Notifications\StatusUpdatedEvent::getName()</full_name>
        <docblock line="17">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="24" package="EC\Poetry\Events\Notifications">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\Notifications\AbstractNotificationEvent::__construct()</full_name>
        <docblock line="24">
          <description>AbstractNotificationEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$message">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
        <inherited_from>\EC\Poetry\Events\Notifications\AbstractNotificationEvent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="23" package="EC\Poetry\Messages\Traits">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::getMessage()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="31" package="EC\Poetry\Messages\Traits">
        <name>setMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::setMessage()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="39" package="EC\Poetry\Messages\Traits">
        <name>hasMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::hasMessage()</full_name>
        <docblock line="39">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx1kEGLwjAQhe/zK+bmbg/2ri4q0uOWhcVbYYnpVIPdNGQmiyL975ukHgTxXQLz8r55zGrtTg7Aql9ipzRhtWu+BhJ/bao/ssJNPYjpjFZiBstLgLIoAAvc9YoZv0VJ4L1rlVCbA9FL9ibCzur4zItmCfpFGOkiZFvG7YHFKy2Pyyf8DTBKxy6C9fazwg+cubxgbh8+zznDf8JEn8XiKZfLJxV42xh7Im+kHfR4H5b5deHQG41dsDqh8EhSx/u8vWd3KpDkSYK3yNR3i0XqsszWCCP8A0sNbU4=</source>
  </file>
  <file path="oe-poetry-client/src/Events/Notifications/TranslationReceivedEvent.php" generated-path="oe-poetry-client.src.Events.Notifications.TranslationReceivedEvent.html" hash="3b17be4c7b109d82a3e853248ec796e3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Events\Notifications" line="10" package="EC\Poetry\Events">
      <extends>\EC\Poetry\Events\Notifications\AbstractNotificationEvent</extends>
      <name>TranslationReceivedEvent</name>
      <full_name>\EC\Poetry\Events\Notifications\TranslationReceivedEvent</full_name>
      <docblock line="10">
        <description>Class TranslationReceivedEvent</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Events"/>
        <tag name="inherited_from" description="\EC\Poetry\Events\Notifications\AbstractNotificationEvent" refers="\EC\Poetry\Events\Notifications\AbstractNotificationEvent" link="/classes/EC.Poetry.Events.Notifications.AbstractNotificationEvent.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Events\Notifications" line="12" package="EC\Poetry\Events">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\Notifications\TranslationReceivedEvent::NAME</full_name>
        <value>'poetry.notification.translation_received'</value>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="EC\Poetry\Events\Notifications" line="18" package="EC\Poetry\Messages\Traits">
        <name>$message</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::message</full_name>
        <default>null</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\EC\Poetry\Messages\MessageInterface" variable="">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="17" package="EC\Poetry\Events">
        <name>getName</name>
        <full_name>\EC\Poetry\Events\Notifications\TranslationReceivedEvent::getName()</full_name>
        <docblock line="17">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="24" package="EC\Poetry\Events\Notifications">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\Notifications\AbstractNotificationEvent::__construct()</full_name>
        <docblock line="24">
          <description>AbstractNotificationEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$message">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
        <inherited_from>\EC\Poetry\Events\Notifications\AbstractNotificationEvent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="23" package="EC\Poetry\Messages\Traits">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::getMessage()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="31" package="EC\Poetry\Messages\Traits">
        <name>setMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::setMessage()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Notifications" line="39" package="EC\Poetry\Messages\Traits">
        <name>hasMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::hasMessage()</full_name>
        <docblock line="39">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9UMFqwzAMvfsrdOuaQ3NvO9ZSclwYY8fAcBWlNcsUYyllpeTfa7uFFQZ7F4Pf03tPWr/4ozeG7TeJt0hQ7Zq3gTScm+pErNLUg7rOoVU3sKyMKYvCQAG73orAR7AsfebeCcmdqM1jUZFEm2j5ZQ9/XSNZGvzXAuhHiVuB7V40WNTHIreQi4EIjL0U6u1rBc8w8zlmwQ/ihf5GfIZ7xiyukqbzOgkFXDaOjxSctgNO988yv37c9w6hGxmTCRxI63ixp3lmbzUSAukYGIT6brlMjVaZmsxkrq9xdI8=</source>
  </file>
  <file path="oe-poetry-client/src/Events/ParseNotificationEvent.php" generated-path="oe-poetry-client.src.Events.ParseNotificationEvent.html" hash="714fa170560b1c20665e46f585dbb427" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Event">\Symfony\Component\EventDispatcher\Event</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Events" line="12" package="EC\Poetry\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ParseNotificationEvent</name>
      <full_name>\EC\Poetry\Events\ParseNotificationEvent</full_name>
      <docblock line="12">
        <description>Class ParseNotificationEvent</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Events"/>
      </docblock>
      <constant namespace="EC\Poetry\Events" line="14" package="EC\Poetry\Events">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::NAME</full_name>
        <value>'poetry.notification.parse'</value>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Events" line="21" package="EC\Poetry\Events">
        <name>$xml</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::xml</full_name>
        <default></default>
        <docblock line="21">
          <description>Raw message XML.</description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Events" line="26" package="EC\Poetry\Events">
        <name>$event</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::event</full_name>
        <default>null</default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="\EC\Poetry\Events\NotificationEventInterface" variable="">
            <type>\EC\Poetry\Events\NotificationEventInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="33" package="EC\Poetry\Events">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::__construct()</full_name>
        <docblock line="33">
          <description>ParseResponseEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="" type="string" variable="$xml">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="44" package="EC\Poetry\Events">
        <name>getXml</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::getXml()</full_name>
        <docblock line="44">
          <description>Get Xml property.</description>
          <long-description></long-description>
          <tag name="return" line="44" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="55" package="EC\Poetry\Events">
        <name>getEvent</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::getEvent()</full_name>
        <docblock line="55">
          <description>Get Event property.</description>
          <long-description></long-description>
          <tag name="return" line="55" description="Property value." type="\EC\Poetry\Events\NotificationEventInterface">
            <type>\EC\Poetry\Events\NotificationEventInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="66" package="EC\Poetry\Events">
        <name>setEvent</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::setEvent()</full_name>
        <docblock line="66">
          <description>Set Event property.</description>
          <long-description></long-description>
          <tag name="param" line="66" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Events\NotificationEventInterface" variable="$event">
            <type>\EC\Poetry\Events\NotificationEventInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\NotificationEventInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="74" package="EC\Poetry\Events">
        <name>hasEvent</name>
        <full_name>\EC\Poetry\Events\ParseNotificationEvent::hasEvent()</full_name>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="74" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="74" code="PPC:ERR-50008">No summary for method hasEvent()</error>
      <error line="26" code="PPC:ERR-50007">No summary for property $event</error>
    </parse_markers>
    <source>eJydU11PwjAUfd+vuCYk4hLhByh+BIkxUULwxYclpMwLNG5t03bIYvjv3rabX8Mh9mVb79m555zenl+qlYoiwXI0iqUIo2EykWh1mYzWKKw5i6LCIDyW+UKKMhnKXElBhVC+4fSXTVeowzeh+3EcQQzDjBkDE6YNjqXlC54yy6XwKKo7yBU1fGHLZk8q9qO0hQBwY1E8Gwh0bxHQSqUwFsbXDyMYwLHyhD3x5deecmTHpNHBvU63YpiyVyD/xml5erjvVft1+WrNdPXe90+l+ZpZhM4mz5psDg7JT09Jw8SdsKgXlPlubvRGByCKbEcTn8uUzoxMY8jE+9dFaqVuOCDnLAcqc7H0sr/3LOYZT2FRiNSpg9nsg6vrwCceFVJ2q2NX3JxeUIX0hRDc9rah8hYtPBFKaalQ27KhS6MttICcb/C53gSYVHBYs6zAXqvWJVrq0P0psSL+VNomMeS3T+Q/jvRwL55mjxsMN223n8f9fsIwHGKnmsb/uTK1q738v8xZfRM6rcbrY5pL2T7dK2b+nDIcDeobGLpuo3ehO4Ko</source>
  </file>
  <file path="oe-poetry-client/src/Events/NotificationEventInterface.php" generated-path="oe-poetry-client.src.Events.NotificationEventInterface.html" hash="642e11f914da06e43d8672544b639558" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MessageAwareInterface">\EC\Poetry\Messages\MessageAwareInterface</namespace-alias>
    <interface namespace="EC\Poetry\Events" line="12" package="EC\Poetry\Events">
      <extends>\EC\Poetry\Messages\MessageAwareInterface</extends>
      <name>NotificationEventInterface</name>
      <full_name>\EC\Poetry\Events\NotificationEventInterface</full_name>
      <docblock line="12">
        <description>Interface NotificationEventInterface</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Events"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\MessageAwareInterface" refers="\EC\Poetry\Messages\MessageAwareInterface" link="/classes/EC.Poetry.Messages.MessageAwareInterface.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="19" package="EC\Poetry\Events">
        <name>getName</name>
        <full_name>\EC\Poetry\Events\NotificationEventInterface::getName()</full_name>
        <docblock line="19">
          <description>Get event name.</description>
          <long-description></long-description>
          <tag name="return" line="19" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyNj0EOgjAQRfdzilkqCzkAJmKMMS4kHoBNhQEbpTTtVDHGu9sSICa6cDZt/v9987tc6bMGUKIhq0VBuN3kx5bYPPLtjRTbBMDZT/lA1oqa7HhZ34WhvWIylX/v43EUAUY4SZi1LCtZCJat6qGT5XMhmvrNF4/6Wu7NGOQfIKSOSZUWf5aCJ6CfvliYCHfESIGA4eeLQR7d1BA7o7CRHZWDGPendqerLLByqgglsCbOPGA2T+AFb0Z3a3I=</source>
  </file>
  <file path="oe-poetry-client/src/Events/ParseResponseEvent.php" generated-path="oe-poetry-client.src.Events.ParseResponseEvent.html" hash="112bf2c3b775e5bdf35e05d877e1ab7d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MessageAwareInterface">\EC\Poetry\Messages\MessageAwareInterface</namespace-alias>
    <namespace-alias name="MessageAwareTrait">\EC\Poetry\Messages\Traits\MessageAwareTrait</namespace-alias>
    <namespace-alias name="Event">\Symfony\Component\EventDispatcher\Event</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Events" line="14" package="EC\Poetry\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <implements>\EC\Poetry\Messages\MessageAwareInterface</implements>
      <name>ParseResponseEvent</name>
      <full_name>\EC\Poetry\Events\ParseResponseEvent</full_name>
      <docblock line="14">
        <description>Class ParseResponse</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Events"/>
      </docblock>
      <constant namespace="EC\Poetry\Events" line="18" package="EC\Poetry\Events">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\ParseResponseEvent::NAME</full_name>
        <value>'poetry.response.parse'</value>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Events" line="25" package="EC\Poetry\Events">
        <name>$xml</name>
        <full_name>\EC\Poetry\Events\ParseResponseEvent::xml</full_name>
        <default></default>
        <docblock line="25">
          <description>Raw message XML.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Events" line="18" package="EC\Poetry\Messages\Traits">
        <name>$message</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::message</full_name>
        <default>null</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\EC\Poetry\Messages\MessageInterface" variable="">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="32" package="EC\Poetry\Events">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\ParseResponseEvent::__construct()</full_name>
        <docblock line="32">
          <description>ParseResponseEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="string" variable="$xml">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="43" package="EC\Poetry\Events">
        <name>getXml</name>
        <full_name>\EC\Poetry\Events\ParseResponseEvent::getXml()</full_name>
        <docblock line="43">
          <description>Get Xml property.</description>
          <long-description></long-description>
          <tag name="return" line="43" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="23" package="EC\Poetry\Messages\Traits">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::getMessage()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="31" package="EC\Poetry\Messages\Traits">
        <name>setMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::setMessage()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="39" package="EC\Poetry\Messages\Traits">
        <name>hasMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::hasMessage()</full_name>
        <docblock line="39">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\MessageAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9kNtOAjEQhu/7FHNBApK4PAAeMEiMiRiCXnBBQuoyQOP2kLa7sDG8u9PuroqLzk3b+Wf++aZXt2ZnGFNcojM8RZiMlzON3pbLSYHKuyFjufuZnqJzfIuuudztucVH5dFuqH/4V/Wr5cKfNsVU1fBSyo1W5XKspdGK5lbT7wVB+XSHtnoTzKDfZ9CHccadgxm3DudErpVDSgdlRGu804jWJiQOWNruiyrgwaNaO6heQpoMZeiCs2uyDwYUAf3MRlFLydvD8910AtfQNZEksfXMxASCbl0adwrRhznfg6wcYTF9Sup8I48Kbuv7IJ7GioJ7hM5BZm23M3tGLJunXtuWOUFxCSQLtY2Op6Pyt0yksMlV6oVWsFp9efVC8UWsqj4mRMfvhLu8IYU+oOIL6WOL8gE9LKjKWG3Q+rLFZdHnVoEUB1w3SYBZXQ4Fz3JM/mXdoqcJvd+ItfE3aYN4ZJ/c+PDp</source>
  </file>
  <file path="oe-poetry-client/src/Events/Client/ClientRequestEvent.php" generated-path="oe-poetry-client.src.Events.Client.ClientRequestEvent.html" hash="70952a1bfcaa4ec26b01dc207a42893e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Event">\Symfony\Component\EventDispatcher\Event</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Events\Client" line="12" package="EC\Poetry\Events\Client">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ClientRequestEvent</name>
      <full_name>\EC\Poetry\Events\Client\ClientRequestEvent</full_name>
      <docblock line="12">
        <description>Class SendRequestEvent</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Events\Client"/>
      </docblock>
      <constant namespace="EC\Poetry\Events\Client" line="14" package="EC\Poetry\Events\Client">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::NAME</full_name>
        <value>'poetry.client.request'</value>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Events\Client" line="19" package="EC\Poetry\Events\Client">
        <name>$username</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::username</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Events\Client" line="24" package="EC\Poetry\Events\Client">
        <name>$password</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::password</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="24" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Events\Client" line="29" package="EC\Poetry\Events\Client">
        <name>$message</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::message</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Client" line="38" package="EC\Poetry\Events\Client">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::__construct()</full_name>
        <docblock line="38">
          <description>SendRequestEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="38" description="" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="param" line="38" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Client" line="51" package="EC\Poetry\Events\Client">
        <name>getUsername</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::getUsername()</full_name>
        <docblock line="51">
          <description>Get Username property.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Client" line="62" package="EC\Poetry\Events\Client">
        <name>getPassword</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::getPassword()</full_name>
        <docblock line="62">
          <description>Get Password property.</description>
          <long-description></long-description>
          <tag name="return" line="62" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Client" line="73" package="EC\Poetry\Events\Client">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Events\Client\ClientRequestEvent::getMessage()</full_name>
        <docblock line="73">
          <description>Get Message property.</description>
          <long-description></long-description>
          <tag name="return" line="73" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $username</error>
      <error line="24" code="PPC:ERR-50007">No summary for property $password</error>
      <error line="29" code="PPC:ERR-50007">No summary for property $message</error>
    </parse_markers>
    <source>eJy1Ul1rwjAUfc+vuA+CTlz9Afumkz05ZLK3gmQxalmbZEnarQz/+27atGqdCoKBUpp77jnnntvbB7VShAiacqMo4zAKo4nkVhfRKOfCmihMYnzfEJIZDtMiXUhRRKFMlRR4X6GeY2y2bMV19Y3oYb9PoA9hQo2BKRfzN/6VcWPLOlZc8REVP+nyoChihoSVDNXFNgfwH4u0BirGXwJ4mBTGwuvTeAR30FUlZ8DK3kBXzV0056ClQXfQR041GKtjsfRXw/KtdJxTy6GDo2sX0RmtCt1/Sz0/oxVXYjCd/c52nNXYOmNW6sCDGhVFNU29zmaSA+Xa7YGyd7RrN/tIYgaLTDAbSwGzWeOm18gNNtSDhuaq7K8W507HrmJzfV/34Aa3gm+BajYH2kTcAnkdh2mydOX1XqIv3MJ7rau0VFzbYi9KzW2mxe7O8Jl4POQ0yXhwNJ0lt7VOrz2/p2/FcMzypE7hwpZrnROWdxfxv+Wx38mFHXuZE4Zbf8Wa/AGlL3Zw</source>
  </file>
  <file path="oe-poetry-client/src/Events/Client/ClientResponseEvent.php" generated-path="oe-poetry-client.src.Events.Client.ClientResponseEvent.html" hash="fabb675c573ea08e24e0bdd8449978bc" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Event">\Symfony\Component\EventDispatcher\Event</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Events\Client" line="12" package="EC\Poetry\Events\Client">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ClientResponseEvent</name>
      <full_name>\EC\Poetry\Events\Client\ClientResponseEvent</full_name>
      <docblock line="12">
        <description>Class GetResponseEvent</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Events\Client"/>
      </docblock>
      <constant namespace="EC\Poetry\Events\Client" line="14" package="EC\Poetry\Events\Client">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\Client\ClientResponseEvent::NAME</full_name>
        <value>'poetry.client.response'</value>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Events\Client" line="19" package="EC\Poetry\Events\Client">
        <name>$message</name>
        <full_name>\EC\Poetry\Events\Client\ClientResponseEvent::message</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Client" line="26" package="EC\Poetry\Events\Client">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\Client\ClientResponseEvent::__construct()</full_name>
        <docblock line="26">
          <description>GetResponseEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\Client" line="37" package="EC\Poetry\Events\Client">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Events\Client\ClientResponseEvent::getMessage()</full_name>
        <docblock line="37">
          <description>Get Message property.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $message</error>
    </parse_markers>
    <source>eJx9kN1qwzAMhe/9FLootCssfYD9k5VddZTtNlA8T03NEtvYSlgYffcpjtuRdpsgmEhH53z29Z3bOSGMrDE4qRCWebG2SL4rli0aCkVeaT6vhGgCwmtXb63pitzWzhruD6pHzcukduiHf1Yv5nMBc8grGQI8Ib2wvzUB45wn/fCeEz9k+WcoaxZCRYehMTIB/CQ07wEGyy8BXIrHBM8PqyXcwNRF00zF5cyn7Snj9dqI2BeTtNJDIK9NmVqLeDqvW0kIE36ewKTnm6dXGwh8o8j6LImOKU56Waeco+c4sHmrtIJtYxRpa2CzOfrNDgsXUTnct68J7XS4vE1TvvcPbT/e/8YMq6R23jr01J2xeqTGm/Gj8LdOemhl1WD2L3yJlGJmp8zJfYx+4N2Lb5knxnc=</source>
  </file>
  <file path="oe-poetry-client/src/Events/NotificationHandler/ReceivedNotificationEvent.php" generated-path="oe-poetry-client.src.Events.NotificationHandler.ReceivedNotificationEvent.html" hash="38f4ec56d25dedf55f82f7e21e6e12a5" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Event">\Symfony\Component\EventDispatcher\Event</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Events\NotificationHandler" line="12" package="EC\Poetry\Events\NotificationHandler">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ReceivedNotificationEvent</name>
      <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent</full_name>
      <docblock line="12">
        <description>Class ReceivedNotificationEvent</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Events\NotificationHandler"/>
      </docblock>
      <constant namespace="EC\Poetry\Events\NotificationHandler" line="14" package="EC\Poetry\Events\NotificationHandler">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::NAME</full_name>
        <value>'poetry.notification_handler.received_notification'</value>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Events\NotificationHandler" line="19" package="EC\Poetry\Events\NotificationHandler">
        <name>$username</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::username</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Events\NotificationHandler" line="24" package="EC\Poetry\Events\NotificationHandler">
        <name>$password</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::password</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="24" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Events\NotificationHandler" line="29" package="EC\Poetry\Events\NotificationHandler">
        <name>$message</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::message</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\NotificationHandler" line="38" package="EC\Poetry\Events\NotificationHandler">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::__construct()</full_name>
        <docblock line="38">
          <description>SendRequestEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="38" description="" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="param" line="38" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\NotificationHandler" line="51" package="EC\Poetry\Events\NotificationHandler">
        <name>getUsername</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::getUsername()</full_name>
        <docblock line="51">
          <description>Get Username property.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\NotificationHandler" line="62" package="EC\Poetry\Events\NotificationHandler">
        <name>getPassword</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::getPassword()</full_name>
        <docblock line="62">
          <description>Get Password property.</description>
          <long-description></long-description>
          <tag name="return" line="62" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events\NotificationHandler" line="73" package="EC\Poetry\Events\NotificationHandler">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent::getMessage()</full_name>
        <docblock line="73">
          <description>Get Message property.</description>
          <long-description></long-description>
          <tag name="return" line="73" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $username</error>
      <error line="24" code="PPC:ERR-50007">No summary for property $password</error>
      <error line="29" code="PPC:ERR-50007">No summary for property $message</error>
    </parse_markers>
    <source>eJy1Ut1qwjAUvu9TnAtBJ04fYP842W4UUXYnSJYeNaxNsiTtJsN3X9KmtdapQzAgpeb7O9/p7YNcySDgJEYtCUUY9GdjgUatZ4MUudGzkTBswSgxTPBXwsMI1U0QJBphuo4Xgq9nfRFLwS04pzwzq2ToClX+btG9djuANvQjojVMkCJLMawKZ0ALcahHm+ODLP8XxRJ6AT2uC/htkIcacpefAOyhgmsDo6fhAO6gKTOfLq9Q56vcoau87rx627RTOZlsMnds7pQo0EYxvvR/9bKnVCwlBqFhO1Ou6DOo0g74JVR4BtUuVts295lT28kEPxPUJq8pq0Ql1AjV9aDSRRJFYu+zneTAdZH2wLVPtBs3eY8YhUXCqasX5vMyTau062ylO6XMVcbPl+pOw6yYvr4vOHa7leJroELNgbYV10Dex2HKLt31Zq/RFzTwVvhKJSQqs96rUqFJFN/dmf2NPR5SEiXYPdrOEk3h06rP7+VrNRyLPC5auHDkwudE5N1F/B156Hdy4cTe5kTg2lexCX4BWiWSxg==</source>
  </file>
  <file path="oe-poetry-client/src/Events/ExceptionEvent.php" generated-path="oe-poetry-client.src.Events.ExceptionEvent.html" hash="8df923e2fc6bdddf85cf68ef438b80f3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Event">\Symfony\Component\EventDispatcher\Event</namespace-alias>
    <namespace-alias name="PoetryException">\EC\Poetry\Exceptions\PoetryException</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Events" line="13" package="EC\Poetry\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ExceptionEvent</name>
      <full_name>\EC\Poetry\Events\ExceptionEvent</full_name>
      <docblock line="13">
        <description>Class ExceptionEvent</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Events"/>
      </docblock>
      <constant namespace="EC\Poetry\Events" line="15" package="EC\Poetry\Events">
        <name>NAME</name>
        <full_name>\EC\Poetry\Events\ExceptionEvent::NAME</full_name>
        <value>'poetry.exception'</value>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Events" line="20" package="EC\Poetry\Events">
        <name>$exception</name>
        <full_name>\EC\Poetry\Events\ExceptionEvent::exception</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="20" description="" type="\EC\Poetry\Exceptions\PoetryException" variable="">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Events" line="25" package="EC\Poetry\Events">
        <name>$silent</name>
        <full_name>\EC\Poetry\Events\ExceptionEvent::silent</full_name>
        <default>false</default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="32" package="EC\Poetry\Events">
        <name>__construct</name>
        <full_name>\EC\Poetry\Events\ExceptionEvent::__construct()</full_name>
        <docblock line="32">
          <description>ExceptionEvent constructor.</description>
          <long-description></long-description>
          <tag name="param" line="32" description="" type="\EC\Poetry\Exceptions\PoetryException" variable="$exception">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\EC\Poetry\Exceptions\PoetryException</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="43" package="EC\Poetry\Events">
        <name>getException</name>
        <full_name>\EC\Poetry\Events\ExceptionEvent::getException()</full_name>
        <docblock line="43">
          <description>Get Exception property.</description>
          <long-description></long-description>
          <tag name="return" line="43" description="Property value." type="\EC\Poetry\Exceptions\PoetryException">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="54" package="EC\Poetry\Events">
        <name>isSilent</name>
        <full_name>\EC\Poetry\Events\ExceptionEvent::isSilent()</full_name>
        <docblock line="54">
          <description>Get Silent property.</description>
          <long-description></long-description>
          <tag name="return" line="54" description="Property value." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Events" line="65" package="EC\Poetry\Events">
        <name>setSilent</name>
        <full_name>\EC\Poetry\Events\ExceptionEvent::setSilent()</full_name>
        <docblock line="65">
          <description>Set Silent property.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Property value.&lt;/p&gt;" type="boolean" variable="$silent">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$silent</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $exception</error>
      <error line="25" code="PPC:ERR-50007">No summary for property $silent</error>
    </parse_markers>
    <source>eJydk11rwjAUhu/zK86FoBOmP8C5D5zsakPwtiAxO2pZm4QkLZbhf1++7KpVpwuU0pxz3vM+yenDk9xIQjjNUUvKEKaTZCbQqCqZlsiNHhFSaIR5la8Er5KJyKXgNhDCr6mtMmyDKnyPfHJDY8tQmlRwHXfqDas77PcJ9GGSUa2hDngdu+9Cz9bSF123XdngkLAThYBbg/zTbnuZbwJ2MdvfwMfL+xTG0JVeaID7uq614rK8Hbds35IqSK7BiBVD/5YqLalB6GCD8pT0UojsdKVOM0cxhhXNNLbLj2g9mSqYEWoQU+pGkiqaX0fRcHxoq1hmKYNVwZlPWyzqhr3zEne+Nhy9Wx2zSfX9Yx23dM0Tcim7Fugbml9Yez5CojJVC1KhKRS/6a7sM4tyUNKswMFF5jWaWqF3jBbbHxNegpqHG/6LqDEiNxpOdWjxh9kwaeeczq9wGgbMGd3P7f8MazTRcZQ5M0D1v9E59L4jP8BvbYg=</source>
  </file>
  <file path="oe-poetry-client/src/NotificationHandler.php" generated-path="oe-poetry-client.src.NotificationHandler.html" hash="d643da2e0507b7999ec5cfdcb8caf9e7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ReceivedNotificationEvent">\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent</namespace-alias>
    <namespace-alias name="ParseNotificationEvent">\EC\Poetry\Events\ParseNotificationEvent</namespace-alias>
    <namespace-alias name="CannotAuthenticateException">\EC\Poetry\Exceptions\Notifications\CannotAuthenticateException</namespace-alias>
    <namespace-alias name="ParsingException">\EC\Poetry\Exceptions\ParsingException</namespace-alias>
    <namespace-alias name="ValidationException">\EC\Poetry\Exceptions\ValidationException</namespace-alias>
    <namespace-alias name="Status">\EC\Poetry\Messages\Responses\Status</namespace-alias>
    <namespace-alias name="ParserAwareTrait">\EC\Poetry\Messages\Traits\ParserAwareTrait</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <namespace-alias name="DispatchExceptionEventTrait">\EC\Poetry\Traits\DispatchExceptionEventTrait</namespace-alias>
    <namespace-alias name="EventDispatcher">\Symfony\Component\EventDispatcher\EventDispatcher</namespace-alias>
    <namespace-alias name="ValidatorInterface">\Symfony\Component\Validator\Validator\ValidatorInterface</namespace-alias>
    <namespace-alias name="Renderer">\EC\Poetry\Services\Renderer</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry" line="23" package="EC\Poetry">
      <extends/>
      <name>NotificationHandler</name>
      <full_name>\EC\Poetry\NotificationHandler</full_name>
      <docblock line="23">
        <description>Class NotificationHandler</description>
        <long-description></long-description>
        <tag name="package" line="23" description="EC\Poetry"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry" line="31" package="EC\Poetry">
        <name>$settings</name>
        <full_name>\EC\Poetry\NotificationHandler::settings</full_name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="36" package="EC\Poetry">
        <name>$renderer</name>
        <full_name>\EC\Poetry\NotificationHandler::renderer</full_name>
        <default></default>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="\EC\Poetry\Services\Renderer" variable="">
            <type>\EC\Poetry\Services\Renderer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="41" package="EC\Poetry">
        <name>$validator</name>
        <full_name>\EC\Poetry\NotificationHandler::validator</full_name>
        <default></default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="41" description="" type="\Symfony\Component\Validator\Validator\ValidatorInterface" variable="">
            <type>\Symfony\Component\Validator\Validator\ValidatorInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="18" package="EC\Poetry\Traits">
        <name>$eventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::eventDispatcher</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher" variable="">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="51" package="EC\Poetry">
        <name>__construct</name>
        <full_name>\EC\Poetry\NotificationHandler::__construct()</full_name>
        <docblock line="51">
          <description>NotificationHandler constructor.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="\EC\Poetry\Services\Settings" variable="$settings">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
          <tag name="param" line="51" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher" variable="$eventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
          <tag name="param" line="51" description="" type="\EC\Poetry\Services\Renderer" variable="$renderer">
            <type>\EC\Poetry\Services\Renderer</type>
          </tag>
          <tag name="param" line="51" description="" type="\Symfony\Component\Validator\Validator\ValidatorInterface" variable="$validator">
            <type>\Symfony\Component\Validator\Validator\ValidatorInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$eventDispatcher</name>
          <default></default>
          <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$renderer</name>
          <default></default>
          <type>\EC\Poetry\Services\Renderer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validator</name>
          <default></default>
          <type>\Symfony\Component\Validator\Validator\ValidatorInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="69" package="EC\Poetry">
        <name>handle</name>
        <full_name>\EC\Poetry\NotificationHandler::handle()</full_name>
        <docblock line="69">
          <description>Handle incoming Poetry notification.</description>
          <long-description></long-description>
          <tag name="param" line="69" description="" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="69" description="" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="param" line="69" description="" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="69" description="" type="\EC\Poetry\Exceptions\Notifications\CannotAuthenticateException">
            <type>\EC\Poetry\Exceptions\Notifications\CannotAuthenticateException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="97" package="EC\Poetry">
        <name>doesAuthenticate</name>
        <full_name>\EC\Poetry\NotificationHandler::doesAuthenticate()</full_name>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="97" description="" type="" variable="$username"/>
          <tag name="param" line="97" description="" type="" variable="$password"/>
          <tag name="return" line="97" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="108" package="EC\Poetry">
        <name>parse</name>
        <full_name>\EC\Poetry\NotificationHandler::parse()</full_name>
        <docblock line="108">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="108" description="" type="" variable="$xml"/>
          <tag name="return" line="108" description="" type="\EC\Poetry\Events\NotificationEventInterface">
            <type>\EC\Poetry\Events\NotificationEventInterface</type>
          </tag>
          <tag name="throws" line="108" description="" type="\EC\Poetry\Exceptions\ParsingException">
            <type>\EC\Poetry\Exceptions\ParsingException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="124" package="EC\Poetry">
        <name>getSuccessStatus</name>
        <full_name>\EC\Poetry\NotificationHandler::getSuccessStatus()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$notification">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
          <tag name="return" line="124" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$notification</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="144" package="EC\Poetry">
        <name>getErrorStatus</name>
        <full_name>\EC\Poetry\NotificationHandler::getErrorStatus()</full_name>
        <docblock line="144">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="144" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="144" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$notification">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
          <tag name="return" line="144" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$notification</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\NotificationHandler">
            <type>\EC\Poetry\NotificationHandler</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="24" package="EC\Poetry\Traits">
        <name>dispatchExceptionEvent</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::dispatchExceptionEvent()</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Exceptions\PoetryException" variable="$exception">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
          <tag name="param" line="24" description="" type="boolean" variable="$silent">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\EC\Poetry\Exceptions\PoetryException</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$silent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\EC\Poetry\Traits\DispatchExceptionEventTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="37" package="EC\Poetry\Traits">
        <name>getEventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::getEventDispatcher()</full_name>
        <docblock line="37">
          <description>Get EventDispatcher property.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="Property value." type="\Symfony\Component\EventDispatcher\EventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Traits\DispatchExceptionEventTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="97" code="PPC:ERR-50008">No summary for method doesAuthenticate()</error>
      <error line="108" code="PPC:ERR-50008">No summary for method parse()</error>
      <error line="124" code="PPC:ERR-50008">No summary for method getSuccessStatus()</error>
      <error line="144" code="PPC:ERR-50008">No summary for method getErrorStatus()</error>
      <error line="31" code="PPC:ERR-50007">No summary for property $settings</error>
      <error line="36" code="PPC:ERR-50007">No summary for property $renderer</error>
      <error line="41" code="PPC:ERR-50007">No summary for property $validator</error>
    </parse_markers>
    <source>eJztV99v0zAQfs9fYaSJJlNLx+vGClM3aRPamDaEhBQJhcRdLdo42E67Ce1/x3Zsx3GcHwweyUvT+O677+4+n5N374t1EQR5soW0SFIILpbxLYaMPJ0EQUmt//HFDuaMxjeYoRVKE4Zwfpnk2QaS+A6mEO1gZq9J8xM/xm1CKBw2fkxhIVabQWm8TPIcs7OSrbmXeAqNaQ+GCIryhzGmX5INyipiXdbXkNLkAVKeOy24D7+7ZwkraafhZ5IgnTs52ycEyieu/T0kO5QKOMgY59sCVDjniDeMpWvDUNbQgrx/2q5w/hQv8ZYT5GtV9bUfb5vzv8tNVQMT391VziBZceV05nEH8wwSAR/MDw8DcAiWm4RS4BESXxTrH7gSf/Ca1Wj86TxIO91+BYBfIn67unqlt17SSrITF2ewSwiIe5qiDOfytyBox0UIDqhp2WhAXR0/IKlr5wNsd8EPs9N2bRxPOUHK9cxImXKHN8rOhC0Skmx7SwN6L1MjF/GP5WoQYfP5CKq66ANUSbM3PVTHbRGrEc0+ld83KAWrMk9FG8C3b6YDoamqKdwUuIVwKzAFJkGTw9QjFotPJIlU+0jmztaIzhY6Jji1xe0YOdGFLXQni+OiWQnbWuOOkSEnrCwJC5PnlpAr8QKUp3jLaYKq5yC39N0hZl5p4XDApwQRB2HHcsGnzx6TrGP5cbtx4QlkJcmVhXnK1gTvqa3Llxx0vQJay1qEJqNpzX4qmbbaLRvG65zDPeg8zfsAh1QxW2TqPuzEPz6+Obu+mCo2kRpW4hKdrNk2GKtwhRj8oUNFXGgFwlfKKMOQ2tX0JhRFTigrqcx7iISiaj29CiOH03MzlR3Cm6rjdT5G7+aWs5U5zxYPkKm3ihayyNbCmy1SXHKCEViAo5fl5XkXsiMMpDakBSulG96GMLK6byBBKmxBWG8UbqRv3azUplOROe4FIZhU72Zh7dasoo7aWdvnWoutAPdlyg8VakJ0ArWHlpohXaPHnTnuZPmO8aY5CAhmMGUwq2fBOM0780Dhh84xILMKJ42ZqtEmETg9rTOJwOvXo/w1BeVvGA2VrHvexr3fLPKR+740MJXdT4ehmlvDqG/Q+j+D3CE2uIf8MK1hqvGqgahUuk5oFbQ19YYng1uVinj/pqk3hwo70ObY8yGlbqzXGFtQYw7hzsa1d7MN3WomlUaqmz4PmelVJvbeCkHSGCnKW+4OnVLmca/XvN57xNYqdGQ1UMJ+fipgOCHwZwkpm7SXEZ+48mSZXB6jYzqJWibnYrUyyebb+VePyRJnfPWoDa/H3+TTx4l9mDcHqH7903ehymxIGeq9a8R1sK2IvERaFcC/1FfjOFLMpuC/zkbqbPa2W2i6nH8htufgN6TX8lY=</source>
  </file>
  <file path="oe-poetry-client/src/Server.php" generated-path="oe-poetry-client.src.Server.html" hash="702aac5e9c6a3b49801518ef074d0b81" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ServerException">\EC\Poetry\Exceptions\ServerException</namespace-alias>
    <namespace-alias name="DispatchExceptionEventTrait">\EC\Poetry\Traits\DispatchExceptionEventTrait</namespace-alias>
    <namespace-alias name="EventDispatcher">\Symfony\Component\EventDispatcher\EventDispatcher</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry" line="14" package="EC\Poetry\Services">
      <extends/>
      <name>Server</name>
      <full_name>\EC\Poetry\Server</full_name>
      <docblock line="14">
        <description>Class Server</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Services"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry" line="21" package="EC\Poetry\Services">
        <name>$soapServer</name>
        <full_name>\EC\Poetry\Server::soapServer</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="\SoapServer" variable="">
            <type>\SoapServer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="18" package="EC\Poetry\Traits">
        <name>$eventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::eventDispatcher</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher" variable="">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="29" package="EC\Poetry\Services">
        <name>__construct</name>
        <full_name>\EC\Poetry\Server::__construct()</full_name>
        <docblock line="29">
          <description>Server constructor.</description>
          <long-description></long-description>
          <tag name="param" line="29" description="" type="\SoapServer" variable="$soapServer">
            <type>\SoapServer</type>
          </tag>
          <tag name="param" line="29" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher" variable="$eventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$soapServer</name>
          <default></default>
          <type>\SoapServer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$eventDispatcher</name>
          <default></default>
          <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="38" package="EC\Poetry\Services">
        <name>handle</name>
        <full_name>\EC\Poetry\Server::handle()</full_name>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="inheritDoc" line="38" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="47" package="EC\Poetry\Services">
        <name>ensureValidRequest</name>
        <full_name>\EC\Poetry\Server::ensureValidRequest()</full_name>
        <docblock line="47">
          <description>Check whereas current HTTP request is a valid SOAP request.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="24" package="EC\Poetry\Traits">
        <name>dispatchExceptionEvent</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::dispatchExceptionEvent()</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Exceptions\PoetryException" variable="$exception">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
          <tag name="param" line="24" description="" type="boolean" variable="$silent">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\EC\Poetry\Exceptions\PoetryException</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$silent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\EC\Poetry\Traits\DispatchExceptionEventTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="37" package="EC\Poetry\Traits">
        <name>getEventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::getEventDispatcher()</full_name>
        <docblock line="37">
          <description>Get EventDispatcher property.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="Property value." type="\Symfony\Component\EventDispatcher\EventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Traits\DispatchExceptionEventTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="38" code="PPC:ERR-50008">No summary for method handle()</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $soapServer</error>
    </parse_markers>
    <source>eJyVlN9P2zAQx9/zVxwIKQkC+r6ubKhEYg9bWZPx0lSRca7EorUz2ymroP/77LTNr9Ju5CXx3fm+nztf/PlLnuWOw8kCVU4oQjCM7wVqueo7TqEa6zj4QzHXTHAVhyiXKCtDvxMZScK0im+ZSalpVsUFS+S6dG52hKvFTPBVPBSLXHDji8uI3T6U3bVh6p2fO3AOwzlRCjYcZm1NXw3/M3lqglg/o6iMu+fQ5pZXB8xjIY5SllGlpH2MxpJIiENB8p10ae+V71yyJdEIZ6ry72fY2IGaNmpZUC3k1dZVaeREkkVTBf7zaQjvJftoq+EM24Z2qcXjnFGYFZzalkGSVAV5TfAG0QX8S8EvU29OpixHZ0xdXtcpYNDubSewk85GY3d+bPh6/1gZN16mbwU9WmZGeDpH7wAoclVIfCBzlo7xd4FKe/4eZM1/eb1LdwhrmCF9hheDhkQBLaQ01cBdFN2D3AgAU0BgaSUhHN1U9qvOYAqNVGNaV/Iea7cqcyUo8z8p08jJtC6EzcA7YUqh9s6SMBg/BOOJOw5+/grCKPkeRHejW3fqw9sbHHbDyWAA7v0ojFy/IdmSnbi7L3c6mRqI0y0pLFBnIgWViWKewiOCYQEtwOa7Oq1J18eZbSMT27WbYfRt9MNAf4Cl7DbZjgWS1MxbzZPijHFM2yxOmwYXuV55lcIxbVXOi2t1d/T9Q7GSvCS5ULqMnrE5Jk+o7d+pzewozzXX/adej/G80K7fd9ppNiOavnsjehxfoHPxe+bK4zqRdRkXYC4B9P3tu3sWa2ft/AXhP/Ce</source>
  </file>
  <file path="oe-poetry-client/src/Exceptions/Notifications/CannotAuthenticateException.php" generated-path="oe-poetry-client.src.Exceptions.Notifications.CannotAuthenticateException.html" hash="d0d0f8f38c2d6f4ecff21b5cb5f11ced" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="NotificationException">\EC\Poetry\Exceptions\NotificationException</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Exceptions\Notifications" line="12" package="EC\Poetry\Exceptions\Notifications">
      <extends>\EC\Poetry\Exceptions\NotificationException</extends>
      <name>CannotAuthenticateException</name>
      <full_name>\EC\Poetry\Exceptions\Notifications\CannotAuthenticateException</full_name>
      <docblock line="12">
        <description>Class CannotAuthenticate</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Exceptions\Notifications"/>
        <tag name="inherited_from" description="\EC\Poetry\Exceptions\NotificationException" refers="\EC\Poetry\Exceptions\NotificationException" link="/classes/EC.Poetry.Exceptions.NotificationException.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Exceptions\Notifications" line="17" package="EC\Poetry\Exceptions\Notifications">
        <name>__construct</name>
        <full_name>\EC\Poetry\Exceptions\Notifications\CannotAuthenticateException::__construct()</full_name>
        <docblock line="17">
          <description>CannotAuthenticate constructor.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyNkctqAzEMRff6CpFVM4vMflJoy5Bt6QcMBMWjNKaubfzIg5J/r+yUYRYpxBtj6/jea+n5xR88gKVvjp4U46YfPhyncBk2Z8U+aWfj8O6S3mtF9bQGyPEBcLqWB23TADbYG4oRe7LWpbecDmxTgVlqpfwqCb7o85EQgreg/pGbHiGfE9sx4t1c8AMoq2Yrq7kjhUrMUsgqubD6w9q6+7wzWuE+W1WtttsJfVpW4iZfWQoi2HVzZnH7IUYORy2NV9UbaW4usnaWXBhjdtKjDmUCoQwNXRD1GE8ujIXFIxk9rhbLdTW/whV+AXdjpgM=</source>
  </file>
  <file path="oe-poetry-client/src/Exceptions/ParserException.php" generated-path="oe-poetry-client.src.Exceptions.ParserException.html" hash="6902d6e6b68dc9a1e52f58e209236d64" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Exceptions" line="10" package="EC\Poetry\Exceptions">
      <extends>\EC\Poetry\Exceptions\PoetryException</extends>
      <name>ParserException</name>
      <full_name>\EC\Poetry\Exceptions\ParserException</full_name>
      <docblock line="10">
        <description>Class ParserException</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Exceptions"/>
        <tag name="inherited_from" description="\EC\Poetry\Exceptions\PoetryException" refers="\EC\Poetry\Exceptions\PoetryException" link="/classes/EC.Poetry.Exceptions.PoetryException.html"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyzsS/IKODiykvMTS0uSExOVXB1jgnITy0pqoxxrUhOLSjJzM8rtubi0tfS4lLQUnDOSSwuVghILCpOLYLLAyVAcg5A/dmJ6diNACrQ50rGplshtaIkNS8FKA7WgzC1mourlgsAwFY2Rw==</source>
  </file>
  <file path="oe-poetry-client/src/Exceptions/ParsingException.php" generated-path="oe-poetry-client.src.Exceptions.ParsingException.html" hash="22e5c2739d7cacbfeca8803e088d8442" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Exceptions" line="10" package="EC\Poetry\Exceptions">
      <extends>\EC\Poetry\Exceptions\PoetryException</extends>
      <name>ParsingException</name>
      <full_name>\EC\Poetry\Exceptions\ParsingException</full_name>
      <docblock line="10">
        <description>Class ParsingException</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Exceptions"/>
        <tag name="inherited_from" description="\EC\Poetry\Exceptions\PoetryException" refers="\EC\Poetry\Exceptions\PoetryException" link="/classes/EC.Poetry.Exceptions.PoetryException.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Exceptions" line="12" package="EC\Poetry\Exceptions">
        <name>$xml</name>
        <full_name>\EC\Poetry\Exceptions\ParsingException::xml</full_name>
        <default></default>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Exceptions" line="19" package="EC\Poetry\Exceptions">
        <name>__construct</name>
        <full_name>\EC\Poetry\Exceptions\ParsingException::__construct()</full_name>
        <docblock line="19">
          <description>ParsingException constructor.</description>
          <long-description></long-description>
          <tag name="param" line="19" description="" type="string" variable="$xml">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Exceptions" line="31" package="EC\Poetry\Exceptions">
        <name>getXml</name>
        <full_name>\EC\Poetry\Exceptions\ParsingException::getXml()</full_name>
        <docblock line="31">
          <description>Get Xml property.</description>
          <long-description></long-description>
          <tag name="return" line="31" description="Property value." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="12" code="PPC:ERR-50007">No summary for property $xml</error>
    </parse_markers>
    <source>eJx9UE1rwzAMvftXiNJDF1hyzz6hlF02yLGHQnEdNQ1LbGMrI2X0v09OnHasZTrqPb0PPb7YgxVCyxa9lQphtdwUBskdN6teoaXaaP8gRJYkAhJYNtJ7KKTzta7OBEYC+MoCn7K6rcGETKib54A9oS4ZGI4ust8CeKwzhIqwhHnfNpwlLIc8YZJrOcV25DpFxqWRNHE5opMtMMwXg15EstGq2zW1gn2n1aC03Z61FoF8N7DGWGHmdKj9/TMj8BTTTRAboaY8/y0xW3+8Az/ahycp0zUlaEOww8D2WOYwSwebUeZ0VfUNCdZsxi+x6Oh4Vc8hdU7HftMWoIh8+JJNh+m/nSsktlj8rRqVL42njCfxA+j+q5c=</source>
  </file>
  <file path="oe-poetry-client/src/Exceptions/NotificationException.php" generated-path="oe-poetry-client.src.Exceptions.NotificationException.html" hash="faa516bac586fb6be1a8a217fb0c2fd8" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Exceptions" line="10" package="EC\Poetry\Exceptions">
      <extends>\EC\Poetry\Exceptions\PoetryException</extends>
      <name>NotificationException</name>
      <full_name>\EC\Poetry\Exceptions\NotificationException</full_name>
      <docblock line="10">
        <description>Class NotificationException</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Exceptions"/>
        <tag name="inherited_from" description="\EC\Poetry\Exceptions\PoetryException" refers="\EC\Poetry\Exceptions\PoetryException" link="/classes/EC.Poetry.Exceptions.PoetryException.html"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyzsS/IKODiykvMTS0uSExOVXB1jgnITy0pqoxxrUhOLSjJzM8rtubi0tfS4lLQUnDOSSwuVvDLL8lMy0xOBEnCVQGlQSocgKZkJ6ZjNwioQJ8rGbcZCqkVJal5KcUKEJ0Is6u5uGq5AJ9xOzs=</source>
  </file>
  <file path="oe-poetry-client/src/Exceptions/ValidationException.php" generated-path="oe-poetry-client.src.Exceptions.ValidationException.html" hash="6f1be40d772bf486a3d3323d38a24e87" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ConstraintViolationListInterface">\Symfony\Component\Validator\ConstraintViolationListInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Exceptions" line="12" package="EC\Poetry\Exceptions">
      <extends>\EC\Poetry\Exceptions\PoetryException</extends>
      <name>ValidationException</name>
      <full_name>\EC\Poetry\Exceptions\ValidationException</full_name>
      <docblock line="12">
        <description>Class ValidationException</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Exceptions"/>
        <tag name="inherited_from" description="\EC\Poetry\Exceptions\PoetryException" refers="\EC\Poetry\Exceptions\PoetryException" link="/classes/EC.Poetry.Exceptions.PoetryException.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Exceptions" line="17" package="EC\Poetry\Exceptions">
        <name>$violations</name>
        <full_name>\EC\Poetry\Exceptions\ValidationException::violations</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\Symfony\Component\Validator\ConstraintViolationListInterface" variable="">
            <type>\Symfony\Component\Validator\ConstraintViolationListInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Exceptions" line="24" package="EC\Poetry\Exceptions">
        <name>__construct</name>
        <full_name>\EC\Poetry\Exceptions\ValidationException::__construct()</full_name>
        <docblock line="24">
          <description>ValidationException constructor.</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\Symfony\Component\Validator\ConstraintViolationListInterface" variable="$violations">
            <type>\Symfony\Component\Validator\ConstraintViolationListInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$violations</name>
          <default></default>
          <type>\Symfony\Component\Validator\ConstraintViolationListInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Exceptions" line="37" package="EC\Poetry\Exceptions">
        <name>getMessages</name>
        <full_name>\EC\Poetry\Exceptions\ValidationException::getMessages()</full_name>
        <docblock line="37">
          <description>Get Messages property.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="Property value." type="array&lt;mixed,string&gt;">
            <type>array&lt;mixed,string&gt;</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $violations</error>
    </parse_markers>
    <source>eJylkl1rwjAUhu/7K86FYCtbvXefILINHCsMvLEiWT21YW0SkrRYhv99ae2nusHmuSkk73nP2+fk9kFEwrIYSVAJEiDMpr7HUcvcn+0CFJpypm4sK1UI73kScpb7U54IzpBpf0FiuiGaS3PGlJaEMr2gPCZF25wq/cI0ytD4GovxaGTBCKYxUQqqTiNrxpjL4v7RxPgk2/NJjGBsBT85AO40so2CQ1/r/GWBqTJAUWZIRiT4l/xQ5TQuv0LSjGiEQVZrC2ZHM88FDsopaWAmupWuiSiIJMllIbuB+oHTj5gGEKYsKHOs100S+y+mTul2wFvUQEdUXd+3ArjrQ2mE5r2pYst3QBMR8w3a3rO3nr3Nr2qTLerXg0jZjtO2Gi6GwmTSzVzbVbL9Cfwn1FC7mXVxgVLnJ8gl6lQyMKaUbZer+hzAqzogI3GK7q8se7mP+JhE/3t75+jXAbo8C+DLVQsr5BJJEIF9uhmiOl5OJ2TPb7nqrbBcS03DIzqyHXc4gaF7JKkI2J29VUspquLcDKm3tre+AUTAdk8=</source>
  </file>
  <file path="oe-poetry-client/src/Exceptions/ServerException.php" generated-path="oe-poetry-client.src.Exceptions.ServerException.html" hash="43815df9b4f8669c8f227516189f3443" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Exceptions" line="10" package="EC\Poetry\Exceptions">
      <extends>\EC\Poetry\Exceptions\PoetryException</extends>
      <name>ServerException</name>
      <full_name>\EC\Poetry\Exceptions\ServerException</full_name>
      <docblock line="10">
        <description>Class ServerException</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Exceptions"/>
        <tag name="inherited_from" description="\EC\Poetry\Exceptions\PoetryException" refers="\EC\Poetry\Exceptions\PoetryException" link="/classes/EC.Poetry.Exceptions.PoetryException.html"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyzsS/IKODiykvMTS0uSExOVXB1jgnITy0pqoxxrUhOLSjJzM8rtubi0tfS4lLQUnDOSSwuVghOLSpLLYLLAyVAcg5A/dmJ6diNACrQ50rGplshtaIkNS+lWAGiB2FqNRdXLRcAxiw2Ww==</source>
  </file>
  <file path="oe-poetry-client/src/Exceptions/PoetryException.php" generated-path="oe-poetry-client.src.Exceptions.PoetryException.html" hash="72e6f9f929ee003f63cf5debe1df9656" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Exceptions" line="8" package="Default">
      <extends>\Exception</extends>
      <name>PoetryException</name>
      <full_name>\EC\Poetry\Exceptions\PoetryException</full_name>
      <docblock line="8">
        <description>Class PoetryException</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyzsS/IKODiykvMTS0uSExOVXB1jgnITy0pqoxxrUhOLSjJzM8rtubi0tfS4lLQUnDOSSwuVoAogMsDJfS5krHJKKRWlKTmpRQrIAzjqubiquUCAGTSKHM=</source>
  </file>
  <file path="oe-poetry-client/src/Client.php" generated-path="oe-poetry-client.src.Client.html" hash="a86b45b1e0da77baf54fa7294588043d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ClientResponseEvent">\EC\Poetry\Events\Client\ClientResponseEvent</namespace-alias>
    <namespace-alias name="ClientRequestEvent">\EC\Poetry\Events\Client\ClientRequestEvent</namespace-alias>
    <namespace-alias name="ParseResponseEvent">\EC\Poetry\Events\ParseResponseEvent</namespace-alias>
    <namespace-alias name="ParsingException">\EC\Poetry\Exceptions\ParsingException</namespace-alias>
    <namespace-alias name="ValidationException">\EC\Poetry\Exceptions\ValidationException</namespace-alias>
    <namespace-alias name="AbstractMessage">\EC\Poetry\Messages\AbstractMessage</namespace-alias>
    <namespace-alias name="MessageInterface">\EC\Poetry\Messages\MessageInterface</namespace-alias>
    <namespace-alias name="Renderer">\EC\Poetry\Services\Renderer</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <namespace-alias name="DispatchExceptionEventTrait">\EC\Poetry\Traits\DispatchExceptionEventTrait</namespace-alias>
    <namespace-alias name="ValidatorInterface">\Symfony\Component\Validator\Validator\ValidatorInterface</namespace-alias>
    <namespace-alias name="EventDispatcher">\Symfony\Component\EventDispatcher\EventDispatcher</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry" line="23" package="EC\Poetry\Services">
      <extends/>
      <name>Client</name>
      <full_name>\EC\Poetry\Client</full_name>
      <docblock line="23">
        <description>Class Client</description>
        <long-description></long-description>
        <tag name="package" line="23" description="EC\Poetry\Services"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry" line="30" package="EC\Poetry\Services">
        <name>$settings</name>
        <full_name>\EC\Poetry\Client::settings</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="35" package="EC\Poetry\Services">
        <name>$renderer</name>
        <full_name>\EC\Poetry\Client::renderer</full_name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="\EC\Poetry\Services\Renderer" variable="">
            <type>\EC\Poetry\Services\Renderer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="40" package="EC\Poetry\Services">
        <name>$validator</name>
        <full_name>\EC\Poetry\Client::validator</full_name>
        <default></default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="\Symfony\Component\Validator\Validator\ValidatorInterface" variable="">
            <type>\Symfony\Component\Validator\Validator\ValidatorInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="45" package="EC\Poetry\Services">
        <name>$soapClient</name>
        <full_name>\EC\Poetry\Client::soapClient</full_name>
        <default></default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="\SoapClient" variable="">
            <type>\SoapClient</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry" line="50" package="EC\Poetry\Services">
        <name>$method</name>
        <full_name>\EC\Poetry\Client::method</full_name>
        <default>'requestService'</default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry" line="18" package="EC\Poetry\Traits">
        <name>$eventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::eventDispatcher</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher" variable="">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="61" package="EC\Poetry\Services">
        <name>__construct</name>
        <full_name>\EC\Poetry\Client::__construct()</full_name>
        <docblock line="61">
          <description>Client constructor.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="" type="\EC\Poetry\Services\Settings" variable="$settings">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
          <tag name="param" line="61" description="" type="\SoapClient" variable="$soapClient">
            <type>\SoapClient</type>
          </tag>
          <tag name="param" line="61" description="" type="\Symfony\Component\Validator\Validator\ValidatorInterface" variable="$validator">
            <type>\Symfony\Component\Validator\Validator\ValidatorInterface</type>
          </tag>
          <tag name="param" line="61" description="" type="\EC\Poetry\Services\Renderer" variable="$renderer">
            <type>\EC\Poetry\Services\Renderer</type>
          </tag>
          <tag name="param" line="61" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher" variable="$eventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$soapClient</name>
          <default></default>
          <type>\SoapClient</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validator</name>
          <default></default>
          <type>\Symfony\Component\Validator\Validator\ValidatorInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$renderer</name>
          <default></default>
          <type>\EC\Poetry\Services\Renderer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$eventDispatcher</name>
          <default></default>
          <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="77" package="EC\Poetry\Services">
        <name>send</name>
        <full_name>\EC\Poetry\Client::send()</full_name>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="77" description="" type="\EC\Poetry\Messages\AbstractMessage" variable="$message">
            <type>\EC\Poetry\Messages\AbstractMessage</type>
          </tag>
          <tag name="throws" line="77" description="" type="\EC\Poetry\Exceptions\ValidationException">
            <type>\EC\Poetry\Exceptions\ValidationException</type>
          </tag>
          <tag name="return" line="77" description="" type="\EC\Poetry\Messages\MessageInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\AbstractMessage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="92" package="EC\Poetry\Services">
        <name>setMethod</name>
        <full_name>\EC\Poetry\Client::setMethod()</full_name>
        <docblock line="92">
          <description>Set Method property.</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;Property value.&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="105" package="EC\Poetry\Services">
        <name>doSend</name>
        <full_name>\EC\Poetry\Client::doSend()</full_name>
        <docblock line="105">
          <description>Send a raw message.</description>
          <long-description></long-description>
          <tag name="param" line="105" description="&lt;p&gt;Message string.&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="105" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="122" package="EC\Poetry\Services">
        <name>validate</name>
        <full_name>\EC\Poetry\Client::validate()</full_name>
        <docblock line="122">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="122" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$message">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
          <tag name="throws" line="122" description="" type="\EC\Poetry\Exceptions\ValidationException">
            <type>\EC\Poetry\Exceptions\ValidationException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="138" package="EC\Poetry\Services">
        <name>parse</name>
        <full_name>\EC\Poetry\Client::parse()</full_name>
        <docblock line="138">
          <description>Parse XML message into a response object.</description>
          <long-description></long-description>
          <tag name="param" line="138" description="" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="\EC\Poetry\Messages\MessageInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
          <tag name="throws" line="138" description="" type="\EC\Poetry\Exceptions\PoetryException">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry" line="24" package="EC\Poetry\Traits">
        <name>dispatchExceptionEvent</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::dispatchExceptionEvent()</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Exceptions\PoetryException" variable="$exception">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
          <tag name="param" line="24" description="" type="boolean" variable="$silent">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\EC\Poetry\Exceptions\PoetryException</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$silent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\EC\Poetry\Traits\DispatchExceptionEventTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="37" package="EC\Poetry\Traits">
        <name>getEventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::getEventDispatcher()</full_name>
        <docblock line="37">
          <description>Get EventDispatcher property.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="Property value." type="\Symfony\Component\EventDispatcher\EventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Traits\DispatchExceptionEventTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="77" code="PPC:ERR-50008">No summary for method send()</error>
      <error line="122" code="PPC:ERR-50008">No summary for method validate()</error>
      <error line="30" code="PPC:ERR-50007">No summary for property $settings</error>
      <error line="35" code="PPC:ERR-50007">No summary for property $renderer</error>
      <error line="40" code="PPC:ERR-50007">No summary for property $validator</error>
      <error line="45" code="PPC:ERR-50007">No summary for property $soapClient</error>
      <error line="50" code="PPC:ERR-50007">No summary for property $method</error>
    </parse_markers>
    <source>eJytV1tv2jAUfs+v8KRKJBW0e25Xtor1YdI6VWWa9oBUuckBskGS2QaKKv77jhPbcZw4sGp5ycXn+n3nHDsfPhbLIggyugZe0BjI3WT2kINg++sg2HDrfXa3hUzw2WSV4l3dHlErzziUa9cnKfzZABd98g+Uceg3/BJDIVJcL4XTbGG+9Ij+oKs0ofLZK30PnNMF8NntMxeMxkJ98Mqphy+ZADZH+FzBKbBtGqPgI2QJMGBegSkIgYlwV+A7oymC8jlFekS8NKGXwJSLlcZ0v57n2X42ydcInARc5Zuzricn4rZ2aV97Bea+Y3Vcnp8H5JxMVpRzUrGL7/LTJ6yk3whLR564fBnEtsprQPCSQfTmWEqVLuWFPraUkVkPkErwsrwXLN1SAeSMG5hPNqip6zbIDLGdBtuAd5vZajlfYNOcFhrkzsTMuscCFjQm7ijnAmIBCTlbg1jmCbkhA1Z1qEp/0LZWeSEx9pRgmxhjvlBLxl9BGV33skN6L0OTa7FGod9Ah0UXv9rmGzvHIu2ExHUVHQmTNYutJ8gjDWosQvN7swA2z6s0JvNNFst+I09PhtXQMGXIGDbwtxAddpS5hc6QmORNfkPixusGGpURVtOhTEQsUz4a62CwVK1mdoS0FylUN6gjZOKTUlb/uQ7rlG+abeYIOvFLaXCHphQ/tPuzVTa+jUg2avngdpxYsnzHbRP9O5+rz0BsWEbc/ay3WjgiG/oC9NCncIbQyFk4KqoSbevG5VM/dWq/rFe1RpJPZXSuyUiNM3mplJVCIU8doTQS+WjCjkCAyjmJk7MAJvaeyVfNWj1V9SIhD0qNIAwbuDiCrqichcqMB1EzuZWYP/osIZQwuiMKvKPB25VW+dTMVDItAwrSdfoCSTM5s9OY/DRDvnrBEwGTx9KaU93uo/ECRDjg1Wi90IIDuxgKPGHscpYc1daCDe3OhsaiUs9h+yx7dfXt9v5uSDLYkfZqaLIZ1qEN616xyxJLtjr6WqGboTMavzZoPxyz/IakrIN3V1bWcmhijboaSy++Yey5c+h/zz1vVZr55I2gVajbNF+VTnjNmNlO+ideOiehpT8ax/kGYY3ImLyPLB8Wf0nnITmUDHWka1uPLMcHDyXlvxf5ef9VzwiSZiKXY0MXZf78CyE7MjpwinpGwylkn0Zu9eVkYq357hJYtgRyJzFs/3zae8JJfdQ2oduo8uTw/676OhovKVdIhNG/k+/+CFdhNyhvNahyvABhHOtePQR/Aa+uCGI=</source>
  </file>
  <file path="oe-poetry-client/src/Poetry.php" generated-path="oe-poetry-client.src.Poetry.html" hash="4ec56db56bf920911b9e93126c917c71" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MessagesProvider">\EC\Poetry\Services\Providers\MessagesProvider</namespace-alias>
    <namespace-alias name="ServicesProvider">\EC\Poetry\Services\Providers\ServicesProvider</namespace-alias>
    <namespace-alias name="Container">\Pimple\Container</namespace-alias>
    <namespace-alias name="ContainerInterface">\Psr\Container\ContainerInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry" line="15" package="Poetry">
      <extends>\Pimple\Container</extends>
      <implements>\Psr\Container\ContainerInterface</implements>
      <name>Poetry</name>
      <full_name>\EC\Poetry\Poetry</full_name>
      <docblock line="15">
        <description>Class Poetry</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Poetry"/>
      </docblock>
      <property static="true" visibility="private" namespace="EC\Poetry" line="20" package="Poetry">
        <name>$container</name>
        <full_name>\EC\Poetry\Poetry::container</full_name>
        <default>null</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="20" description="" type="\EC\Poetry\Poetry" variable="">
            <type>\EC\Poetry\Poetry</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="25" package="Poetry">
        <name>__construct</name>
        <full_name>\EC\Poetry\Poetry::__construct()</full_name>
        <docblock line="25">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="46" package="Poetry">
        <name>get</name>
        <full_name>\EC\Poetry\Poetry::get()</full_name>
        <docblock line="46">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="54" package="Poetry">
        <name>has</name>
        <full_name>\EC\Poetry\Poetry::has()</full_name>
        <docblock line="54">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="62" package="Poetry">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Poetry::getIdentifier()</full_name>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="62" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="70" package="Poetry">
        <name>getClient</name>
        <full_name>\EC\Poetry\Poetry::getClient()</full_name>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="70" description="" type="\EC\Poetry\Client">
            <type>\EC\Poetry\Client</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="78" package="Poetry">
        <name>getServer</name>
        <full_name>\EC\Poetry\Poetry::getServer()</full_name>
        <docblock line="78">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="\EC\Poetry\Server">
            <type>\EC\Poetry\Server</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="86" package="Poetry">
        <name>getSettings</name>
        <full_name>\EC\Poetry\Poetry::getSettings()</full_name>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="\EC\Poetry\Services\Settings">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="94" package="Poetry">
        <name>getRenderer</name>
        <full_name>\EC\Poetry\Poetry::getRenderer()</full_name>
        <docblock line="94">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="\EC\Poetry\Services\Renderer">
            <type>\EC\Poetry\Services\Renderer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="102" package="Poetry">
        <name>getRenderEngine</name>
        <full_name>\EC\Poetry\Poetry::getRenderEngine()</full_name>
        <docblock line="102">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\League\Plates\Engine">
            <type>\League\Plates\Engine</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="110" package="Poetry">
        <name>getValidator</name>
        <full_name>\EC\Poetry\Poetry::getValidator()</full_name>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="110" description="" type="\Symfony\Component\Validator\Validator\RecursiveValidator">
            <type>\Symfony\Component\Validator\Validator\RecursiveValidator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="118" package="Poetry">
        <name>getLogger</name>
        <full_name>\EC\Poetry\Poetry::getLogger()</full_name>
        <docblock line="118">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="118" description="" type="\Psr\Log\LoggerInterface">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="126" package="Poetry">
        <name>getEventDispatcher</name>
        <full_name>\EC\Poetry\Poetry::getEventDispatcher()</full_name>
        <docblock line="126">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="126" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry" line="136" package="Poetry">
        <name>getWsdl</name>
        <full_name>\EC\Poetry\Poetry::getWsdl()</full_name>
        <docblock line="136">
          <description>Get WSDL service.</description>
          <long-description></long-description>
          <tag name="return" line="136" description="" type="\EC\Poetry\Services\Wsdl">
            <type>\EC\Poetry\Services\Wsdl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry" line="144" package="Poetry">
        <name>getInstance</name>
        <full_name>\EC\Poetry\Poetry::getInstance()</full_name>
        <docblock line="144">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="144" description="" type="\EC\Poetry\Poetry">
            <type>\EC\Poetry\Poetry</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="25" code="PPC:ERR-50015">Argument $values is missing from the Docblock of __construct</error>
      <error line="46" code="PPC:ERR-50015">Argument $name is missing from the Docblock of get</error>
      <error line="54" code="PPC:ERR-50015">Argument $name is missing from the Docblock of has</error>
      <error line="62" code="PPC:ERR-50008">No summary for method getIdentifier()</error>
      <error line="70" code="PPC:ERR-50008">No summary for method getClient()</error>
      <error line="78" code="PPC:ERR-50008">No summary for method getServer()</error>
      <error line="86" code="PPC:ERR-50008">No summary for method getSettings()</error>
      <error line="94" code="PPC:ERR-50008">No summary for method getRenderer()</error>
      <error line="102" code="PPC:ERR-50008">No summary for method getRenderEngine()</error>
      <error line="110" code="PPC:ERR-50008">No summary for method getValidator()</error>
      <error line="118" code="PPC:ERR-50008">No summary for method getLogger()</error>
      <error line="126" code="PPC:ERR-50008">No summary for method getEventDispatcher()</error>
      <error line="144" code="PPC:ERR-50008">No summary for method getInstance()</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $container</error>
    </parse_markers>
    <source>eJytVlFP2zAQfs+v8EMlUjToexkFqVQTEpMqKo0HgpCXXFJrqRP5nECF+t93ceIkzQAXWKQ2yeW7+z6ffT5/v8jXuedJvgHMeQhsMQ+WGWi1PfO8AnvvwQpUKULAYKmyUkSgMPgJiDwBtJYzt4s17bssxSZPIZhnUnMhWyuqztQ9XUsNKiaxJHFyfOyxYzZPOSKrWem9Ml3ScP6QuM468cIejMGzBhkha+MyI2IDUveMLZn34jG6DGF1EUPJFQu60Voi83Vi7qi5FiHLlSi5BjYKW65zJos0pREMgr5cCrkGJXSUhbu9WHnxO6VYcSFDLTLJHh8pGmpVhNrnSvEtG5U8LQAp9v3D2PjUmo03VzSw6bTv1eDHjYrqGum1wJOZgkQgDdyX8MSGU+aPycM6xJkCHq6ZDcY4slG1nNj5rBE07snocSSgV6C1kAn645MZAgmqHL9Zt45k5/0HviyO0VC+Q/NeGoaL3aSh9ZhMKE/aTnhIEuG0/YiQxtPp3uwbhpp694VFkNjhDOdbgS6UrGnuDeLh62xrjm42m+nFM+XO4t/ivmw8e2Vk80wFv8kzWZVjcB3RTcQClCsbHdJ/NyVHoY1+KlqXozdz9IrOeSrIz6WnRrm0GNCH2KuidGejRjnY0YA+zG42dlvBbiG20h1SatjnxNzSfg7KnRWLc4hRDewAMTfAkwKCZUq7PAYLmVCVH6aixh6o5BQM+gBBq+0mzuS2q6HgF09FxHWmek+3EBYKRQmtySW6BToUlxZ3gNaqzd9kSfVL+g3XIaWGO3SkBvSphC1K+r8SdCzStJmr4btL3gDu0AkV+jFq4W8r/kFd5m51dcOwXvZNlzmoQO4wSl26K4xD7BNBPlShr5yMGuamX+7t4HQ84TL8tyZEzHzY5HrrD/vpeNjyq35dgfzXDxGNwmEYO6Kd9xdv1UJr</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Notifications/AbstractNotification.php" generated-path="oe-poetry-client.src.Messages.Notifications.AbstractNotification.html" hash="2a6851f1826d1ee935174565fd0b7b7c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ParseNotificationEvent">\EC\Poetry\Events\ParseNotificationEvent</namespace-alias>
    <namespace-alias name="AbstractMessage">\EC\Poetry\Messages\AbstractMessage</namespace-alias>
    <namespace-alias name="ParserAwareTrait">\EC\Poetry\Messages\Traits\ParserAwareTrait</namespace-alias>
    <namespace-alias name="ParserAwareInterface">\EC\Poetry\Messages\ParserAwareInterface</namespace-alias>
    <namespace-alias name="EventSubscriberInterface">\Symfony\Component\EventDispatcher\EventSubscriberInterface</namespace-alias>
    <class final="false" abstract="true" namespace="EC\Poetry\Messages\Notifications" line="16" package="EC\Poetry\Messages\Notifications">
      <extends>\EC\Poetry\Messages\AbstractMessage</extends>
      <implements>\EC\Poetry\Messages\ParserAwareInterface</implements>
      <implements>\Symfony\Component\EventDispatcher\EventSubscriberInterface</implements>
      <name>AbstractNotification</name>
      <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification</full_name>
      <docblock line="16">
        <description>Class AbstractNotification.</description>
        <long-description></long-description>
        <tag name="package" line="16" description="EC\Poetry\Messages\Notifications"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\AbstractMessage" refers="\EC\Poetry\Messages\AbstractMessage" link="/classes/EC.Poetry.Messages.AbstractMessage.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Notifications" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Notifications" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="23" package="EC\Poetry\Messages\Notifications">
        <name>getSubscribedEvents</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::getSubscribedEvents()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="35" package="EC\Poetry\Messages\Notifications">
        <name>onParseNotification</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::onParseNotification()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="\EC\Poetry\Events\ParseNotificationEvent" variable="$event">
            <type>\EC\Poetry\Events\ParseNotificationEvent</type>
          </tag>
          <tag name="return" line="35" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseNotificationEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="EC\Poetry\Messages\Notifications">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::fromXml()</full_name>
        <docblock line="45">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="45" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="60" package="EC\Poetry\Messages\Notifications">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::parseXml()</full_name>
        <docblock line="60">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="60" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Notifications\AbstractNotification">
            <type>\EC\Poetry\Messages\Notifications\AbstractNotification</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Notifications\AbstractNotification">
            <type>\EC\Poetry\Messages\Notifications\AbstractNotification</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Notifications\AbstractNotification">
            <type>\EC\Poetry\Messages\Notifications\AbstractNotification</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="35" code="PPC:ERR-50008">No summary for method onParseNotification()</error>
    </parse_markers>
    <source>eJzVkz1v2zAQhnf9ihsMxDHSeo/bNIbroUAdBHWHAFUHmjrZRMUPkFRjI/V/L0lRH46ktmu5SDy+PN49fPnugzqoJBGEo1GEIqxX6aNEq0/pBo0hezTpg7QsZ5RYJoVZJElpurL1TxTWpI9EG+wqQ3zxStzkXO6M1YTaGBjVfdWE1dn18ploDJFRfUf4SVjUueupEm9PPJfilK4kV1K42qrKPzLXt6UH1NV8W+4M1WyHurM/mc9mCcxgVRBjoK692+1bt+wV9w7iD1fJXzk68TwhMRPQ0cSAR4siaxdjOmBcFcg9exhq+gbG2kleEnDDM+ljDUuhWz9m8HLPhGPDbCbpOQbn4avKXcEoGOvKpJCXgoZy99iemVXemF6HDdWxfmi0pRbwrQkADNvn9vZhuVnD+zu4kqInubppEnxfhN9zr353H5pwSP/RrzBB/4m7mySxYM6OmF1AaC4w0mgwDJQ7/eOR1332W7RAgMf7ltpNaG1eYP46BSlAaalQW4YG9sxlAvde4Gnz2VFWGo3T1ga97KkC48pnYg+TIy/qlTB8gmqttzHCSAccHn8aq/0aEjUPsHXkgK8akrmW/IkXU1/iayNN7IGZN3cG7RfyXCkixo7Nokh5+k2iMb+EO3Kg2/49aeki7hCQeQf3/0NUS4vUYtZCvYQx/DwDt5rTOfkNtQz96Q==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Notifications/TranslationReceived.php" generated-path="oe-poetry-client.src.Messages.Notifications.TranslationReceived.html" hash="93e777247d109c9d74cd0ba1afad759a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="TranslationReceivedEvent">\EC\Poetry\Events\Notifications\TranslationReceivedEvent</namespace-alias>
    <namespace-alias name="ParseNotificationEvent">\EC\Poetry\Events\ParseNotificationEvent</namespace-alias>
    <namespace-alias name="WithStatusTrait">\EC\Poetry\Messages\Traits\WithStatusTrait</namespace-alias>
    <namespace-alias name="WithTargetsTrait">\EC\Poetry\Messages\Traits\WithTargetsTrait</namespace-alias>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Notifications" line="16" package="EC\Poetry\Messages\Notifications">
      <extends>\EC\Poetry\Messages\Notifications\AbstractNotification</extends>
      <name>TranslationReceived</name>
      <full_name>\EC\Poetry\Messages\Notifications\TranslationReceived</full_name>
      <docblock line="16">
        <description>Class TranslationReceived</description>
        <long-description></long-description>
        <tag name="package" line="16" description="EC\Poetry\Messages\Notifications"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Notifications\AbstractNotification" refers="\EC\Poetry\Messages\Notifications\AbstractNotification" link="/classes/EC.Poetry.Messages.Notifications.AbstractNotification.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Notifications" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Notifications" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="17" package="EC\Poetry\Messages\Traits">
        <name>$targets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::targets</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="22" package="EC\Poetry\Messages\Notifications">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Notifications\TranslationReceived::getTemplate()</full_name>
        <docblock line="22">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="30" package="EC\Poetry\Messages\Notifications">
        <name>onParseNotification</name>
        <full_name>\EC\Poetry\Messages\Notifications\TranslationReceived::onParseNotification()</full_name>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Notifications\AbstractNotification::onParseNotification()" refers="\EC\Poetry\Messages\Notifications\AbstractNotification::onParseNotification()" link="/classes/EC.Poetry.Messages.Notifications.AbstractNotification.html#method_onParseNotification"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseNotificationEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="44" package="EC\Poetry\Messages\Notifications">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\TranslationReceived::parseXml()</full_name>
        <docblock line="44">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Notifications\AbstractNotification::parseXml()" refers="\EC\Poetry\Messages\Notifications\AbstractNotification::parseXml()" link="/classes/EC.Poetry.Messages.Notifications.AbstractNotification.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="27" package="EC\Poetry\Messages\Traits">
        <name>addTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::addTarget()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Component object.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Target" variable="$target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Notifications\TranslationReceived">
            <type>\EC\Poetry\Messages\Notifications\TranslationReceived</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="39" package="EC\Poetry\Messages\Traits">
        <name>getTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::getTargets()</full_name>
        <docblock line="39">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="52" package="EC\Poetry\Messages\Traits">
        <name>setTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::setTargets()</full_name>
        <docblock line="52">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="$targets">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
          <tag name="return" line="52" description="" type="\EC\Poetry\Messages\Notifications\TranslationReceived">
            <type>\EC\Poetry\Messages\Notifications\TranslationReceived</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targets</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="65" package="EC\Poetry\Messages\Traits">
        <name>withTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::withTarget()</full_name>
        <docblock line="65">
          <description>Factory method: create a new Target and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="65" description="Target instance." type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="23" package="EC\Poetry\Messages\Notifications">
        <name>getSubscribedEvents</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::getSubscribedEvents()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="35" package="EC\Poetry\Messages\Notifications">
        <name>onParseNotification</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::onParseNotification()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="\EC\Poetry\Events\ParseNotificationEvent" variable="$event">
            <type>\EC\Poetry\Events\ParseNotificationEvent</type>
          </tag>
          <tag name="return" line="35" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseNotificationEvent</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="EC\Poetry\Messages\Notifications">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::fromXml()</full_name>
        <docblock line="45">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="45" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="60" package="EC\Poetry\Messages\Notifications">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::parseXml()</full_name>
        <docblock line="60">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="60" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Notifications\TranslationReceived">
            <type>\EC\Poetry\Messages\Notifications\TranslationReceived</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Notifications\TranslationReceived">
            <type>\EC\Poetry\Messages\Notifications\TranslationReceived</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Notifications\TranslationReceived">
            <type>\EC\Poetry\Messages\Notifications\TranslationReceived</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="30" code="PPC:ERR-50015">Argument $event is missing from the Docblock of onParseNotification</error>
      <error line="44" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
    </parse_markers>
    <source>eJytVE2P2jAQvftXWCukBATivhS6K4RUDu2iXaS2EhfjDGCV2Kk92Q+t+O8dOyFkQ2i3VX2JYr9582be2B8+ZruMMS1ScJmQwGfT1cIA2pfVZ3BObMGtvhhUGyUFKqPdiLHc1WGzR9DYAK2WVmi3Dz/3IEE9QhJwo/bghbAO6gyt4EoQsSuK+qpw94ACcxc23gNfCrsFbMc/gH1UEko1lgod9nqM9/h0L5zjLSXRoT+/ocb9oEx/7B2Bh0xeYuPwjKATx2/XDq2QWI9lr4zT8orP6/AnQatfPf56o/QOrMLEyEO5OQzfLF/vleSbXEtPyoljCWlGOiDuBkSRxi8LmFvNI12v4PoaT8KjIvOB/bsAo8+sj9uHgXfAf5oqO1kwi495B3fKDSZUUuFf3B01UYOJSJJv6X5qNHUa44IyxNBu3K1FqA2Po3qtfDwen3go4hbRqnVOnYsWd7Pl/fehhZ85OIz6PMKXDKJutyY0yCgkbqxJfb7fpA/o8tgBhg7EGp7a5qY4DNwXKdBkC2sysS1aXIMd/t5DaxAk0sBWNoa2hJKe0/3/tcgTjtgJRv/8rRF35IE94hteDBNIhU5gnkT1XJWOeUJBNGheS82YZtICT0aU93qexO8eBUWp35AdA0HI3dSkmdFe+FVDuCg5/a276p9aXVwPyzvyGHphyp6qZ6K82qcVSiktOPfkHF31pco5mBjf9U/YmNtDv0hfL7h8SML+8cU4sF9sPgep</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Notifications/StatusUpdated.php" generated-path="oe-poetry-client.src.Messages.Notifications.StatusUpdated.html" hash="258b8455862f7ab4f3f0d38e34071bc1" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="StatusUpdatedEvent">\EC\Poetry\Events\Notifications\StatusUpdatedEvent</namespace-alias>
    <namespace-alias name="ParseNotificationEvent">\EC\Poetry\Events\ParseNotificationEvent</namespace-alias>
    <namespace-alias name="WithStatusTrait">\EC\Poetry\Messages\Traits\WithStatusTrait</namespace-alias>
    <namespace-alias name="WithTargetsTrait">\EC\Poetry\Messages\Traits\WithTargetsTrait</namespace-alias>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Notifications" line="16" package="EC\Poetry\Messages\Notifications">
      <extends>\EC\Poetry\Messages\Notifications\AbstractNotification</extends>
      <name>StatusUpdated</name>
      <full_name>\EC\Poetry\Messages\Notifications\StatusUpdated</full_name>
      <docblock line="16">
        <description>Class StatusUpdated</description>
        <long-description></long-description>
        <tag name="package" line="16" description="EC\Poetry\Messages\Notifications"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Notifications\AbstractNotification" refers="\EC\Poetry\Messages\Notifications\AbstractNotification" link="/classes/EC.Poetry.Messages.Notifications.AbstractNotification.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Notifications" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Notifications" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="18" package="EC\Poetry\Messages\Traits">
        <name>$statuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::statuses</full_name>
        <default>array()</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="17" package="EC\Poetry\Messages\Traits">
        <name>$targets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::targets</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Notifications" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="24" package="EC\Poetry\Messages\Notifications">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Notifications\StatusUpdated::getTemplate()</full_name>
        <docblock line="24">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="32" package="EC\Poetry\Messages\Notifications">
        <name>onParseNotification</name>
        <full_name>\EC\Poetry\Messages\Notifications\StatusUpdated::onParseNotification()</full_name>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Notifications\AbstractNotification::onParseNotification()" refers="\EC\Poetry\Messages\Notifications\AbstractNotification::onParseNotification()" link="/classes/EC.Poetry.Messages.Notifications.AbstractNotification.html#method_onParseNotification"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseNotificationEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="46" package="EC\Poetry\Messages\Notifications">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\StatusUpdated::parseXml()</full_name>
        <docblock line="46">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Notifications\AbstractNotification::parseXml()" refers="\EC\Poetry\Messages\Notifications\AbstractNotification::parseXml()" link="/classes/EC.Poetry.Messages.Notifications.AbstractNotification.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="26" package="EC\Poetry\Messages\Traits">
        <name>getStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getStatuses()</full_name>
        <docblock line="26">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="39" package="EC\Poetry\Messages\Traits">
        <name>setStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::setStatuses()</full_name>
        <docblock line="39">
          <description>Set components.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;List of component instances.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;" variable="$statuses">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\Notifications\StatusUpdated">
            <type>\EC\Poetry\Messages\Notifications\StatusUpdated</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="54" package="EC\Poetry\Messages\Traits">
        <name>addStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::addStatus()</full_name>
        <docblock line="54">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;Component instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Status" variable="$status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\Notifications\StatusUpdated">
            <type>\EC\Poetry\Messages\Notifications\StatusUpdated</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="67" package="EC\Poetry\Messages\Traits">
        <name>withStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::withStatus()</full_name>
        <docblock line="67">
          <description>Factory method: create a new Status and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="67" description="Status instance." type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="80" package="EC\Poetry\Messages\Traits">
        <name>isSuccessful</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::isSuccessful()</full_name>
        <docblock line="80">
          <description>Check if all statuses are successful.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="True if there are no errors neither warnings, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="91" package="EC\Poetry\Messages\Traits">
        <name>hasErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasErrors()</full_name>
        <docblock line="91">
          <description>Check some statuses have errors.</description>
          <long-description></long-description>
          <tag name="return" line="91" description="True if some status has errors, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="102" package="EC\Poetry\Messages\Traits">
        <name>hasWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasWarnings()</full_name>
        <docblock line="102">
          <description>Check some statuses have warnings.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="True if some status has warnings, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="113" package="EC\Poetry\Messages\Traits">
        <name>getErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getErrors()</full_name>
        <docblock line="113">
          <description>Get statuses with errors.</description>
          <long-description></long-description>
          <tag name="return" line="113" description="Statuses with errors." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="128" package="EC\Poetry\Messages\Traits">
        <name>countErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::countErrors()</full_name>
        <docblock line="128">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="128" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="139" package="EC\Poetry\Messages\Traits">
        <name>getWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getWarnings()</full_name>
        <docblock line="139">
          <description>Get statuses with warnings.</description>
          <long-description></long-description>
          <tag name="return" line="139" description="Statuses with warnings." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="154" package="EC\Poetry\Messages\Traits">
        <name>countWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::countWarnings()</full_name>
        <docblock line="154">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="162" package="EC\Poetry\Messages\Traits">
        <name>hasRequestStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasRequestStatus()</full_name>
        <docblock line="162">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="162" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="170" package="EC\Poetry\Messages\Traits">
        <name>getRequestStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getRequestStatus()</full_name>
        <docblock line="170">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="\EC\Poetry\Messages\Components\Status|null">
            <type>\EC\Poetry\Messages\Components\Status</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="184" package="EC\Poetry\Messages\Traits">
        <name>hasDemandStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasDemandStatus()</full_name>
        <docblock line="184">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="184" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="192" package="EC\Poetry\Messages\Traits">
        <name>getDemandStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getDemandStatus()</full_name>
        <docblock line="192">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="192" description="" type="\EC\Poetry\Messages\Components\Status|null">
            <type>\EC\Poetry\Messages\Components\Status</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="206" package="EC\Poetry\Messages\Traits">
        <name>hasAttributionStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasAttributionStatuses()</full_name>
        <docblock line="206">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="206" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="214" package="EC\Poetry\Messages\Traits">
        <name>getAttributionStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getAttributionStatuses()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="214" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="27" package="EC\Poetry\Messages\Traits">
        <name>addTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::addTarget()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Component object.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Target" variable="$target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Notifications\StatusUpdated">
            <type>\EC\Poetry\Messages\Notifications\StatusUpdated</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="39" package="EC\Poetry\Messages\Traits">
        <name>getTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::getTargets()</full_name>
        <docblock line="39">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="52" package="EC\Poetry\Messages\Traits">
        <name>setTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::setTargets()</full_name>
        <docblock line="52">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="$targets">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
          <tag name="return" line="52" description="" type="\EC\Poetry\Messages\Notifications\StatusUpdated">
            <type>\EC\Poetry\Messages\Notifications\StatusUpdated</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targets</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="65" package="EC\Poetry\Messages\Traits">
        <name>withTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::withTarget()</full_name>
        <docblock line="65">
          <description>Factory method: create a new Target and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="65" description="Target instance." type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="23" package="EC\Poetry\Messages\Notifications">
        <name>getSubscribedEvents</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::getSubscribedEvents()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="35" package="EC\Poetry\Messages\Notifications">
        <name>onParseNotification</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::onParseNotification()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="\EC\Poetry\Events\ParseNotificationEvent" variable="$event">
            <type>\EC\Poetry\Events\ParseNotificationEvent</type>
          </tag>
          <tag name="return" line="35" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseNotificationEvent</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="EC\Poetry\Messages\Notifications">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::fromXml()</full_name>
        <docblock line="45">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="45" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="60" package="EC\Poetry\Messages\Notifications">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Notifications\AbstractNotification::parseXml()</full_name>
        <docblock line="60">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="60" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Notifications\AbstractNotification</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Notifications\StatusUpdated">
            <type>\EC\Poetry\Messages\Notifications\StatusUpdated</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Notifications\StatusUpdated">
            <type>\EC\Poetry\Messages\Notifications\StatusUpdated</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Notifications" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Notifications\StatusUpdated">
            <type>\EC\Poetry\Messages\Notifications\StatusUpdated</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Notifications" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="32" code="PPC:ERR-50015">Argument $event is missing from the Docblock of onParseNotification</error>
      <error line="46" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
    </parse_markers>
    <source>eJzFVE2P2jAQvedXWCukBATivhS6K4RUDu2iLtW2EhdjD2CV2Kk92Q+t8t/rjxBCwrbbbaX6EsV+M/Pem7Hfvc92WRRJmoLJKAMym64WClA/rT6CMXQLZvVJodgIRlEoaUZRlJs6bHYPEhug1S1SzM2XjFME7hGj82ELqg3UY8+CKypLTYWNuhO4CyX8xmvgS6q3gOfxt6DvBYOSjbYSh71eRHpkuqfGkBMxdtudXFmzvtsav/XLgocRa+ch8IgguSHXa4OaMqxHRc8RscuxbEmtH5yK8keeuVs98nwl5A60QK5YUW4O/TfL13vByCaXzJUjNskS0mxviSVdjwgE3NKAuZYklnVVl5fGc4oDn+IvaivZmoHk/FSQDrhPk2An810jY9LBnTCDiVUTGpl0R03UYEI5/5rup0pa+zEJKX2M3U26tQixIUlcyiTj8fiYwoKvEbVY59aveHEzW37+NtTwIweDcZ/E+JRB3O3WOHoGgd1Gq9SV+kVljy6PDaAXn0h4IO1rlfisLwajyhZaZXQbfK3Bij9vnFYIzI1u1TtviBfzmO7/bV9cwnKkPcz+k9MW3Fj39QHf6MKQQ0olhzmP67UqHnNug+x0OS61ljSLBrxtQXm35zx59RAIW/ok2SEQKNtNVZop6YhfNIiHgbvoH00Ot0GTDjsEvTBZD9VTUV7i4/IiSvPb3WijK0eqmoOJcn5/wMasFv1Q/g1SaWmfe1DeLDg8gf9ZcPlG+v3Di1hEPwEIA0Zt</source>
  </file>
  <file path="oe-poetry-client/src/Messages/ParserAwareInterface.php" generated-path="oe-poetry-client.src.Messages.ParserAwareInterface.html" hash="646258ab4a922a2b68d1d6070c6ebffc" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <interface namespace="EC\Poetry\Messages" line="12" package="EC\Poetry\Messages">
      <name>ParserAwareInterface</name>
      <full_name>\EC\Poetry\Messages\ParserAwareInterface</full_name>
      <docblock line="12">
        <description>Class ParserAwareInterface.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="20" package="EC\Poetry\Messages">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\ParserAwareInterface::getParser()</full_name>
        <docblock line="20">
          <description>Get Parser property.</description>
          <long-description></long-description>
          <tag name="return" line="20" description="Property value." type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="30" package="EC\Poetry\Messages">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\ParserAwareInterface::setParser()</full_name>
        <docblock line="30">
          <description>Set Parser property.</description>
          <long-description></long-description>
          <tag name="param" line="30" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="30" description="" type="\EC\Poetry\Messages\ParserAwareInterface">
            <type>\EC\Poetry\Messages\ParserAwareInterface</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyNUE2LwkAMvedX5OBBe7A/wAUVWZY9CAWvvcQSddg6HZIZRRb/u1Fb2RUVcxmY9/I+8jEOmwDgacsaqGL8nJVFw1EO5ZxVac06Akj6F1iw7FzFWhYkymJ4nmWAGc5qUsXr73RPwt8+sqxMdmjwmTExjx8TfWBjcA6uW3ioAr+ANhe382T4xbFlYpAmsMTDsMU6ykQ4JvFYPi3QMRGLVgN3VCfulPLLG9KydhWukq+iazyuOV7X+wO7wF2uxRu5AgltX8TCXngr3n3RXtw4fRldb9H/O1mRI5wAZQihAw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Requests/CreateTranslationRequest.php" generated-path="oe-poetry-client.src.Messages.Requests.CreateTranslationRequest.html" hash="8342b0cd0916325ede2bda93b9f6e867" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="WithContactsTrait">\EC\Poetry\Messages\Traits\WithContactsTrait</namespace-alias>
    <namespace-alias name="WithDetailsTrait">\EC\Poetry\Messages\Traits\WithDetailsTrait</namespace-alias>
    <namespace-alias name="WithReferenceDocumentsTrait">\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</namespace-alias>
    <namespace-alias name="WithReturnAddressTrait">\EC\Poetry\Messages\Traits\WithReturnAddressTrait</namespace-alias>
    <namespace-alias name="WithSourceTrait">\EC\Poetry\Messages\Traits\WithSourceTrait</namespace-alias>
    <namespace-alias name="WithTargetsTrait">\EC\Poetry\Messages\Traits\WithTargetsTrait</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Requests" line="21" package="EC\Poetry\Messages\Requests">
      <extends>\EC\Poetry\Messages\Requests\AbstractRequest</extends>
      <name>CreateTranslationRequest</name>
      <full_name>\EC\Poetry\Messages\Requests\CreateTranslationRequest</full_name>
      <docblock line="21">
        <description>Create a draft and publish a translation request in one shot.</description>
        <long-description></long-description>
        <tag name="package" line="21" description="EC\Poetry\Messages\Requests"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest" refers="\EC\Poetry\Messages\Requests\AbstractRequest" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW</full_name>
        <value>'new'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="21" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_POST</full_name>
        <value>'post'</value>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW_POST</full_name>
        <value>'newPost'</value>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="23" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION</full_name>
        <value>'modification'</value>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="24" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION_POST</full_name>
        <value>'modificationPost'</value>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_DELETE</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_DELETE</full_name>
        <value>'delete'</value>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="26" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_STATUS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_STATUS</full_name>
        <value>'getStatus'</value>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_TRANSLATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_TRANSLATION</full_name>
        <value>'getTranslationFile'</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="28" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_CONTACTS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_CONTACTS</full_name>
        <value>'getContacts'</value>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$contacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::contacts</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$details</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::details</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\Details" variable="">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$source</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::source</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\Source" variable="">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$returnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::returnAddress</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$targets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::targets</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$referenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::referenceDocuments</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="33" package="EC\Poetry\Messages\Requests">
        <name>$settings</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::settings</full_name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="33" package="EC\Poetry\Messages\Requests">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Requests\CreateTranslationRequest::__construct()</full_name>
        <docblock line="33">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest::__construct()" refers="\EC\Poetry\Messages\Requests\AbstractRequest::__construct()" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="52" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\CreateTranslationRequest::getType()</full_name>
        <docblock line="52">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest::getType()" refers="\EC\Poetry\Messages\Requests\AbstractRequest::getType()" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html#method_getType"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Requests" line="60" package="EC\Poetry\Messages\Requests">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Requests\CreateTranslationRequest::getConstraints()</full_name>
        <docblock line="60">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>addContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::addContact()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Contact instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Contact" variable="$contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contact</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="40" package="EC\Poetry\Messages\Traits">
        <name>getContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::getContacts()</full_name>
        <docblock line="40">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::setContacts()</full_name>
        <docblock line="53">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="$contacts">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contacts</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="66" package="EC\Poetry\Messages\Traits">
        <name>withContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::withContact()</full_name>
        <docblock line="66">
          <description>Factory method: create a new contact and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="Contact instance." type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Traits">
        <name>getDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::getDetails()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithDetailsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="38" package="EC\Poetry\Messages\Traits">
        <name>setDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::setDetails()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Details" variable="$details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$details</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithDetailsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="51" package="EC\Poetry\Messages\Traits">
        <name>withDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::withDetails()</full_name>
        <docblock line="51">
          <description>Factory method: create new details and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Details instance." type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithDetailsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Traits">
        <name>getSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::getSource()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="38" package="EC\Poetry\Messages\Traits">
        <name>setSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::setSource()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Source" variable="$source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="51" package="EC\Poetry\Messages\Traits">
        <name>withSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::withSource()</full_name>
        <docblock line="51">
          <description>Factory method: create new details and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Source instance." type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Traits">
        <name>getReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::getReturnAddress()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="38" package="EC\Poetry\Messages\Traits">
        <name>setReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::setReturnAddress()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="$returnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddress</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="51" package="EC\Poetry\Messages\Traits">
        <name>withReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::withReturnAddress()</full_name>
        <docblock line="51">
          <description>Factory method: create a new return address and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Return address instance." type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>addTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::addTarget()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Component object.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Target" variable="$target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="39" package="EC\Poetry\Messages\Traits">
        <name>getTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::getTargets()</full_name>
        <docblock line="39">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="52" package="EC\Poetry\Messages\Traits">
        <name>setTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::setTargets()</full_name>
        <docblock line="52">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="$targets">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
          <tag name="return" line="52" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targets</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="65" package="EC\Poetry\Messages\Traits">
        <name>withTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::withTarget()</full_name>
        <docblock line="65">
          <description>Factory method: create a new Target and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="65" description="Target instance." type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>addReferenceDocument</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::addReferenceDocument()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Contact instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$referenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$referenceDocument</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="40" package="EC\Poetry\Messages\Traits">
        <name>getReferenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::getReferenceDocuments()</full_name>
        <docblock line="40">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setReferenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::setReferenceDocuments()</full_name>
        <docblock line="53">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;" variable="$referenceDocuments">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$referenceDocuments</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="66" package="EC\Poetry\Messages\Traits">
        <name>withReferenceDocument</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::withReferenceDocument()</full_name>
        <docblock line="66">
          <description>Factory method: create a new ReferenceDocument and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="Target instance." type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="47" package="EC\Poetry\Messages\Requests">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getTemplate()</full_name>
        <docblock line="47">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="57" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getType()</full_name>
        <docblock line="57">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="return" line="57" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="67" package="EC\Poetry\Messages\Requests">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::fromXml()</full_name>
        <docblock line="67">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="67" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="EC\Poetry\Messages\Requests">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::parseXml()</full_name>
        <docblock line="82">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Requests\CreateTranslationRequest">
            <type>\EC\Poetry\Messages\Requests\CreateTranslationRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="33" code="PPC:ERR-50015">Argument $identifier is missing from the Docblock of __construct</error>
      <error line="33" code="PPC:ERR-50015">Argument $settings is missing from the Docblock of __construct</error>
      <error line="60" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
    </parse_markers>
    <source>eJy1VU1v2kAQvftXzAHFNsrHHVoaRDj0kJaC0xxKhTbrMV7VrN3ddSmK+O8dL05sE5NCo/pia/fNm68343cfsjhzHMlWqDPGEcaj+SRFozbzW9SaLVHPp/gzR21033Fy3YoYpasslSiNnn8M6SUigap/CB0oJgh5L0w8SqVh3Gh7dIzBDRomkuPxU4xQoeR4k/J8VUR4gqnJlRyGoaLLo61maa44Hg0PmFrigaBmqH4JTvgZGiPkUu8As80qSuWmKvr8K0tEyEyq5rcsywg5HyVM61uqFR2zv5tRG7ShEKg8wDQMtUZF4ThX3a4DXRgpZAaBQahYZIDJELL8IRE6pjOykzphRqQS1E4pICSQC9Bxai6JoOC4JnX9oOxfExjhrhxehF66DCruEgP426AMKcaHImJuynPn0QF6ikRbdFW/aiqoftNoXf2iTQn1+2YTm5YH5GdRtrzF04XHayFjVMKEKd+Wh1f2bSvNIcoltzVeLLjtVs6NVw0bdMTz9zk8CQY6uvzyLdeuSJaVUVim16uzNSgqy/6zUcfEQl8MKNfKsedfDAg6UWlYcLjBdOj6ZX7FIyLwnrmsrefyRJD55VqHievD2RnsA2RakHPb+EuqpSr20xHQjKSzTlXo+n4t11ro6/1uen4DBmCzGdpSe+7d5GYYjN1WTLDJ0HPX+FCOaTvqjoJ/kf+B9FoJJmVKr5PUEm/Np0z21UYccG9iz41p5BN0a1LYaXT7Bh0vyxLuK1PZ9oDGJOr1puMvd+NZsPg0vl9MPs+C/r+61YYK1fReW3peY19CZ1V+HZqaPesKX5uVp7OLAQtDGo+MVuqmsvLccLeI3HOQuC537m4ne/5JRNrurbfzqPpgvJ2Olzu4jembS6hfqDS68H5A/5Acv5/GbnY79/+Qqxdr+1Q/W2fr/AEDBBVm</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Requests/CreateReviewRequest.php" generated-path="oe-poetry-client.src.Messages.Requests.CreateReviewRequest.html" hash="21f78ed9fb6f4512f5114acba1cd14be" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Requests" line="13" package="EC\Poetry\Messages\Requests">
      <extends>\EC\Poetry\Messages\Requests\CreateTranslationRequest</extends>
      <name>CreateReviewRequest</name>
      <full_name>\EC\Poetry\Messages\Requests\CreateReviewRequest</full_name>
      <docblock line="13">
        <description>Send a review request to Poetry service.</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Messages\Requests"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\CreateTranslationRequest" refers="\EC\Poetry\Messages\Requests\CreateTranslationRequest" link="/classes/EC.Poetry.Messages.Requests.CreateTranslationRequest.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW</full_name>
        <value>'new'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="21" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_POST</full_name>
        <value>'post'</value>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW_POST</full_name>
        <value>'newPost'</value>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="23" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION</full_name>
        <value>'modification'</value>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="24" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION_POST</full_name>
        <value>'modificationPost'</value>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_DELETE</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_DELETE</full_name>
        <value>'delete'</value>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="26" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_STATUS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_STATUS</full_name>
        <value>'getStatus'</value>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_TRANSLATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_TRANSLATION</full_name>
        <value>'getTranslationFile'</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="28" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_CONTACTS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_CONTACTS</full_name>
        <value>'getContacts'</value>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$contacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::contacts</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$details</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::details</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\Details" variable="">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$source</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::source</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\Source" variable="">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$returnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::returnAddress</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$targets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::targets</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$referenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::referenceDocuments</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="33" package="EC\Poetry\Messages\Requests">
        <name>$settings</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::settings</full_name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="18" package="EC\Poetry\Messages\Requests">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Requests\CreateReviewRequest::__construct()</full_name>
        <docblock line="18">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\CreateTranslationRequest::__construct()" refers="\EC\Poetry\Messages\Requests\CreateTranslationRequest::__construct()" link="/classes/EC.Poetry.Messages.Requests.CreateTranslationRequest.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Requests">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\Requests\CreateReviewRequest::getCommunication()</full_name>
        <docblock line="27">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="57" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getType()</full_name>
        <docblock line="57">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="return" line="57" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>addContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::addContact()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Contact instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Contact" variable="$contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contact</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="40" package="EC\Poetry\Messages\Traits">
        <name>getContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::getContacts()</full_name>
        <docblock line="40">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::setContacts()</full_name>
        <docblock line="53">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="$contacts">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contacts</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="66" package="EC\Poetry\Messages\Traits">
        <name>withContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::withContact()</full_name>
        <docblock line="66">
          <description>Factory method: create a new contact and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="Contact instance." type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Traits">
        <name>getDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::getDetails()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithDetailsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="38" package="EC\Poetry\Messages\Traits">
        <name>setDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::setDetails()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Details" variable="$details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$details</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithDetailsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="51" package="EC\Poetry\Messages\Traits">
        <name>withDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::withDetails()</full_name>
        <docblock line="51">
          <description>Factory method: create new details and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Details instance." type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithDetailsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Traits">
        <name>getSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::getSource()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="38" package="EC\Poetry\Messages\Traits">
        <name>setSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::setSource()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Source" variable="$source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="51" package="EC\Poetry\Messages\Traits">
        <name>withSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::withSource()</full_name>
        <docblock line="51">
          <description>Factory method: create new details and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Source instance." type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Traits">
        <name>getReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::getReturnAddress()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="38" package="EC\Poetry\Messages\Traits">
        <name>setReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::setReturnAddress()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="$returnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddress</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="51" package="EC\Poetry\Messages\Traits">
        <name>withReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::withReturnAddress()</full_name>
        <docblock line="51">
          <description>Factory method: create a new return address and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Return address instance." type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>addTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::addTarget()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Component object.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Target" variable="$target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="39" package="EC\Poetry\Messages\Traits">
        <name>getTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::getTargets()</full_name>
        <docblock line="39">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="52" package="EC\Poetry\Messages\Traits">
        <name>setTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::setTargets()</full_name>
        <docblock line="52">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="$targets">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
          <tag name="return" line="52" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targets</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="65" package="EC\Poetry\Messages\Traits">
        <name>withTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::withTarget()</full_name>
        <docblock line="65">
          <description>Factory method: create a new Target and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="65" description="Target instance." type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithTargetsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>addReferenceDocument</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::addReferenceDocument()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Contact instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$referenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$referenceDocument</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="40" package="EC\Poetry\Messages\Traits">
        <name>getReferenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::getReferenceDocuments()</full_name>
        <docblock line="40">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setReferenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::setReferenceDocuments()</full_name>
        <docblock line="53">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;" variable="$referenceDocuments">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$referenceDocuments</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="66" package="EC\Poetry\Messages\Traits">
        <name>withReferenceDocument</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::withReferenceDocument()</full_name>
        <docblock line="66">
          <description>Factory method: create a new ReferenceDocument and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="Target instance." type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="47" package="EC\Poetry\Messages\Requests">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getTemplate()</full_name>
        <docblock line="47">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="67" package="EC\Poetry\Messages\Requests">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::fromXml()</full_name>
        <docblock line="67">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="67" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="EC\Poetry\Messages\Requests">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::parseXml()</full_name>
        <docblock line="82">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Requests\CreateReviewRequest">
            <type>\EC\Poetry\Messages\Requests\CreateReviewRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="18" code="PPC:ERR-50015">Argument $identifier is missing from the Docblock of __construct</error>
      <error line="18" code="PPC:ERR-50015">Argument $settings is missing from the Docblock of __construct</error>
    </parse_markers>
    <source>eJydkU1rwkAQhu/7K+YgaENb77G0ShDqwUQSLQgB2W5GXRp30/2wLeJ/72aNH5XSQ/cyS+Z533kz+/BUrStCBN2grihDGEb5RKJRX/kYtaYr1HmK7xa10T1CrP6ViOSmkgKF0fmocIUvOareFZ2h2nLm6AyN4WJV+3WDgEAAGYoCKCjccvxwxc8DI+EgBX2Q3ju2xvsu6Zsb/FdYx3UJK6nWECmkBlNv3rQBP42beexNFRW6pIZL0QBkR8Adn68+Aez6XKxRcVNItm8+dn2t7GvJGSytYLUDLBZMCm2UZaZzXge0+Ol+C8cdQEs3txvvdRjrXalyeBheuv2wOCt7J9EFcPfo+hMli1rYTocv7Ybbk///2gqNe+uNFZz5bXWuUys0Vgn3YOUyDKNkPJ7Fo2gwHSXxYpDN4+g5TeJklh2T7Mk3h4HOkQ==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Requests/GetNewNumber.php" generated-path="oe-poetry-client.src.Messages.Requests.GetNewNumber.html" hash="ec3518e554aaafa774a7080813e24920" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="file" line="0" description="Contains \EC\Poetry\Messages\Requests\GetNewNumber"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Requests" line="18" package="EC\Poetry\Messages\Requests">
      <extends>\EC\Poetry\Messages\Requests\AbstractRequest</extends>
      <name>GetNewNumber</name>
      <full_name>\EC\Poetry\Messages\Requests\GetNewNumber</full_name>
      <docblock line="18">
        <description>Get status of a translation request.</description>
        <long-description></long-description>
        <tag name="package" line="18" description="EC\Poetry\Messages\Requests"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest" refers="\EC\Poetry\Messages\Requests\AbstractRequest" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW</full_name>
        <value>'new'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="21" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_POST</full_name>
        <value>'post'</value>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW_POST</full_name>
        <value>'newPost'</value>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="23" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION</full_name>
        <value>'modification'</value>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="24" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION_POST</full_name>
        <value>'modificationPost'</value>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_DELETE</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_DELETE</full_name>
        <value>'delete'</value>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="26" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_STATUS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_STATUS</full_name>
        <value>'getStatus'</value>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_TRANSLATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_TRANSLATION</full_name>
        <value>'getTranslationFile'</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="28" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_CONTACTS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_CONTACTS</full_name>
        <value>'getContacts'</value>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="33" package="EC\Poetry\Messages\Requests">
        <name>$settings</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::settings</full_name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="23" package="EC\Poetry\Messages\Requests">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Requests\GetNewNumber::__construct()</full_name>
        <docblock line="23">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest::__construct()" refers="\EC\Poetry\Messages\Requests\AbstractRequest::__construct()" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="32" package="EC\Poetry\Messages\Requests">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Requests\GetNewNumber::getTemplate()</full_name>
        <docblock line="32">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest::getTemplate()" refers="\EC\Poetry\Messages\Requests\AbstractRequest::getTemplate()" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html#method_getTemplate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="40" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\GetNewNumber::getType()</full_name>
        <docblock line="40">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest::getType()" refers="\EC\Poetry\Messages\Requests\AbstractRequest::getType()" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html#method_getType"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="47" package="EC\Poetry\Messages\Requests">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getTemplate()</full_name>
        <docblock line="47">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="57" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getType()</full_name>
        <docblock line="57">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="return" line="57" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="67" package="EC\Poetry\Messages\Requests">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::fromXml()</full_name>
        <docblock line="67">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="67" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="EC\Poetry\Messages\Requests">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::parseXml()</full_name>
        <docblock line="82">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\GetNewNumber">
            <type>\EC\Poetry\Messages\Requests\GetNewNumber</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Requests\GetNewNumber">
            <type>\EC\Poetry\Messages\Requests\GetNewNumber</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Requests\GetNewNumber">
            <type>\EC\Poetry\Messages\Requests\GetNewNumber</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="23" code="PPC:ERR-50015">Argument $identifier is missing from the Docblock of __construct</error>
      <error line="23" code="PPC:ERR-50015">Argument $settings is missing from the Docblock of __construct</error>
    </parse_markers>
    <source>eJytUc1PwjAUv/eveAeSIRG5D6MQshgPEgSMlyWkdG/QuLWzrxUJ4X+3G+NDohyMvfSl/X22t/fFsmCs02oxaEEvlRmWw0Ary6UiiKNBPNJozTp+QiK+QIrH+O6QLMUPaIe4Grp8jsazOowpniMVXCBc4HUZc/QjYqDzQitUXvsx8ZtMJZruGXqC5kMKj56gtVItSr06vw8EZLl1BDoFDtZwRRm3UiswO/cbj6uq+pRv3vRS0KqTyDgRnFYF/LSoEoL+nLyDsDWebRj4VWUpVws2PamWaKRNtNjWh51qL9w8kwJSp0SVbjYTWnk1J2zzWB0a8jBfw74vNKieriqtnW2lyo2Hh+Gp2jeJI7N7IJ0A2nf+fmR0UhKD6bgf1Lgt+3u1Bdop5oX/BmyeBzZonVEQ5PXTh2H9TW2Fq7aqnjv4nwjr4ld7wiwNw3H0/BJNprNh9Lp33LIvd0P7HQ==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Requests/AbstractRequest.php" generated-path="oe-poetry-client.src.Messages.Requests.AbstractRequest.html" hash="d6b251feb0deba4f0ecda38b8f69795c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="AbstractMessage">\EC\Poetry\Messages\AbstractMessage</namespace-alias>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="ParserAwareInterface">\EC\Poetry\Messages\ParserAwareInterface</namespace-alias>
    <namespace-alias name="ParserAwareTrait">\EC\Poetry\Messages\Traits\ParserAwareTrait</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <class final="false" abstract="true" namespace="EC\Poetry\Messages\Requests" line="16" package="EC\Poetry\Messages\Requests">
      <extends>\EC\Poetry\Messages\AbstractMessage</extends>
      <implements>\EC\Poetry\Messages\ParserAwareInterface</implements>
      <name>AbstractRequest</name>
      <full_name>\EC\Poetry\Messages\Requests\AbstractRequest</full_name>
      <docblock line="16">
        <description>Class AbstractRequest.</description>
        <long-description></long-description>
        <tag name="package" line="16" description="EC\Poetry\Messages\Requests"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\AbstractMessage" refers="\EC\Poetry\Messages\AbstractMessage" link="/classes/EC.Poetry.Messages.AbstractMessage.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW</full_name>
        <value>'new'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="21" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_POST</full_name>
        <value>'post'</value>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW_POST</full_name>
        <value>'newPost'</value>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="23" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION</full_name>
        <value>'modification'</value>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="24" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION_POST</full_name>
        <value>'modificationPost'</value>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_DELETE</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_DELETE</full_name>
        <value>'delete'</value>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="26" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_STATUS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_STATUS</full_name>
        <value>'getStatus'</value>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_TRANSLATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_TRANSLATION</full_name>
        <value>'getTranslationFile'</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="28" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_CONTACTS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_CONTACTS</full_name>
        <value>'getContacts'</value>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="33" package="EC\Poetry\Messages\Requests">
        <name>$settings</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::settings</full_name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="38" package="EC\Poetry\Messages\Requests">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::__construct()</full_name>
        <docblock line="38">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\AbstractMessage::__construct()" refers="\EC\Poetry\Messages\AbstractMessage::__construct()" link="/classes/EC.Poetry.Messages.AbstractMessage.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="47" package="EC\Poetry\Messages\Requests">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getTemplate()</full_name>
        <docblock line="47">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="57" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getType()</full_name>
        <docblock line="57">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="return" line="57" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="67" package="EC\Poetry\Messages\Requests">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::fromXml()</full_name>
        <docblock line="67">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="67" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="EC\Poetry\Messages\Requests">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::parseXml()</full_name>
        <docblock line="82">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\AbstractRequest">
            <type>\EC\Poetry\Messages\Requests\AbstractRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Requests\AbstractRequest">
            <type>\EC\Poetry\Messages\Requests\AbstractRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Requests\AbstractRequest">
            <type>\EC\Poetry\Messages\Requests\AbstractRequest</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="38" code="PPC:ERR-50015">Argument $identifier is missing from the Docblock of __construct</error>
      <error line="38" code="PPC:ERR-50015">Argument $settings is missing from the Docblock of __construct</error>
      <error line="33" code="PPC:ERR-50007">No summary for property $settings</error>
    </parse_markers>
    <source>eJzVVE1vm0AQvfMr5mApTtQmd7sfsQipLCW2a4iag6Vog8fOqrDQ3SEfSv3fO4sXsB1IDz2VC7Dz9u2bN7Pz6Wv+kHueEimaXMQIgb+YZUj6ZXGNxog1msUcfxVoyAw9rzCtiNG9IS1icgvDLpyfpXmmUJFZjJf8kiuJuhM9E9qgHj0JjWNFqFesrxMcaSFpb0+5cogPUT/KmPEhEkm1tkmdnZx4cAJ+IoyBKhWX9ClHbPCczfnJB73nD+POPOH2Q9xGB/hMqJbNuiMBmeYJptYZaEvbe/WAH5vL2wzLUJwppp8H32+CMLqbBD/gMxwpfDoatoRn0zCy8Twz1Arg/TWISWZduOvpxfhy7I+i8XRisWm25JrGgmSm/rqhPmF3V+dRF8FVEAUWvsQECVtBYTSKbkILWiOFJKgwrbhoPpqEV7VsBrOXyiSlhEuZtLP700k08qOK388UcQntCSW47CP7cLs8Cg2Ld9rOAc/Kd64zwphwCT3TtOUB5eu5VA+oJS2zeLO/vbhPZAyrQsVWPtzdlbJ1EVO/uWbQk/X3B6h0NCcel1zbPitZucEUDQa7bDsUx8Ma2aMHaT5+qYjYnZ00LGDzD8nY0iBfDkHYP5SokQqtuH/cTRwM9PaaHXWd+w0JHAboJcdTF6jr5ig5X5a/J6y+2G0Kmap//LZm7DIIcPIg0/wTVyMQpL3cSiS2/DlqkmhgLR9RAQ8yuL2+YqW5RsPYsi3faOUKidRJhd5zmlSR8rEE21hXkouWWeY+6sHzuw1Uj/FmPr1XwpXO0ts06VuJhyVsemcunrYIZ+NOgR0ot5OvJuoqcTkf2egmf+t0xit8CGSrHbv/H0frAVGbum9G+8Uofat82nh/APqhdoI=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Requests/GetRequestStatus.php" generated-path="oe-poetry-client.src.Messages.Requests.GetRequestStatus.html" hash="02832a6a5081d7a0412cdba54efb5466" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="file" line="0" description="Contains \EC\Poetry\Messages\Requests\GetRequestStatus"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Requests" line="15" package="EC\Poetry\Messages\Requests">
      <extends>\EC\Poetry\Messages\Requests\AbstractRequest</extends>
      <name>GetRequestStatus</name>
      <full_name>\EC\Poetry\Messages\Requests\GetRequestStatus</full_name>
      <docblock line="15">
        <description>Get status of a translation request.</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Messages\Requests"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest" refers="\EC\Poetry\Messages\Requests\AbstractRequest" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW</full_name>
        <value>'new'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="21" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_POST</full_name>
        <value>'post'</value>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_NEW_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_NEW_POST</full_name>
        <value>'newPost'</value>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="23" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION</full_name>
        <value>'modification'</value>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="24" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_MODIFICATION_POST</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_MODIFICATION_POST</full_name>
        <value>'modificationPost'</value>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_DELETE</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_DELETE</full_name>
        <value>'delete'</value>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="26" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_STATUS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_STATUS</full_name>
        <value>'getStatus'</value>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_TRANSLATION</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_TRANSLATION</full_name>
        <value>'getTranslationFile'</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="28" package="EC\Poetry\Messages\Requests">
        <name>REQUEST_CONTACTS</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::REQUEST_CONTACTS</full_name>
        <value>'getContacts'</value>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="33" package="EC\Poetry\Messages\Requests">
        <name>$settings</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::settings</full_name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Requests" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="20" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\GetRequestStatus::getType()</full_name>
        <docblock line="20">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Requests\AbstractRequest::getType()" refers="\EC\Poetry\Messages\Requests\AbstractRequest::getType()" link="/classes/EC.Poetry.Messages.Requests.AbstractRequest.html#method_getType"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="47" package="EC\Poetry\Messages\Requests">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getTemplate()</full_name>
        <docblock line="47">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="57" package="EC\Poetry\Messages\Requests">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::getType()</full_name>
        <docblock line="57">
          <description>Get request type.</description>
          <long-description></long-description>
          <tag name="return" line="57" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="67" package="EC\Poetry\Messages\Requests">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::fromXml()</full_name>
        <docblock line="67">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="67" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="EC\Poetry\Messages\Requests">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Requests\AbstractRequest::parseXml()</full_name>
        <docblock line="82">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Requests\AbstractRequest</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Requests\GetRequestStatus">
            <type>\EC\Poetry\Messages\Requests\GetRequestStatus</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Requests\GetRequestStatus">
            <type>\EC\Poetry\Messages\Requests\GetRequestStatus</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Requests" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Requests\GetRequestStatus">
            <type>\EC\Poetry\Messages\Requests\GetRequestStatus</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Requests" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9jjFvwjAQhXf/ihtLhmaHSoBQ1KkSkLBZqoy5gFXXNr6zVITy33EM7dCBt/jke++79zYPpyBEXVUCKlj0xuI4rLxjZRyBbFZy7ZHjRX4gkToiyS2eExKTfEd+zC0rTpSTtRBOfSMFpRGeZGd/NzMEqMTB96CAo3JkFRvvIN7dr9lX6mXqV8Y8A5cO2ioi+F8P8IfRHQiWe8pX9O9WXAVklT6jKrgujDthNHzwenh81uUNaW+Nhj45XRoekbtLwJdJ2d5BoyJyig4IbT+dbpvNrmm7z7Zbdrt2VkyDGMQN9zV5ng==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/ComponentInterface.php" generated-path="oe-poetry-client.src.Messages.ComponentInterface.html" hash="a48dcae7600fae10911813c879df031a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <interface namespace="EC\Poetry\Messages" line="12" package="EC\Poetry\Messages">
      <extends>\ArrayAccess</extends>
      <name>ComponentInterface</name>
      <full_name>\EC\Poetry\Messages\ComponentInterface</full_name>
      <docblock line="12">
        <description>Interface ComponentInterface</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="19" package="EC\Poetry\Messages">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\ComponentInterface::getTemplate()</full_name>
        <docblock line="19">
          <description>Get template name.</description>
          <long-description></long-description>
          <tag name="return" line="19" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="27" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\ComponentInterface::getAttributes()</full_name>
        <docblock line="27">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="27" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="35" package="EC\Poetry\Messages">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\ComponentInterface::withArray()</full_name>
        <docblock line="35">
          <description>Construct component from given array.</description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="35" description="" type="\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages" line="40" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\ComponentInterface::getConstraints()</full_name>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="40" description="" type="\Symfony\Component\Validator\Mapping\ClassMetadata" variable="$metadata">
            <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="40" code="PPC:ERR-50008">No summary for method getConstraints()</error>
    </parse_markers>
    <source>eJyVkk1Lw0AQhu/7K+bQQ83B/gAFW4KIh4KgeNrLdDtJF7Mf7E7UIP53J2la0KYF97JhPt73mcne3sVdVMqjoxzRENyX+ikQp06vKWesKd8o1WaC585VwXe6DC4GT571KzZ2ixySXmOM1te6bDDnNTFKGKVvURQKCnj0TKnq1Y/Nx5Dk+5KlmL+J24S/pBfKXpAA+mTy2wx6lRJ2K2OkU30pkDMQ9KeAB2JgcrFBJugHvh4zh4JlIm6Th8xJhhmji+GO7aaxBqrWG7bBQ038MkrNr2TQCaskSJRoC8iit2mZ8jlD7LEPQYBhCgjVROdZmtWxdIqnDF6Gag2DOWwPqhQc1PadRv8TuIgJ3T4Hs5hCpMS2/x2/4We8s/ki3ofl3TDT/ERsgnX01f9+bzBz49cUTWbkPzvbbwXlaeX5GSXh+1Y/pwf71Q==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/MessageAwareInterface.php" generated-path="oe-poetry-client.src.Messages.MessageAwareInterface.html" hash="29319a90af78e6cc520ea4d525529478" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MessageInterface">\EC\Poetry\Messages\MessageInterface</namespace-alias>
    <interface namespace="EC\Poetry\Messages" line="12" package="EC\Poetry\Messages">
      <name>MessageAwareInterface</name>
      <full_name>\EC\Poetry\Messages\MessageAwareInterface</full_name>
      <docblock line="12">
        <description>Interface MessageAwareInterface</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="17" package="EC\Poetry\Messages">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Messages\MessageAwareInterface::getMessage()</full_name>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="\EC\Poetry\Messages\MessageInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="22" package="EC\Poetry\Messages">
        <name>setMessage</name>
        <full_name>\EC\Poetry\Messages\MessageAwareInterface::setMessage()</full_name>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$message">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="27" package="EC\Poetry\Messages">
        <name>hasMessage</name>
        <full_name>\EC\Poetry\Messages\MessageAwareInterface::hasMessage()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50008">No summary for method getMessage()</error>
      <error line="22" code="PPC:ERR-50008">No summary for method setMessage()</error>
      <error line="27" code="PPC:ERR-50008">No summary for method hasMessage()</error>
    </parse_markers>
    <source>eJyNjz0OwjAMhXefwgMDdOkBQAKEGBiQOECXtHJ/RJtE+RFCiLvjlkARKqVeEtnP7/NbrXWpAaRoyGqREe53yUmRM9fkSNaKguwSwNuhwetzkI5MzsusjKMIMMJ3C4NmexGmF7KkVW2YeObhgDePY6j+uNwAuTpkW2xoyHkjMZlwbNiJu1f7tK4yzL3MXKUkFuSCfr7gVN8YLYxoJlFw1jw7ozjb434aDN0R4qZK1aP+pbAfce7wAGPqn64=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/MessageInterface.php" generated-path="oe-poetry-client.src.Messages.MessageInterface.html" hash="db5842081e4e0bda71a0e0be60013991" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="EC\Poetry\Messages" line="10" package="EC\Poetry\Messages">
      <extends>\EC\Poetry\Messages\ComponentInterface</extends>
      <name>MessageInterface</name>
      <full_name>\EC\Poetry\Messages\MessageInterface</full_name>
      <docblock line="10">
        <description>Interface MessageInterface</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Messages"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface" refers="\EC\Poetry\Messages\ComponentInterface" link="/classes/EC.Poetry.Messages.ComponentInterface.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="18" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\MessageInterface::getIdentifier()</full_name>
        <docblock line="18">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="18" description="Property value." type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="25" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\MessageInterface::getMessageId()</full_name>
        <docblock line="25">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyFkE0OgjAQhfc9xSyVhRxAE0nQGBYmHKAbhAEbZdq0g5EY725BfhZqnE2Tea/fe5nN1pyNEJTV6EyWI+xjmWpk28ojOpdV6NZChEEgIICEGG3ZuQZtWni1M0QecfH7LxQvh0L9BADeGalwEOvaaELimf0Q4Kfv0E0AB2RICu9RpUILxmqDltvVoI+2yCI3lkB+tpFTjJMzafwIkA5IuGXXBkdw2L+mOV1VDmVDOStNUCHPiMXSn+tL3fodDMnuV0vHVlH1L2m8W9EFPcULhQaJGw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Responses/Status.php" generated-path="oe-poetry-client.src.Messages.Responses.Status.html" hash="cf8d5e25fb1d7ccf80001f1602452122" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ParseResponseEvent">\EC\Poetry\Events\ParseResponseEvent</namespace-alias>
    <namespace-alias name="ParserAwareTrait">\EC\Poetry\Messages\Traits\ParserAwareTrait</namespace-alias>
    <namespace-alias name="WithStatusTrait">\EC\Poetry\Messages\Traits\WithStatusTrait</namespace-alias>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Responses" line="15" package="EC\Poetry\Messages\Responses">
      <extends>\EC\Poetry\Messages\Responses\AbstractResponse</extends>
      <name>Status</name>
      <full_name>\EC\Poetry\Messages\Responses\Status</full_name>
      <docblock line="15">
        <description>Status response, sent back to poetry server after a notification has come in.</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Messages\Responses"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Responses\AbstractResponse" refers="\EC\Poetry\Messages\Responses\AbstractResponse" link="/classes/EC.Poetry.Messages.Responses.AbstractResponse.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Responses" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Responses" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="18" package="EC\Poetry\Messages\Traits">
        <name>$statuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::statuses</full_name>
        <default>array()</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="23" package="EC\Poetry\Messages\Responses">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Responses\Status::getTemplate()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="31" package="EC\Poetry\Messages\Responses">
        <name>onParseResponse</name>
        <full_name>\EC\Poetry\Messages\Responses\Status::onParseResponse()</full_name>
        <docblock line="31">
          <description>Parse response event handler.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Responses\AbstractResponse::onParseResponse()" refers="\EC\Poetry\Messages\Responses\AbstractResponse::onParseResponse()" link="/classes/EC.Poetry.Messages.Responses.AbstractResponse.html#method_onParseResponse"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseResponseEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="44" package="EC\Poetry\Messages\Responses">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Responses\Status::parseXml()</full_name>
        <docblock line="44">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Responses\AbstractResponse::parseXml()" refers="\EC\Poetry\Messages\Responses\AbstractResponse::parseXml()" link="/classes/EC.Poetry.Messages.Responses.AbstractResponse.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Responses\Status">
            <type>\EC\Poetry\Messages\Responses\Status</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="26" package="EC\Poetry\Messages\Traits">
        <name>getStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getStatuses()</full_name>
        <docblock line="26">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="39" package="EC\Poetry\Messages\Traits">
        <name>setStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::setStatuses()</full_name>
        <docblock line="39">
          <description>Set components.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;List of component instances.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;" variable="$statuses">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\Responses\Status">
            <type>\EC\Poetry\Messages\Responses\Status</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="54" package="EC\Poetry\Messages\Traits">
        <name>addStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::addStatus()</full_name>
        <docblock line="54">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;Component instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Status" variable="$status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\Responses\Status">
            <type>\EC\Poetry\Messages\Responses\Status</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="67" package="EC\Poetry\Messages\Traits">
        <name>withStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::withStatus()</full_name>
        <docblock line="67">
          <description>Factory method: create a new Status and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="67" description="Status instance." type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="80" package="EC\Poetry\Messages\Traits">
        <name>isSuccessful</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::isSuccessful()</full_name>
        <docblock line="80">
          <description>Check if all statuses are successful.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="True if there are no errors neither warnings, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="91" package="EC\Poetry\Messages\Traits">
        <name>hasErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasErrors()</full_name>
        <docblock line="91">
          <description>Check some statuses have errors.</description>
          <long-description></long-description>
          <tag name="return" line="91" description="True if some status has errors, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="102" package="EC\Poetry\Messages\Traits">
        <name>hasWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasWarnings()</full_name>
        <docblock line="102">
          <description>Check some statuses have warnings.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="True if some status has warnings, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="113" package="EC\Poetry\Messages\Traits">
        <name>getErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getErrors()</full_name>
        <docblock line="113">
          <description>Get statuses with errors.</description>
          <long-description></long-description>
          <tag name="return" line="113" description="Statuses with errors." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="128" package="EC\Poetry\Messages\Traits">
        <name>countErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::countErrors()</full_name>
        <docblock line="128">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="128" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="139" package="EC\Poetry\Messages\Traits">
        <name>getWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getWarnings()</full_name>
        <docblock line="139">
          <description>Get statuses with warnings.</description>
          <long-description></long-description>
          <tag name="return" line="139" description="Statuses with warnings." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="154" package="EC\Poetry\Messages\Traits">
        <name>countWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::countWarnings()</full_name>
        <docblock line="154">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="162" package="EC\Poetry\Messages\Traits">
        <name>hasRequestStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasRequestStatus()</full_name>
        <docblock line="162">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="162" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="170" package="EC\Poetry\Messages\Traits">
        <name>getRequestStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getRequestStatus()</full_name>
        <docblock line="170">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="\EC\Poetry\Messages\Components\Status|null">
            <type>\EC\Poetry\Messages\Components\Status</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="184" package="EC\Poetry\Messages\Traits">
        <name>hasDemandStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasDemandStatus()</full_name>
        <docblock line="184">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="184" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="192" package="EC\Poetry\Messages\Traits">
        <name>getDemandStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getDemandStatus()</full_name>
        <docblock line="192">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="192" description="" type="\EC\Poetry\Messages\Components\Status|null">
            <type>\EC\Poetry\Messages\Components\Status</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="206" package="EC\Poetry\Messages\Traits">
        <name>hasAttributionStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasAttributionStatuses()</full_name>
        <docblock line="206">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="206" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="214" package="EC\Poetry\Messages\Traits">
        <name>getAttributionStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getAttributionStatuses()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="214" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithStatusTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Responses" line="21" package="EC\Poetry\Messages\Responses">
        <name>getSubscribedEvents</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::getSubscribedEvents()</full_name>
        <docblock line="21">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Responses\AbstractResponse</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="33" package="EC\Poetry\Messages\Responses">
        <name>onParseResponse</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::onParseResponse()</full_name>
        <docblock line="33">
          <description>Parse response event handler.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="" type="\EC\Poetry\Events\ParseResponseEvent" variable="$event">
            <type>\EC\Poetry\Events\ParseResponseEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseResponseEvent</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Responses\AbstractResponse</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="43" package="EC\Poetry\Messages\Responses">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::fromXml()</full_name>
        <docblock line="43">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="43" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="43" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Responses\AbstractResponse</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="58" package="EC\Poetry\Messages\Responses">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::parseXml()</full_name>
        <docblock line="58">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Responses\AbstractResponse</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Responses" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Responses\Status">
            <type>\EC\Poetry\Messages\Responses\Status</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Responses\Status">
            <type>\EC\Poetry\Messages\Responses\Status</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="31" code="PPC:ERR-50015">Argument $event is missing from the Docblock of onParseResponse</error>
      <error line="44" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
    </parse_markers>
    <source>eJytU02P2jAQvedXTFdIBATlvlvoIoRUDtWiXaS2EhfjDMTaxE7tCbvViv9e2/kgJLRV1fpAxPi9mTfPMx8+ZnEWBJKlaDLGEZaL7Voh6R/bz2gMO6DZPtorJQ2auyDITROyPKIks10zbbBC+dhdC1jn2mgmKoaevzCNPvIn/BdB8RMxys1V+BPqo+BY5bU6J8NhAEMoOKBLbSMwVhzsGH8GUpB5to3pI2pge3K/IBWJveCMhJIQMwNcpQhCvrcJXc5769OzFfdbqyxwEvCEGVNpwFdCGRmY7wxpxqmCBm8B2OMa6rpS3XT69ze+SXeG8HYvZIxaUKT4qQxO/DfLd4ngsM8l9x0dkDaYZgkjDAceUQhwRyPlWkI/Lfu5vTW+aL9QcvqHskpeTEnYnRnoofu0NfUy7wpMoUexMOOZbaAwKhzctVHjGYuir2myUNK6TWGR0nNsNBw0GGIPYc2y9xWlv35Ybh6/TTR+z9HQpHRgAO+mU5B5kgwa4nzpsoZBKucgLJXutUpd2Y6KhoyLDKSytVYZO/jha/Z3+vsH0IqQE0bnN/DdekGvafJ/fXYJy6n0MPvfZWr4+5Db9fqVyRGmTEa4ivrNWrWOVWRJdimdloat7aIF/vwOq+jihedEWuysjHb5/gj6wpa+SFYRkfF4oVI7p074zdXpuBmdTS4mW0OPV6TOwBQ6X+qdLveweXwbpf3d97iGr12p645nynn+iVqTfxoVEprtlpvv49Wyn4Kfg4Pjxw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Responses/AbstractResponse.php" generated-path="oe-poetry-client.src.Messages.Responses.AbstractResponse.html" hash="57198f870ed16718bc94c19797f27201" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ParseResponseEvent">\EC\Poetry\Events\ParseResponseEvent</namespace-alias>
    <namespace-alias name="AbstractMessage">\EC\Poetry\Messages\AbstractMessage</namespace-alias>
    <namespace-alias name="ParserAwareTrait">\EC\Poetry\Messages\Traits\ParserAwareTrait</namespace-alias>
    <class final="false" abstract="true" namespace="EC\Poetry\Messages\Responses" line="14" package="EC\Poetry\Messages\Responses">
      <extends>\EC\Poetry\Messages\AbstractMessage</extends>
      <implements>\EC\Poetry\Messages\Responses\ResponseInterface</implements>
      <name>AbstractResponse</name>
      <full_name>\EC\Poetry\Messages\Responses\AbstractResponse</full_name>
      <docblock line="14">
        <description>Class AbstractResponse.</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Messages\Responses"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\AbstractMessage" refers="\EC\Poetry\Messages\AbstractMessage" link="/classes/EC.Poetry.Messages.AbstractMessage.html"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages\Responses" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages\Responses" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Responses" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Responses" line="21" package="EC\Poetry\Messages\Responses">
        <name>getSubscribedEvents</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::getSubscribedEvents()</full_name>
        <docblock line="21">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="33" package="EC\Poetry\Messages\Responses">
        <name>onParseResponse</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::onParseResponse()</full_name>
        <docblock line="33">
          <description>Parse response event handler.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="" type="\EC\Poetry\Events\ParseResponseEvent" variable="$event">
            <type>\EC\Poetry\Events\ParseResponseEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseResponseEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="43" package="EC\Poetry\Messages\Responses">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::fromXml()</full_name>
        <docblock line="43">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="43" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="43" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="58" package="EC\Poetry\Messages\Responses">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Responses\AbstractResponse::parseXml()</full_name>
        <docblock line="58">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="58" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="58" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Responses\AbstractResponse">
            <type>\EC\Poetry\Messages\Responses\AbstractResponse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Responses" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Responses\AbstractResponse">
            <type>\EC\Poetry\Messages\Responses\AbstractResponse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\AbstractMessage</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Responses" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Responses\AbstractResponse">
            <type>\EC\Poetry\Messages\Responses\AbstractResponse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Responses" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzVU01v2zAMvetX8BCgabA292brGgQ5DGiKou2hwLyDIjOJMFsSJHnt0Oa/j1Ik58spdq0utsnHJ75H+ut3szKMKV6jM1wgTCfFvUZv/xYzdI4v0RUPlNLKoRsx1rhdyPQPKu+Ke24dZlSMjQ6ALdd47rzlwqfASdyT5TIz2/ELtxgj1MFwMGAwgEnFnYNMly+/pFTI3pCW30T0oRwCDhlPDCA6CQFfPapym0g0IGtTYR3kQ8b+UB7tgkxkbwzoBGkdAkIqighnAG83Uq3QSl9qsU7BYXyaZl5JAc5zT49Fo4SXWsES/WMzd8LKOZabCfTPY8Hm2nAs+sYq+NkGAI6HdHV1N55N4ds1nGm1lz770hb+GsXX9VHfsYAuyj4FRlhxVVZoLxMoY2kcltdQ/MfmQC8y7RnRzig50lpx0Hb/JN35se+P6IFDncapLX0IXVNlqJJhlIpXYKw2aL1EB0tJTEBbCc+zWxJuSDtheejkhGBqW6ol9F7rKmfiCQSb3FFhmlzRsbjppV2z9y7QJGvYbmPHTrUOLqyun+uqH1o8XKKeX0l3ce3QP/CXDSLZuLNiCWSC8y3RxzvDd/QHpzVF6BLQix27P4+jVnsUHsutqftmdP+a0bfs05r9A9EpvsQ=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Responses/ResponseInterface.php" generated-path="oe-poetry-client.src.Messages.Responses.ResponseInterface.html" hash="a9efa68aa04bec9c1e51da2986dc3fbd" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ParserAwareInterface">\EC\Poetry\Messages\ParserAwareInterface</namespace-alias>
    <namespace-alias name="EventSubscriberInterface">\Symfony\Component\EventDispatcher\EventSubscriberInterface</namespace-alias>
    <interface namespace="EC\Poetry\Messages\Responses" line="13" package="EC\Poetry\Messages\Responses">
      <extends>\EC\Poetry\Messages\ParserAwareInterface</extends>
      <extends>\Symfony\Component\EventDispatcher\EventSubscriberInterface</extends>
      <name>ResponseInterface</name>
      <full_name>\EC\Poetry\Messages\Responses\ResponseInterface</full_name>
      <docblock line="13">
        <description>Interface ResponseInterface</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Messages\Responses"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\ParserAwareInterface" refers="\EC\Poetry\Messages\ParserAwareInterface" link="/classes/EC.Poetry.Messages.ParserAwareInterface.html"/>
      </docblock>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9j7EKwkAMhvc8xc1F6ANUUKkdHIRi11uuZ2qL9K4kV7WI725ULA6tSyD5//z5slx1dQfgTIvcGYsqS3XuMdCg98hsTsj6IJJ3jJwA9DxpyQ0x0uZqCHcuIFUSlbzNxdBW3g069a2EoAs6u0jdNnIu2Brp0xd9yZaaEulnH+IoAhWpcaS+KONE5JdjLexnIfmLL8YYmvkshbeA7shq6puFmuOEO8ADnj5Gdzs=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Status.php" generated-path="oe-poetry-client.src.Messages.Components.Status.html" hash="610b4013d4c3ef8860481a5f9a52cd15" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <namespace-alias name="GroupSequenceProviderInterface">\Symfony\Component\Validator\GroupSequenceProviderInterface</namespace-alias>
    <namespace-alias name="Constraint">\EC\Poetry\Messages\Components\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="15" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>Status</name>
      <full_name>\EC\Poetry\Messages\Components\Status</full_name>
      <docblock line="15">
        <description>Class StatusComponent</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$type</name>
        <full_name>\EC\Poetry\Messages\Components\Status::type</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$code</name>
        <full_name>\EC\Poetry\Messages\Components\Status::code</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="19" package="EC\Poetry\Messages\Components">
        <name>$language</name>
        <full_name>\EC\Poetry\Messages\Components\Status::language</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$date</name>
        <full_name>\EC\Poetry\Messages\Components\Status::date</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$time</name>
        <full_name>\EC\Poetry\Messages\Components\Status::time</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$message</name>
        <full_name>\EC\Poetry\Messages\Components\Status::message</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="29" package="EC\Poetry\Messages\Components">
        <name>__toString</name>
        <full_name>\EC\Poetry\Messages\Components\Status::__toString()</full_name>
        <docblock line="29">
          <description>Convert information in array to string.</description>
          <long-description></long-description>
          <tag name="return" line="29" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="44" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getTemplate()</full_name>
        <docblock line="44">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="52" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getConstraints()</full_name>
        <docblock line="52">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="67" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getAttributes()</full_name>
        <docblock line="67">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" refers="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_getAttributes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="83" package="EC\Poetry\Messages\Components">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getType()</full_name>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="83" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="93" package="EC\Poetry\Messages\Components">
        <name>setType</name>
        <full_name>\EC\Poetry\Messages\Components\Status::setType()</full_name>
        <docblock line="93">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="mixed" variable="$type">
            <type>mixed</type>
          </tag>
          <tag name="return" line="93" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="103" package="EC\Poetry\Messages\Components">
        <name>getCode</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getCode()</full_name>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="103" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="113" package="EC\Poetry\Messages\Components">
        <name>setCode</name>
        <full_name>\EC\Poetry\Messages\Components\Status::setCode()</full_name>
        <docblock line="113">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="113" description="" type="mixed" variable="$code">
            <type>mixed</type>
          </tag>
          <tag name="return" line="113" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="123" package="EC\Poetry\Messages\Components">
        <name>getLanguage</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getLanguage()</full_name>
        <docblock line="123">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="123" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="133" package="EC\Poetry\Messages\Components">
        <name>setLanguage</name>
        <full_name>\EC\Poetry\Messages\Components\Status::setLanguage()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="133" description="" type="mixed" variable="$language">
            <type>mixed</type>
          </tag>
          <tag name="return" line="133" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$language</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="143" package="EC\Poetry\Messages\Components">
        <name>getDate</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getDate()</full_name>
        <docblock line="143">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="153" package="EC\Poetry\Messages\Components">
        <name>setDate</name>
        <full_name>\EC\Poetry\Messages\Components\Status::setDate()</full_name>
        <docblock line="153">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="153" description="" type="mixed" variable="$date">
            <type>mixed</type>
          </tag>
          <tag name="return" line="153" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="163" package="EC\Poetry\Messages\Components">
        <name>getTime</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getTime()</full_name>
        <docblock line="163">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="163" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="173" package="EC\Poetry\Messages\Components">
        <name>setTime</name>
        <full_name>\EC\Poetry\Messages\Components\Status::setTime()</full_name>
        <docblock line="173">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="mixed" variable="$time">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="183" package="EC\Poetry\Messages\Components">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Messages\Components\Status::getMessage()</full_name>
        <docblock line="183">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="183" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="193" package="EC\Poetry\Messages\Components">
        <name>setMessage</name>
        <full_name>\EC\Poetry\Messages\Components\Status::setMessage()</full_name>
        <docblock line="193">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="193" description="" type="mixed" variable="$message">
            <type>mixed</type>
          </tag>
          <tag name="return" line="193" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="203" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\Status::parseXml()</full_name>
        <docblock line="203">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="52" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="83" code="PPC:ERR-50008">No summary for method getType()</error>
      <error line="93" code="PPC:ERR-50008">No summary for method setType()</error>
      <error line="103" code="PPC:ERR-50008">No summary for method getCode()</error>
      <error line="113" code="PPC:ERR-50008">No summary for method setCode()</error>
      <error line="123" code="PPC:ERR-50008">No summary for method getLanguage()</error>
      <error line="133" code="PPC:ERR-50008">No summary for method setLanguage()</error>
      <error line="143" code="PPC:ERR-50008">No summary for method getDate()</error>
      <error line="153" code="PPC:ERR-50008">No summary for method setDate()</error>
      <error line="163" code="PPC:ERR-50008">No summary for method getTime()</error>
      <error line="173" code="PPC:ERR-50008">No summary for method setTime()</error>
      <error line="183" code="PPC:ERR-50008">No summary for method getMessage()</error>
      <error line="193" code="PPC:ERR-50008">No summary for method setMessage()</error>
      <error line="203" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $type</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $code</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $language</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $date</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $time</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $message</error>
    </parse_markers>
    <source>eJy1V21P2zAQ/p5f4UmdklSFfmeDwco0TRoTUtE0aUHIJG6JSJzMdjoq1P++80ve32Cl+dLEd7577jnf+frxU/qQWhbFMeEp9gn6svCuEyLY1rsinOM14d4iidOEEir4B8vKOEHLbbxK6LYUeD9xFAZYJMy7wmka0rW3iDDnV0RgWMYfRrctEsoFwyE4QZijC84JE+PbvrIkS5fkT0aoT65ZsgkDwr5RQdgKgtH7ByNqOi4/Idb5dGqhKVKhoKXAIuPFThBI2TmQ9gg2h72A5tzyK2YQeRKEBhDovXTni9Lus4XgSVm4wYKgidimEEdtyU+C5lKE6ToDp41lIKm5JMK4uRRrwBCwXFZBy2cqydhAGlBIVwmLsQgTCu8IM4a3SCQIoEOqj416vuucEZExaqRmda5dZvdR6KNVRn1l7O5OJEul5rhKQQcvn0nM1+gU2TcQ/wl6z2eAJjBvhmH5cWwb2PLJHUNkVKycYj23N6uviIeQH52tiZA+HLdPKv32Sw0Wg18+rqZ316Lz+TykD4SFIkj83SAvEhOJ0wjS0yLGBGn7xek6OeHqUNn/7Vjub/iv1IVTq2V5XvRbO2VGcHSGgwCqMYXDs60asuVptmfod41MSv6agvd+JOIznOXHJt9SpWLI01XUzNutof4lYBxblhFg6Tatk/4qe7LYjD0TzSWs3EC9vdKQLNE3MWQKu25LkWbr4rTdtzmsFwLM3WeC8HYd40IG5VxNvB2tJcs2Oj2r1NN308nqJ0AfnLpmu2p1Sutazeq9bfcL1c/uVmEE14ZTwTsrY3QmGxxlxK0EVjHgOJpOF+Vq706hddllrna9POfdMg6fSDDaFFTI3Q3BhFzeFx2+UsxwrF3pm6WndesaGETDDRplppX0Egsk3dxhnYDfhBad40FayjtzjBapuRctCo0y00OLFElaNKbD0VKW0iA19dlhjJ5cey+KCmSFuR6qcrGkq8R5OMouB25cA6mcqcaokpp70aTQKDM99EiRpEZjOhwt+u4Z7jvFXDnad0Bzv74j0SgzfX0HRKrvKEyHo6U++/UxU4zXLyHHKO/FTw4rN9bDkpFKour/AF7K1cCIwBJBfAEBFbggSk5+xZEzeYqjFiIlZSpn+cV9rZac6sCjtdS4A5Zg0oH/UEIbrEA3Jor6yXfpoVZtsfXAPNc/Ug0modrNrvbrgza6X6p17i8SMWrCaHajUNdsETuMJ2aO7lLWl09dWU1FXcplG65vMIOZ644ciJ31Dzkmn1Y=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Details.php" generated-path="oe-poetry-client.src.Messages.Components.Details.html" hash="9c8d14bee8cce9e24d4cfd0723456099" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <namespace-alias name="Constraint">\EC\Poetry\Messages\Components\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="14" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>Details</name>
      <full_name>\EC\Poetry\Messages\Components\Details</full_name>
      <docblock line="14">
        <description>Class Details</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
        <name>$clientId</name>
        <full_name>\EC\Poetry\Messages\Components\Details::clientId</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$applicationId</name>
        <full_name>\EC\Poetry\Messages\Components\Details::applicationId</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$author</name>
        <full_name>\EC\Poetry\Messages\Components\Details::author</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="19" package="EC\Poetry\Messages\Components">
        <name>$responsible</name>
        <full_name>\EC\Poetry\Messages\Components\Details::responsible</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$requester</name>
        <full_name>\EC\Poetry\Messages\Components\Details::requester</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$title</name>
        <full_name>\EC\Poetry\Messages\Components\Details::title</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$remark</name>
        <full_name>\EC\Poetry\Messages\Components\Details::remark</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="23" package="EC\Poetry\Messages\Components">
        <name>$type</name>
        <full_name>\EC\Poetry\Messages\Components\Details::type</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="24" package="EC\Poetry\Messages\Components">
        <name>$workflowCode</name>
        <full_name>\EC\Poetry\Messages\Components\Details::workflowCode</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="25" package="EC\Poetry\Messages\Components">
        <name>$destination</name>
        <full_name>\EC\Poetry\Messages\Components\Details::destination</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>$procedure</name>
        <full_name>\EC\Poetry\Messages\Components\Details::procedure</full_name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Components">
        <name>$delay</name>
        <full_name>\EC\Poetry\Messages\Components\Details::delay</full_name>
        <default></default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="28" package="EC\Poetry\Messages\Components">
        <name>$requestDate</name>
        <full_name>\EC\Poetry\Messages\Components\Details::requestDate</full_name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="29" package="EC\Poetry\Messages\Components">
        <name>$status</name>
        <full_name>\EC\Poetry\Messages\Components\Details::status</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="30" package="EC\Poetry\Messages\Components">
        <name>$interServices</name>
        <full_name>\EC\Poetry\Messages\Components\Details::interServices</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="31" package="EC\Poetry\Messages\Components">
        <name>$interInstitution</name>
        <full_name>\EC\Poetry\Messages\Components\Details::interInstitution</full_name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="32" package="EC\Poetry\Messages\Components">
        <name>$referenceFilesRemark</name>
        <full_name>\EC\Poetry\Messages\Components\Details::referenceFilesRemark</full_name>
        <default></default>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="37" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getTemplate()</full_name>
        <docblock line="37">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="62" package="EC\Poetry\Messages\Components">
        <name>getClientId</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getClientId()</full_name>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="71" package="EC\Poetry\Messages\Components">
        <name>setClientId</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setClientId()</full_name>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="mixed" variable="$clientId">
            <type>mixed</type>
          </tag>
          <tag name="return" line="71" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$clientId</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="81" package="EC\Poetry\Messages\Components">
        <name>getApplicationId</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getApplicationId()</full_name>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="81" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="90" package="EC\Poetry\Messages\Components">
        <name>setApplicationId</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setApplicationId()</full_name>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="90" description="" type="mixed" variable="$applicationId">
            <type>mixed</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$applicationId</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="100" package="EC\Poetry\Messages\Components">
        <name>getAuthor</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getAuthor()</full_name>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="100" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="109" package="EC\Poetry\Messages\Components">
        <name>setAuthor</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setAuthor()</full_name>
        <docblock line="109">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="mixed" variable="$author">
            <type>mixed</type>
          </tag>
          <tag name="return" line="109" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$author</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="119" package="EC\Poetry\Messages\Components">
        <name>getResponsible</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getResponsible()</full_name>
        <docblock line="119">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="119" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="128" package="EC\Poetry\Messages\Components">
        <name>setResponsible</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setResponsible()</full_name>
        <docblock line="128">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="128" description="" type="mixed" variable="$responsible">
            <type>mixed</type>
          </tag>
          <tag name="return" line="128" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$responsible</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="138" package="EC\Poetry\Messages\Components">
        <name>getRequester</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getRequester()</full_name>
        <docblock line="138">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="138" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="147" package="EC\Poetry\Messages\Components">
        <name>setRequester</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setRequester()</full_name>
        <docblock line="147">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="147" description="" type="mixed" variable="$requester">
            <type>mixed</type>
          </tag>
          <tag name="return" line="147" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$requester</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="157" package="EC\Poetry\Messages\Components">
        <name>getTitle</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getTitle()</full_name>
        <docblock line="157">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="166" package="EC\Poetry\Messages\Components">
        <name>setTitle</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setTitle()</full_name>
        <docblock line="166">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="166" description="" type="mixed" variable="$title">
            <type>mixed</type>
          </tag>
          <tag name="return" line="166" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="176" package="EC\Poetry\Messages\Components">
        <name>getRemark</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getRemark()</full_name>
        <docblock line="176">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="176" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="185" package="EC\Poetry\Messages\Components">
        <name>setRemark</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setRemark()</full_name>
        <docblock line="185">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="185" description="" type="mixed" variable="$remark">
            <type>mixed</type>
          </tag>
          <tag name="return" line="185" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remark</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="195" package="EC\Poetry\Messages\Components">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getType()</full_name>
        <docblock line="195">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="195" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="204" package="EC\Poetry\Messages\Components">
        <name>setType</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setType()</full_name>
        <docblock line="204">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="204" description="" type="mixed" variable="$type">
            <type>mixed</type>
          </tag>
          <tag name="return" line="204" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="214" package="EC\Poetry\Messages\Components">
        <name>getWorkflowCode</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getWorkflowCode()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="214" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="223" package="EC\Poetry\Messages\Components">
        <name>setWorkflowCode</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setWorkflowCode()</full_name>
        <docblock line="223">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="223" description="" type="mixed" variable="$workflowCode">
            <type>mixed</type>
          </tag>
          <tag name="return" line="223" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$workflowCode</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="233" package="EC\Poetry\Messages\Components">
        <name>getDestination</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getDestination()</full_name>
        <docblock line="233">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="242" package="EC\Poetry\Messages\Components">
        <name>setDestination</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setDestination()</full_name>
        <docblock line="242">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="242" description="" type="mixed" variable="$destination">
            <type>mixed</type>
          </tag>
          <tag name="return" line="242" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$destination</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="252" package="EC\Poetry\Messages\Components">
        <name>getProcedure</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getProcedure()</full_name>
        <docblock line="252">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="252" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="261" package="EC\Poetry\Messages\Components">
        <name>setProcedure</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setProcedure()</full_name>
        <docblock line="261">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="261" description="" type="mixed" variable="$procedure">
            <type>mixed</type>
          </tag>
          <tag name="return" line="261" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$procedure</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="271" package="EC\Poetry\Messages\Components">
        <name>getDelay</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getDelay()</full_name>
        <docblock line="271">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="271" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="280" package="EC\Poetry\Messages\Components">
        <name>setDelay</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setDelay()</full_name>
        <docblock line="280">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="280" description="" type="mixed" variable="$delay">
            <type>mixed</type>
          </tag>
          <tag name="return" line="280" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$delay</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="290" package="EC\Poetry\Messages\Components">
        <name>getRequestDate</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getRequestDate()</full_name>
        <docblock line="290">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="290" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="299" package="EC\Poetry\Messages\Components">
        <name>setRequestDate</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setRequestDate()</full_name>
        <docblock line="299">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="299" description="" type="mixed" variable="$requestDate">
            <type>mixed</type>
          </tag>
          <tag name="return" line="299" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$requestDate</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="309" package="EC\Poetry\Messages\Components">
        <name>getStatus</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getStatus()</full_name>
        <docblock line="309">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="309" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="318" package="EC\Poetry\Messages\Components">
        <name>setStatus</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setStatus()</full_name>
        <docblock line="318">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="318" description="" type="mixed" variable="$status">
            <type>mixed</type>
          </tag>
          <tag name="return" line="318" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="328" package="EC\Poetry\Messages\Components">
        <name>getInterServices</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getInterServices()</full_name>
        <docblock line="328">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="328" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="337" package="EC\Poetry\Messages\Components">
        <name>setInterServices</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setInterServices()</full_name>
        <docblock line="337">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="337" description="" type="mixed" variable="$interServices">
            <type>mixed</type>
          </tag>
          <tag name="return" line="337" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$interServices</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="347" package="EC\Poetry\Messages\Components">
        <name>getInterInstitution</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getInterInstitution()</full_name>
        <docblock line="347">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="347" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="356" package="EC\Poetry\Messages\Components">
        <name>setInterInstitution</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setInterInstitution()</full_name>
        <docblock line="356">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="356" description="" type="mixed" variable="$interInstitution">
            <type>mixed</type>
          </tag>
          <tag name="return" line="356" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$interInstitution</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="366" package="EC\Poetry\Messages\Components">
        <name>getReferenceFilesRemark</name>
        <full_name>\EC\Poetry\Messages\Components\Details::getReferenceFilesRemark()</full_name>
        <docblock line="366">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="366" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="375" package="EC\Poetry\Messages\Components">
        <name>setReferenceFilesRemark</name>
        <full_name>\EC\Poetry\Messages\Components\Details::setReferenceFilesRemark()</full_name>
        <docblock line="375">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="375" description="" type="mixed" variable="$referenceFilesRemark">
            <type>mixed</type>
          </tag>
          <tag name="return" line="375" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$referenceFilesRemark</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="385" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\Details::parseXml()</full_name>
        <docblock line="385">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="45" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="62" code="PPC:ERR-50008">No summary for method getClientId()</error>
      <error line="71" code="PPC:ERR-50008">No summary for method setClientId()</error>
      <error line="81" code="PPC:ERR-50008">No summary for method getApplicationId()</error>
      <error line="90" code="PPC:ERR-50008">No summary for method setApplicationId()</error>
      <error line="100" code="PPC:ERR-50008">No summary for method getAuthor()</error>
      <error line="109" code="PPC:ERR-50008">No summary for method setAuthor()</error>
      <error line="119" code="PPC:ERR-50008">No summary for method getResponsible()</error>
      <error line="128" code="PPC:ERR-50008">No summary for method setResponsible()</error>
      <error line="138" code="PPC:ERR-50008">No summary for method getRequester()</error>
      <error line="147" code="PPC:ERR-50008">No summary for method setRequester()</error>
      <error line="157" code="PPC:ERR-50008">No summary for method getTitle()</error>
      <error line="166" code="PPC:ERR-50008">No summary for method setTitle()</error>
      <error line="176" code="PPC:ERR-50008">No summary for method getRemark()</error>
      <error line="185" code="PPC:ERR-50008">No summary for method setRemark()</error>
      <error line="195" code="PPC:ERR-50008">No summary for method getType()</error>
      <error line="204" code="PPC:ERR-50008">No summary for method setType()</error>
      <error line="214" code="PPC:ERR-50008">No summary for method getWorkflowCode()</error>
      <error line="223" code="PPC:ERR-50008">No summary for method setWorkflowCode()</error>
      <error line="233" code="PPC:ERR-50008">No summary for method getDestination()</error>
      <error line="242" code="PPC:ERR-50008">No summary for method setDestination()</error>
      <error line="252" code="PPC:ERR-50008">No summary for method getProcedure()</error>
      <error line="261" code="PPC:ERR-50008">No summary for method setProcedure()</error>
      <error line="271" code="PPC:ERR-50008">No summary for method getDelay()</error>
      <error line="280" code="PPC:ERR-50008">No summary for method setDelay()</error>
      <error line="290" code="PPC:ERR-50008">No summary for method getRequestDate()</error>
      <error line="299" code="PPC:ERR-50008">No summary for method setRequestDate()</error>
      <error line="309" code="PPC:ERR-50008">No summary for method getStatus()</error>
      <error line="318" code="PPC:ERR-50008">No summary for method setStatus()</error>
      <error line="328" code="PPC:ERR-50008">No summary for method getInterServices()</error>
      <error line="337" code="PPC:ERR-50008">No summary for method setInterServices()</error>
      <error line="347" code="PPC:ERR-50008">No summary for method getInterInstitution()</error>
      <error line="356" code="PPC:ERR-50008">No summary for method setInterInstitution()</error>
      <error line="366" code="PPC:ERR-50008">No summary for method getReferenceFilesRemark()</error>
      <error line="375" code="PPC:ERR-50008">No summary for method setReferenceFilesRemark()</error>
      <error line="385" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $clientId</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $applicationId</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $author</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $responsible</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $requester</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $title</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $remark</error>
      <error line="23" code="PPC:ERR-50007">No summary for property $type</error>
      <error line="24" code="PPC:ERR-50007">No summary for property $workflowCode</error>
      <error line="25" code="PPC:ERR-50007">No summary for property $destination</error>
      <error line="26" code="PPC:ERR-50007">No summary for property $procedure</error>
      <error line="27" code="PPC:ERR-50007">No summary for property $delay</error>
      <error line="28" code="PPC:ERR-50007">No summary for property $requestDate</error>
      <error line="29" code="PPC:ERR-50007">No summary for property $status</error>
      <error line="30" code="PPC:ERR-50007">No summary for property $interServices</error>
      <error line="31" code="PPC:ERR-50007">No summary for property $interInstitution</error>
      <error line="32" code="PPC:ERR-50007">No summary for property $referenceFilesRemark</error>
    </parse_markers>
    <source>eJy1WU1v4zYQvftX6BDAdtBF7pt2m8DuAjmkCDZB24MvjMQkRGRJS1KbGIv89w4/LA0lkbS1lk8JOfP09DQcDoe//1m9VLNZQbZUVCSlyV+rzV1JJd9tbqkQ5JmKzarcVmVBCykuZ7Na0OR+t30qi107sfmH5CwjsuSbW1JVrHjerHIixC2VBIbJZdRtVRZCcsLgIQkRybUQlEvjFmTUdWz/Ba4X5+ez5DzRVJI1cGG5gAE1dgUv+wpYYXSwvJil2D2h75IWGTB8VM9JZWM8+zlL4Fdx9oNImpylOYPRm+zSHQZ5cpYSycqiP1fLl5J3Bjl8GHgp9pjT3sz3mgpJux6SyQHbLeGvXcNd1bV7K/nrU16+rcqsO5XBs1ihmXdmKl6mNKt53yMnu2HSa/inMyMkkbXoDMKHpPye8h8spYNzN/C9mawHWHH6RDktUvqV5VR8swJoGx0Y6nee/LxixQvlTGZl+mEHLwxQ/QhfKnmqi1ShJ89UPtBtlQP4YqktzBdXP05lzYtknjah8/lzZiJmbmh9HP9kJUiHAIr2hbPCkrOt/atLrZn49IVk2R0vK1hZuxZoMTdhN/8tKeibXXmbBwiNxRxMYC3Pl8vLI+CasDwZog7oE/JTkXA6cuBqwdrhjU0XGvc4PLwCT0YSrV0v13VrcyTlZv17se/2Fkcim5xwwk/fTwkHgPfX7pVd8Fv2TrNY1ljZncCXNc7kCxOfvrgbxsAzK8LJ1jyy3V66jJptLsBJIE4NUC9vuKySP/CWNvgKJxHrGu+PEcUG9tKYbI7LSO1cii6kR0XHRknZoT6hnjq5x4REhUdUQW07VjrDxoL4xNKTWiXLazp5vrXVVUSjXh0WEwo5jFQLk8NwHt2QhRLPITylgna7j+rnVKtx9az5aO32tFoor2523qjW0JxOswdV0ET0QlV8TCttOlInQ8VAePTRc0obS2nKWFI7cjSQ2qNMPIqU7egQ0mwsiDd41KSJHHTCmCZsdDUZjprmSBcNGrAcGzOKhwbwRQxM6YDRbKYT5F9UK0eE6R9sYwJhj5FCOfwcQI9w2EQJ6LKeTkin9g/q2OsCxGREDiNVxOQwnEdDZKEkdAhPpyA64QT16/RKYuo15iO1a2m1UB7dmnmlGqI5ZdTlZBeNt6aHFI80MB0dY4qKgfDGFcyZiNKUJi+p1oFOk1u6tN20A8sq5fBrhZUmh+HCxZWyQOWVITydgve6bxARDzccY7oZ25GSWTYWxCOUmVQa7XlNJ88N7qpGVBrowMbEclxGauZSdCE9Cjo2SsgO9Yn1RJ3oQyTtNa4PUhV5/YqwmGsPOCQvMmsUdt5kyqzYb95F0+PQFcAhYg95jk6YA7wHH+BNoX1Tk0u9FxyHfoDAHQQvJU0laNG8Cwgk6H/bfHH2vs17XPWsPkIb1qom0kML3KI1VrpBC0irEuKnkAYQUd+nRNyn3HuaWxDtNs/gnYuMXtQw08g8Xy4bIPXTOJ2eXQgMteYimLaZFQIr+TMpmNBoYE9rPgiFuhUhNGFy2dr868VCXaNDuVknAk6DoLZNEIKDHMCHnfcxH/LWp2cQYRDAPUeFYJzbkyEoXBC3ONdScvYI36dFwpcac5YNgjknkzCcewPjAzQn6zCSvXDyc9KVbEgkVcCyUBya4i4IARY2DAeB9iVPMJq1TQilUwSEwFKI3jqXZoVjNz+wswmGsJtQ6Lp5NBzK9+HYxx5/Q+LVV0/BTP4x+x8MKA9c</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/ReferenceDocument.php" generated-path="oe-poetry-client.src.Messages.Components.ReferenceDocument.html" hash="37812a543a0940a0c4788c4db63b5df2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <namespace-alias name="Constraint">\EC\Poetry\Messages\Components\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="14" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>ReferenceDocument</name>
      <full_name>\EC\Poetry\Messages\Components\ReferenceDocument</full_name>
      <docblock line="14">
        <description>Class ReferenceDocument</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
        <name>$language</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::language</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$format</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::format</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$type</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::type</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="19" package="EC\Poetry\Messages\Components">
        <name>$action</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::action</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$name</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::name</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$path</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::path</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$size</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::size</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="23" package="EC\Poetry\Messages\Components">
        <name>$remark</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::remark</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="24" package="EC\Poetry\Messages\Components">
        <name>$file</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::file</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="30" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getTemplate()</full_name>
        <docblock line="30">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="38" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getConstraints()</full_name>
        <docblock line="38">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="65" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getAttributes()</full_name>
        <docblock line="65">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" refers="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_getAttributes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="80" package="EC\Poetry\Messages\Components">
        <name>getLanguage</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getLanguage()</full_name>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="80" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="89" package="EC\Poetry\Messages\Components">
        <name>setLanguage</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setLanguage()</full_name>
        <docblock line="89">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="89" description="" type="mixed" variable="$language">
            <type>mixed</type>
          </tag>
          <tag name="return" line="89" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$language</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="99" package="EC\Poetry\Messages\Components">
        <name>getFormat</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getFormat()</full_name>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="99" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="108" package="EC\Poetry\Messages\Components">
        <name>setFormat</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setFormat()</full_name>
        <docblock line="108">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="108" description="" type="mixed" variable="$format">
            <type>mixed</type>
          </tag>
          <tag name="return" line="108" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="118" package="EC\Poetry\Messages\Components">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getType()</full_name>
        <docblock line="118">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="118" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="127" package="EC\Poetry\Messages\Components">
        <name>setType</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setType()</full_name>
        <docblock line="127">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="127" description="" type="mixed" variable="$type">
            <type>mixed</type>
          </tag>
          <tag name="return" line="127" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="137" package="EC\Poetry\Messages\Components">
        <name>getAction</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getAction()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="137" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="146" package="EC\Poetry\Messages\Components">
        <name>setAction</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setAction()</full_name>
        <docblock line="146">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="146" description="" type="mixed" variable="$action">
            <type>mixed</type>
          </tag>
          <tag name="return" line="146" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="156" package="EC\Poetry\Messages\Components">
        <name>getName</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getName()</full_name>
        <docblock line="156">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="156" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="165" package="EC\Poetry\Messages\Components">
        <name>setName</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setName()</full_name>
        <docblock line="165">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="165" description="" type="mixed" variable="$name">
            <type>mixed</type>
          </tag>
          <tag name="return" line="165" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="175" package="EC\Poetry\Messages\Components">
        <name>getPath</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getPath()</full_name>
        <docblock line="175">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="175" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="184" package="EC\Poetry\Messages\Components">
        <name>setPath</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setPath()</full_name>
        <docblock line="184">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="mixed" variable="$path">
            <type>mixed</type>
          </tag>
          <tag name="return" line="184" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="194" package="EC\Poetry\Messages\Components">
        <name>getSize</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getSize()</full_name>
        <docblock line="194">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="194" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="203" package="EC\Poetry\Messages\Components">
        <name>setSize</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setSize()</full_name>
        <docblock line="203">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="203" description="" type="mixed" variable="$size">
            <type>mixed</type>
          </tag>
          <tag name="return" line="203" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="213" package="EC\Poetry\Messages\Components">
        <name>getRemark</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getRemark()</full_name>
        <docblock line="213">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="213" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="222" package="EC\Poetry\Messages\Components">
        <name>setRemark</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setRemark()</full_name>
        <docblock line="222">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="222" description="" type="mixed" variable="$remark">
            <type>mixed</type>
          </tag>
          <tag name="return" line="222" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remark</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="232" package="EC\Poetry\Messages\Components">
        <name>getFile</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::getFile()</full_name>
        <docblock line="232">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="232" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="241" package="EC\Poetry\Messages\Components">
        <name>setFile</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::setFile()</full_name>
        <docblock line="241">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="241" description="" type="mixed" variable="$file">
            <type>mixed</type>
          </tag>
          <tag name="return" line="241" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="251" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\ReferenceDocument::parseXml()</full_name>
        <docblock line="251">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="38" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="80" code="PPC:ERR-50008">No summary for method getLanguage()</error>
      <error line="89" code="PPC:ERR-50008">No summary for method setLanguage()</error>
      <error line="99" code="PPC:ERR-50008">No summary for method getFormat()</error>
      <error line="108" code="PPC:ERR-50008">No summary for method setFormat()</error>
      <error line="118" code="PPC:ERR-50008">No summary for method getType()</error>
      <error line="127" code="PPC:ERR-50008">No summary for method setType()</error>
      <error line="137" code="PPC:ERR-50008">No summary for method getAction()</error>
      <error line="146" code="PPC:ERR-50008">No summary for method setAction()</error>
      <error line="156" code="PPC:ERR-50008">No summary for method getName()</error>
      <error line="165" code="PPC:ERR-50008">No summary for method setName()</error>
      <error line="175" code="PPC:ERR-50008">No summary for method getPath()</error>
      <error line="184" code="PPC:ERR-50008">No summary for method setPath()</error>
      <error line="194" code="PPC:ERR-50008">No summary for method getSize()</error>
      <error line="203" code="PPC:ERR-50008">No summary for method setSize()</error>
      <error line="213" code="PPC:ERR-50008">No summary for method getRemark()</error>
      <error line="222" code="PPC:ERR-50008">No summary for method setRemark()</error>
      <error line="232" code="PPC:ERR-50008">No summary for method getFile()</error>
      <error line="241" code="PPC:ERR-50008">No summary for method setFile()</error>
      <error line="251" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $language</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $format</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $type</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $action</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $name</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $path</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $size</error>
      <error line="23" code="PPC:ERR-50007">No summary for property $remark</error>
      <error line="24" code="PPC:ERR-50007">No summary for property $file</error>
    </parse_markers>
    <source>eJy1WFtv2jAUfs+v8ANSQtWK97J2ZZRKk0qFKJ0mLdXkJgai5ibbbGVT//uOb7mHFBh5as/ly+fPxznHfPqcrlPLinFEWIo9giZjd5YQTrfulDCGV4S54yRKk5jEnA0ta8MIetxGyyTe5g73Gw4DH/OEulOcpkG8cschZmxKOAYzHnamjZOYcYoDeAnCDI0YI5SrtJ2Mqon5v8B1cHZmoTMkqaA5WRJKYo/cJt4mglxwCe8NLPsVUHe/ByIHltcMhMgbJ7EPrF/Euz2epVl/LQRPSoNfmBPUC3G82gDysGxeJjTCvGLk27QaB9BBEleMYusqphTzdcXEgj/VKEoiTF+rVIIQ4ixplPKJ5wz9vQniNaEB9xPvXRsHKnPzEgYeWm5iSQ6tCF+QKA0BzenLCKWBeCjhGxoj28tkvbykRs0LX8tpK0rv+5NgHPMKl0J5OKWSRL1I/1VlmTkurrHvz2iSQilui0C22jD7HP3IssQTk9+6ct2HhH+B3X51+ue1kBzKNSV0JwGLwc/94YcZObYpLKDUSGIPMFieKL1DF6dDxusk8IhThhCPPZ7O7PO6eTZfNJnno6dG8+SuYn4+WDt1qsrKNdK3vz48Tmo07afZ7WgxqVpvJ/eTkvV5n01wbHGsO3bzgBNSPBojzmnwsuGE1Q5qD2c+dFWpAztcjROf2OjqGj5S64BdXAPYvS7AakmYo1KOrpe7jJV1V45cgKkWp3esHDmSxtIRGlrVTw+mFG9/wkeOE+oUVtmq6I1OjII34ncpmovQ/OHTZMtdoOGdKaY4Uq/Me0aVUUM/28GOFdhlkLVtL/ODrS90rMbF/BfZTDXsFK3YI7skU7FHC6Z5abgWsZRTSGUYnk4odRh2ypRPDV0iicijJZKMJFSLPMIlxFG8TieNOf07xSnOT13yqNijBdK8NFyLSMopZDIMTyfUA/SVDpnyibJLJBF5tESSkYRqkUe4hDiK1+mkmcHY3CFNPll3SSMij5ZGMpJQLdIIl5BG8TqdNI9wfeiQJr9hdEkjIo+WRjKSUC3SCJeQRvE6nTRzeY3qEKd41+qSR8UeLZDmpeFaRFJOIZNheMI2D1fLriYvb58fEUlEHt/gBSMJ1dbcwSVbu7oV7yPNjlGcJpx4HFaRcYGlMfI9Cp3eWxTWuEgvlV3UDLszaXKKNwoVJe8TgARXCQ4KKMACdXM4iuNglgnjsGPG+34/yxGPTDEDUTlBT/hNCWo8KIfLIb8p2LTKcrie9ZsSVOMw4eqyLxdtm58SsooY1CwiuRHVfHMPQhXJjajqc3UgqkhuRDVn/EBcld681fJoHIgrku1+v+PEvFv/AIEX0P4=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/ReturnAddress.php" generated-path="oe-poetry-client.src.Messages.Components.ReturnAddress.html" hash="8344b7bcf1bb5494e99d0bd0b6300c8c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="ExecutionContextInterface">\Symfony\Component\Validator\Context\ExecutionContextInterface</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="14" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>ReturnAddress</name>
      <full_name>\EC\Poetry\Messages\Components\ReturnAddress</full_name>
      <docblock line="14">
        <description>Class ReturnAddress</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
        <name>$type</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::type</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$action</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::action</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$user</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::user</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="19" package="EC\Poetry\Messages\Components">
        <name>$password</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::password</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$address</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::address</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$path</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::path</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$remark</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::remark</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getTemplate()</full_name>
        <docblock line="27">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getConstraints()</full_name>
        <docblock line="35">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="59" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" refers="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_getAttributes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="72" package="EC\Poetry\Messages\Components">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getType()</full_name>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="72" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="81" package="EC\Poetry\Messages\Components">
        <name>setType</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setType()</full_name>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="mixed" variable="$type">
            <type>mixed</type>
          </tag>
          <tag name="return" line="81" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="91" package="EC\Poetry\Messages\Components">
        <name>getAction</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getAction()</full_name>
        <docblock line="91">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="100" package="EC\Poetry\Messages\Components">
        <name>setAction</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setAction()</full_name>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="100" description="" type="mixed" variable="$action">
            <type>mixed</type>
          </tag>
          <tag name="return" line="100" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="110" package="EC\Poetry\Messages\Components">
        <name>getUser</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getUser()</full_name>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="110" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="119" package="EC\Poetry\Messages\Components">
        <name>setUser</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setUser()</full_name>
        <docblock line="119">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="119" description="" type="mixed" variable="$user">
            <type>mixed</type>
          </tag>
          <tag name="return" line="119" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="129" package="EC\Poetry\Messages\Components">
        <name>getPassword</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getPassword()</full_name>
        <docblock line="129">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="129" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="138" package="EC\Poetry\Messages\Components">
        <name>setPassword</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setPassword()</full_name>
        <docblock line="138">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="138" description="" type="mixed" variable="$password">
            <type>mixed</type>
          </tag>
          <tag name="return" line="138" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="148" package="EC\Poetry\Messages\Components">
        <name>getAddress</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getAddress()</full_name>
        <docblock line="148">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="148" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="157" package="EC\Poetry\Messages\Components">
        <name>setAddress</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setAddress()</full_name>
        <docblock line="157">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="157" description="" type="mixed" variable="$address">
            <type>mixed</type>
          </tag>
          <tag name="return" line="157" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$address</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="167" package="EC\Poetry\Messages\Components">
        <name>getPath</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getPath()</full_name>
        <docblock line="167">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="167" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="176" package="EC\Poetry\Messages\Components">
        <name>setPath</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setPath()</full_name>
        <docblock line="176">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="176" description="" type="mixed" variable="$path">
            <type>mixed</type>
          </tag>
          <tag name="return" line="176" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="186" package="EC\Poetry\Messages\Components">
        <name>getRemark</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getRemark()</full_name>
        <docblock line="186">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="186" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="195" package="EC\Poetry\Messages\Components">
        <name>setRemark</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setRemark()</full_name>
        <docblock line="195">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="mixed" variable="$remark">
            <type>mixed</type>
          </tag>
          <tag name="return" line="195" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remark</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="205" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::parseXml()</full_name>
        <docblock line="205">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="35" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="72" code="PPC:ERR-50008">No summary for method getType()</error>
      <error line="81" code="PPC:ERR-50008">No summary for method setType()</error>
      <error line="91" code="PPC:ERR-50008">No summary for method getAction()</error>
      <error line="100" code="PPC:ERR-50008">No summary for method setAction()</error>
      <error line="110" code="PPC:ERR-50008">No summary for method getUser()</error>
      <error line="119" code="PPC:ERR-50008">No summary for method setUser()</error>
      <error line="129" code="PPC:ERR-50008">No summary for method getPassword()</error>
      <error line="138" code="PPC:ERR-50008">No summary for method setPassword()</error>
      <error line="148" code="PPC:ERR-50008">No summary for method getAddress()</error>
      <error line="157" code="PPC:ERR-50008">No summary for method setAddress()</error>
      <error line="167" code="PPC:ERR-50008">No summary for method getPath()</error>
      <error line="176" code="PPC:ERR-50008">No summary for method setPath()</error>
      <error line="186" code="PPC:ERR-50008">No summary for method getRemark()</error>
      <error line="195" code="PPC:ERR-50008">No summary for method setRemark()</error>
      <error line="205" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $type</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $action</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $user</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $password</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $address</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $path</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $remark</error>
    </parse_markers>
    <source>eJzNV9tO4zAQfc9XWKiSU8TlHbYs3W4feABVUFYrEbQyqSERucl2oRXi33d8S5M0qYFupc0Dl/HM5JzjGXvy7XsRFZ6XkZTygoQUjUfBJKeCLYNLyjl5ojwY5WmRZzQT/NTz5pyim2X6mGfL1ULwiyTxjIicBZekKOLsKRglhPNLKgiYyakzbJRngi5EMF7QcC7iPDOGC/jJHgHYh1JwwUgMOBHhaMg5ZQIQH+/ve2gfKUDomoo5y4azGQN2YJYr50D8GZhu5g6ex164ngQBSprN4IUP8vWhKEO8Nw/BU7D4hQiKemJZAI2aCdyBa8MIRFnDVMBrX3M2a4ZrCGvOImqYGE0JewYxpFUJIp999HYeZxFlsZjl4bsxHuvQ+UMSh+hxnimI6ImKKU2LBNL5feWh2cmHKT0QDkuxTk607dAgxBrP++cBcEFEA0dlo/1amaFeav5qIiwXDs8A0YTlBdTGspoIy93BB+iujJFPRl9NIQWjKI9D6t/hV/pwQ9kL/APuGISNE3zfP+iKu8rFj4Rkz37F5b5/+mFoPtZFAi9rQ3NxdTO+nkokt5Ofw+kYoHwiOfC2O7SB+hSk8TGEQGPjXTK1ZV7nOl4UEiFo4NchYlquYDQ4Q1hEMT+SlSoB99FggPZWu7WH68hxqptch04jautYVgJa5nPEaUJDQWcoJFmABYrIC0UEWZRHuMrzk0RF9L+TFFErwS/0cLV5hwLK6GEuKF87RnqkXEODRjXq9pQkepL/4VkpQIOvaZa651AZa3VpzkL5GEUIY2T55zFO4MbxK1g6eZ+bwDRe0Jnz8FRg2w9OA3R1P7S8qyCMpPpV+iZpomjcbBvQcINGpVnbhBUW2ARzZ7UC/iey2J3ZKEz1lnRJo323EsdgMqk6BNKLUiKLbnci3cIJ4ZBoNTO4BJKeW8mj0Kg0HdLIJSmMxrQ7WSbmHHZIU5+dXPJY760kKpGV6TqksstSrhXOHbabxu/qt+pY6Wy4miRf7DgDyybr6jkzcQ8qk+8uy0tEztKyk7a7rES0ZUkBGpWms5REpMtIYtqdLNfqU8IhjP3e+Ig02ncrcQwmk6pDIL0oJap9DX1UpA1TDsuFHqFKTECQ099p4vcWabKGR62qI7KcUCbK5FeHSO2lqh4yqe9hGB1Vwgp0k6K8021UddTyMRDM50x+Jag5qt+vDU0q3N56rgRmwGpLoW+GSgIL2oQf61/SrTW+emw6cljXdir2OHGmMZ4daHTHOZHAKN8Wb4vSmUE74n7fUZHv3l+LACJo</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/AbstractComponent.php" generated-path="oe-poetry-client.src.Messages.Components.AbstractComponent.html" hash="47bb9e3d5e9fff89a355e1dc4a215a17" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ComponentInterface">\EC\Poetry\Messages\ComponentInterface</namespace-alias>
    <namespace-alias name="ArrayAccessTrait">\EC\Poetry\Messages\Traits\ArrayAccessTrait</namespace-alias>
    <namespace-alias name="ParserAwareTrait">\EC\Poetry\Messages\Traits\ParserAwareTrait</namespace-alias>
    <namespace-alias name="ParserAwareInterface">\EC\Poetry\Messages\ParserAwareInterface</namespace-alias>
    <class final="false" abstract="true" namespace="EC\Poetry\Messages\Components" line="15" package="EC\Poetry\Messages\Components">
      <extends/>
      <implements>\EC\Poetry\Messages\ComponentInterface</implements>
      <implements>\EC\Poetry\Messages\ParserAwareInterface</implements>
      <name>AbstractComponent</name>
      <full_name>\EC\Poetry\Messages\Components\AbstractComponent</full_name>
      <docblock line="15">
        <description>Class AbstractComponent</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Messages\Components"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\AbstractComponent">
            <type>\EC\Poetry\Messages\Components\AbstractComponent</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\AbstractComponent">
            <type>\EC\Poetry\Messages\Components\AbstractComponent</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzVk81u00AQx+/7FHPooURAHqAIakUIVWqlCjhUwhwm20m6wvuh2TGlgr47s7bjRLUTzswlzszf8/Gb8bsP6SEZE9BTTmgJPq7q20jCT/UN5YxbyvUq+hQDBckXxrT5tOYqCPFGM10ck35ldJLrihmfKmvV3Xn+pb9FzsTVIzKd1h8ID5oxy8XCwAJWDeYM1ToLo5WxbQ2V6KUy+KFZTmNQ5dLgkALsfEZwPjXkix6mdF7DXJvmtwG1MtgUzy4yBdGFuvmKLeATCTCFe2K6BxRht26F8tshvpNdMknLAbCU2jmhrwxxM/PmsvtN7bpxFjZtsOJigC1JNUrPX3WafpBiQ5Fv3/sJnifdftFuEXyPGSLrH7uHWNAEbCBxTMTiKMPW/aQAehNwd3Ot+RNTVi2WZiYzJmT0oLtxYQtnv3yzH1StJOhjx+DUM5cwPIxr+zMnmu78JMQNR3/nm/PS4kuEZ/Lg8pv3meQzPvaKYekHgAdRKtcxJjrGvLshBb2fv5CO6tEiZfd73P8N0fGD1N6FrOjtj3RfUnk2fwGkl5cl</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/SourceLanguage.php" generated-path="oe-poetry-client.src.Messages.Components.SourceLanguage.html" hash="2c210a7ca026f6e8125bceceb49f4b13" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <namespace-alias name="Constraint">\EC\Poetry\Messages\Components\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="15" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>SourceLanguage</name>
      <full_name>\EC\Poetry\Messages\Components\SourceLanguage</full_name>
      <docblock line="15">
        <description>Class Source</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$code</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::code</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$pages</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::pages</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::getTemplate()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::getConstraints()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Components">
        <name>getCode</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::getCode()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Components">
        <name>setCode</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::setCode()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="mixed" variable="$code">
            <type>mixed</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\SourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="63" package="EC\Poetry\Messages\Components">
        <name>getPages</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::getPages()</full_name>
        <docblock line="63">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="63" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="73" package="EC\Poetry\Messages\Components">
        <name>setPages</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::setPages()</full_name>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="73" description="" type="mixed" variable="$pages">
            <type>mixed</type>
          </tag>
          <tag name="return" line="73" description="" type="\EC\Poetry\Messages\Components\SourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pages</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="83" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\SourceLanguage::parseXml()</full_name>
        <docblock line="83">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\SourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\SourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="31" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="43" code="PPC:ERR-50008">No summary for method getCode()</error>
      <error line="53" code="PPC:ERR-50008">No summary for method setCode()</error>
      <error line="63" code="PPC:ERR-50008">No summary for method getPages()</error>
      <error line="73" code="PPC:ERR-50008">No summary for method setPages()</error>
      <error line="83" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $code</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $pages</error>
    </parse_markers>
    <source>eJytlE2P2yAQhu/+FRwiYUcb5b5pt9mNemuqSFlVleoeCJ5N0NqAAG8TrfLfO2DHdr5TdTnZw8zLwwvDpy96paNIsgKsZhzI10k6U+DMJp2CtWwJNp2oQisJ0tlRFJW2mzMH8yY45syYsWBGYXq+KV6U3LR16Q+Wi4w5ZdIp01rIZTrJmbVTcAzD7HrZREnrDBPIQJgljxYXc6MDmBPAh4XtL25l2O9HpE8CCpmr0nDAfx8aoxWvKHVZHDOHEe9Uf2NyWfoyWDuQGXIu/GrcNTXRe0RwaCPemAPS4yqD0X5I+1WQzgcDoR998j4WcgVGuEzxbR0cVpXlIhecvJSSO6EkWYJ7hkLnqBYnIaNa1A8DrjSSUN5s4v7eBvZBXsPTimf77wTWMXcA0rE/3jty0ivqr0PEZmLwwLJsZpTGo960QjH1ptE7IuFPfRHS78o9If9rnCSjm4VsTIPXKPWrKfLjpPDduZTnjYaYoh7t5PxOzrk4ro+gEGvIrp3jBHd67gx7biXs4KG9QSfW0sywolqqumv1zCFM0LoIY2uYoHJ0ZC0K+by71Cd5P8SVmT+1K7bUXXSLLyH1f4ypeCqdM9aEOe9Nt7tvNedC4xnlgDvcRcOj/UP8s8jj3rrIj2jCrPEgFVdw04fibuNUWaFtUAk7Bl8zVwl20GuJ5mbsqlDz0TkjFiU+QBSZywLL2xcS+43mS19Dk2Svq4JY42ajtgM4oTU8DoV6miRXTN5GfwHmchSI</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/YesNo.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.YesNo.html" hash="edccee108e94a61ca9675d89cb0a2166" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>YesNo</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\YesNo</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\YesNo::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="27" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\YesNo::validatedBy()</full_name>
        <docblock line="27">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\YesNo</error>
    </parse_markers>
    <source>eJydUV1rgzAUfc+vuPhilULfdbC6rrA9VEsngzJHyeJtDWsTSeKYiP99Me6jbC+j9yU3yTk559xcXddVTYigJ9Q1ZQjLRbGWaFRbrFBrekBdLOSplgKFGVqhjaLc9jEhjUZ4aE97KdofUPFIj7ykRqpzdLGoJGcYX8D5vrOKszAkEMI8EUIaargUbptTdUAz6bz1JlsvN/nWm4K3WuZ32e3QJWma5Ul+n6VeH1iC49i0rzbe/wNb1oywI9UatqhTCfhuUJQaRpukI2DLORwqhG7ORYWKm1Ky/vNw5ta6eTlyBvtGsCED7HbM6TTMTAKHGB9zWKqskyg6xzz51oE/BT+V/nMQO2xPLtd/G0eM5U37R1+haZSAX38RRW4SX9I9+QBvgroF</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/DetailsProcedure.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.DetailsProcedure.html" hash="73a58f1c2bc263f7781921b5d72720db" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>DetailsProcedure</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsProcedure</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsProcedure::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="37" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsProcedure::validatedBy()</full_name>
        <docblock line="37">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\DetailsProcedure</error>
    </parse_markers>
    <source>eJydUl1PwjAUfe+vaPYCLCS8DxOZ2yI+sC0wTYwzpHYXaBzt0nbGhfDf7Yoiwh4M96W3555zv9qb22pTIcTJFlRFKOAoyFMBWjb5DJQia1B5ILaV4MB163KlJWHGHyNUK8CLZrsSvPkl5U+kZAXRQp6y82AjGIXxFZpjzFQcuS7CLp74nAtNNBPcXjMi16D7OyedJ2k0z56dIXZmUTZNwtbz4zjJ/OwhiZ39wAisxkz7bsb7/8BGNUK0JErhEDRhpUqloFDUEjB8auCFwoeO0Q5hY7bZ1ly8mzC+Acl0Iej+GxzZs6rfSkbxqua0HQcvl9SWrKnuDyzjkMxyiTRNed4p5+UYba0XRvfTtDf8C8aRH2fnoFmVH3SAQXShb9HkHJxHj3Gw6EL9x64E0y4wPAFfB2Pr79H12/s4/BUo7pqL7UnQteT47FN5nn3Sn9J79AUqTt0R</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/DocumentFormat.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.DocumentFormat.html" hash="f53d7755aca95638c92fc3fde7f14e9d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>DocumentFormat</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\DocumentFormat</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DocumentFormat::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="44" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DocumentFormat::validatedBy()</full_name>
        <docblock line="44">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\DocumentFormat</error>
    </parse_markers>
    <source>eJydklFrwjAQx9/zKYIvahF8r4NNraJgbdHMdVuHZGnUMpuUJB0T6XdfGjcnjQ/De8nld//L3ZG7u893OQAMZ1TmmFA4GsYhp0ocYp9KibdUxkOe5ZxRpiqXSSVwqv0eAIWkcHnINpwd/kTxCu/TBCsuLtXxcMdTQns35JxjumLXcQB04EOfMa6wSjkzV4TFlqrWsREugnC0QM+NDmz4IzQJvMrrz+cB6qNpMG+UbZ1gcvS0H3q8/w+ss7qA7LGU0OOkyHR8zEWGFaRfirJEwlO/4AigNtNqZQ48PqRsR0WqEk7KH9g1Z16871MCNwUj1TBwvSamYEFUq20Up8eMFgtd0nUvNa/naGVNLxg2OxaK6myC/CtoVmehN7ZQiOpogSwVml5DNousxx6XgzpaLb06imZLC9ntR/5THb1Mwwv01u4ZvwS3f9jnaTlpMjhYHyaoKgSDtS12XbNDv6VL8A2azOvJ</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/StatusCode.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.StatusCode.html" hash="72a1fc3ac541af085be489b54259b4da" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>StatusCode</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\StatusCode</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\StatusCode::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="35" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\StatusCode::validatedBy()</full_name>
        <docblock line="35">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\StatusCode</error>
    </parse_markers>
    <source>eJydUl1PwjAUfe+vaPYCLCS8DxPBWT8S2ZZtEo0zpHYXWIR2aTvjQvbf7YoijhfDfentuef0fvXislyXCHG6BVVSBpj4WSRAyzqbgVJ0BSrzxbYUHLhuXa60pIXxxwhVCnBSb5eC17+kbE43RU61kMfszF+LgsH4DM0hZjKOXBdhF0+mnAtNdSG4vaZUrkD3d04UhxGJ02dniJ0ZSe/C69abBkGYTtP7MHCagRFYjen23bT3/4aNaoTYhiqFE5O7Ur7IAcOnBp4rvK8V7RA2ZstszcW7ScHXIAudC9Z8gyN7ltXbpmB4WXHWNoIXC2aTVUz3B5axf8xyqTTleN4x5+UQba1Hnkhv+BcKg9suFMUnLBLMu1BMbrqQHzx0oeQxOYJeB2PrN+j8EXzsVw35VX0yAgm6khx3/oTn2Y38pG7QF3zOzrE=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/SourceChannel.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.SourceChannel.html" hash="5d7c38bf65bbf7dc8fb94ff270685532" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>SourceChannel</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\SourceChannel</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\SourceChannel::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="32" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\SourceChannel::validatedBy()</full_name>
        <docblock line="32">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\SourceChannel</error>
    </parse_markers>
    <source>eJydUcFuwjAMvecrol4GFRL3MmmUrtJ2gFalTELrhLLU0GrFqZJ0WoX670vDxhi7TPgS5/m92C++vauLmhBke1A140DDIIsFaNlmc1CK7UBlgdjXAgF1n6LSkpUmnxDSKKDLdr8V2P6QsidWlTnTQp6zs6AQJYfJFZpTzXQcuy6hLp36iEIzXQq015TJHejBwYmTKA6TdO2MqDMP04fovs/8xSJK/fQxWjjd0Aisxrh9M/b+b9ioxoRXTCm6FI3kEBQMESoKHxowV/Q4LjkQasJO2odLD9MSC5ClzgXvvsCxPevmtSo53TbIey90s+G2X8P1YGgZx8csl0kzkeedc55P1T5u4ihMk/XN6DearMJLaLWcXUKxbz7uDHwZTmzekevtvB83B/ms/WNHgm4k0osVe5794O/WHfkEENDItg==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/SourceDeadlineStatus.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.SourceDeadlineStatus.html" hash="73e46d178429796a07c2d62ad0162286" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>SourceDeadlineStatus</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\SourceDeadlineStatus</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\SourceDeadlineStatus::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="30" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\SourceDeadlineStatus::validatedBy()</full_name>
        <docblock line="30">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\SourceDeadlineStatus</error>
    </parse_markers>
    <source>eJydUV1rwjAUfc+vCH1Ri+B7HUxtCxPUFu0GYx2SpVcNq0nJx1iR/velcXPd9jK8Lzm595zcc3NvbqtDhRAnR1AVoYDjME8FaFnnS1CK7EHloThWggPXLeRKS8IsHiNkFOBNfdwJXn+T8gdSsoJoIbvsPDwIRmF8heZSsx1Hvo+wjydTzoUmmgnurhmRe9D9k5eukzReZ4/eEHvLOLtLohZNV6skm2bzZOU1AytwGjvtqx3v/wNb1QjRkiiFN8JIChGQomQcNtaJURjeNfBC4bNrdELYhjPcho9PE8YPIJkuBG0+kyN3VualZBTvDKftSHi7pa6tobo/cIzzY45LpDUWBF3O06XaRi+9ny3mYW/4MxvFiziLo076eTB2uEHXW307LweKWf3HqgRtJMe/thgE7g+/WjfoAyavxhQ=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/StatusType.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.StatusType.html" hash="09ec972abce0649db6601ecf2de6d55b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>StatusType</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\StatusType</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\StatusType::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="31" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\StatusType::validatedBy()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\StatusType</error>
    </parse_markers>
    <source>eJydUcFuwjAMvecrol6ACol7O2kwhrQdoAiqSdM6oZAaGo0mXeJMq1D/fWlgjLHLhC9x7Pfy/OKb26qoCJGsBFMxDnQyzuYKUNfZFIxhWzDZWJWVkiCxTaVBzYTLY0KsAbqsy42S9Q8oe2I7kTNU+hydjQslOMRXcE49pzgIQ0JDOhxJqZChUNJfU6a3gN19MF8k88kifQ76NJhO0ofkvs1Gs1mSjtLHZBY0PUfwHOf2zdn7v2HHGhC+Y8bQpdO2Jq0roPCJIHNDD7OSPaEu/JhthHQ/FLIALTBXvDkWB/6s7HonON1YyVsjdLXiXsxy7PY84vCYxzLtxomic8zLqdtGJ4eSyRw6/d9lhqjF2rYKly0N7xYMnpVfe7HPG3K9jY/DuiC/q//Y0IBWS3qx1yjyv/ot3ZAvtxHLCQ==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/DetailsType.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.DetailsType.html" hash="7d1425fd6d7d71d524e375c6edcee8ba" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>DetailsType</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsType</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsType::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="36" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsType::validatedBy()</full_name>
        <docblock line="36">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\DetailsType</error>
    </parse_markers>
    <source>eJydUl1PwjAUfe+vaPYCLCS8DxMdMJHEfWQWE+MMqV2BxtEubWdcyP67XVFE5oPhvvT23HN6P3qvrsttCQDHO6pKTCgMplkiqJZ1FlKl8IaqbCp2peCU69blSkvMjD8GoFIUPtS7teD1Dyl7xAXLsRbylJ1Nt4IROr5Ac4yZjCPXBdCFNz7nQmPNBLdXhOWG6v7eSdI4CVL05AyhEwboLp61nh9FMfLRIo6cZmAEVmO6fTPt/b9hoxoBUmCl4IxqzAqF6pJC+qEpzxU8FAv2ABqzdbbmwv0N41sqmc4Fab7AkT3L6rVgBK4rTtpO4GpFbLaK6P7AMg6PWS6Wph7PO+U8H6Ot9fwlSoPe8Dc4jcPkHFuE8w4U3XYhFKR/gKl/Dt4Hc9SRJ8vJCfQyGFu/AZeP5/2wBzSf1J3xSKoryeHZwnie/a7v1A34BMPW1JY=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Constraints/DetailsDestination.php" generated-path="oe-poetry-client.src.Messages.Components.Constraints.DetailsDestination.html" hash="da289367c9805b571f5f7f109045a687" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Choice">\Symfony\Component\Validator\Constraints\Choice</namespace-alias>
    <namespace-alias name="ChoiceValidator">\Symfony\Component\Validator\Constraints\ChoiceValidator</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components\Constraints" line="14" package="EC\Poetry\Messages\Components\Constraints">
      <extends>\Symfony\Component\Validator\Constraints\Choice</extends>
      <name>DetailsDestination</name>
      <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsDestination</full_name>
      <docblock line="14">
        <description></description>
        <long-description></long-description>
        <tag name="Annotation" line="14" description=""/>
        <tag name="Target" line="14" description="({&quot;PROPERTY&quot;, &quot;METHOD&quot;, &quot;ANNOTATION&quot;})"/>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components\Constraints"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="19" package="EC\Poetry\Messages\Components\Constraints">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsDestination::__construct()</full_name>
        <docblock line="19">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components\Constraints" line="38" package="EC\Poetry\Messages\Components\Constraints">
        <name>validatedBy</name>
        <full_name>\EC\Poetry\Messages\Components\Constraints\DetailsDestination::validatedBy()</full_name>
        <docblock line="38">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="14" code="PPC:ERR-50005">No summary for class \EC\Poetry\Messages\Components\Constraints\DetailsDestination</error>
    </parse_markers>
    <source>eJydUl1PgzAUfe+vaHjZRpbsnZk4xkjEyEegMxoxSy3d1shaQouRLPx3odM54cXsvvT23HPuV3tzW+wLADg+UFlgQqHrpJGgqqxTn0qJd1SmjjgUglOuOpdLVWLW+nMAKklhUh+2gte/pPQR5yzDSpSX7NTZC0bo/ArNOdZWnJkmgCZc2JwLhRUTXF8RLndUjY9GFIeRG6NnYwoN30V34arz7CAIkY28MDCaSSvQmnba93a8/w/cqmaA5FhKuKIKs1yuqFSM6zYg/VSUZxKeegZHAFvT7XZmwuOC8T0tmcoEab7BmT6L6i1nBG4rTnSmzYboohVR44lmnJJpLi7btizrkvNyjnY2stcodkfTv6AT+r6XxH3Y9QfIE+pD3iCbFyA3DgbwfdhHothNkgEvWi8fPKePxsll5dfJXPsNuH6RH6ePQ7NlPVhkSVVVctj7YZal3/endAO+AI8d3p8=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Source.php" generated-path="oe-poetry-client.src.Messages.Components.Source.html" hash="58852c611a4746a85b2ae64e51a5402f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="WithSourceLanguagesTrait">\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</namespace-alias>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <namespace-alias name="Constraint">\EC\Poetry\Messages\Components\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>Source</name>
      <full_name>\EC\Poetry\Messages\Components\Source</full_name>
      <docblock line="16">
        <description>Class Source</description>
        <long-description></long-description>
        <tag name="package" line="16" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$format</name>
        <full_name>\EC\Poetry\Messages\Components\Source::format</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$legiswriteFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Source::legiswriteFormat</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$trackChanges</name>
        <full_name>\EC\Poetry\Messages\Components\Source::trackChanges</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="23" package="EC\Poetry\Messages\Components">
        <name>$channel</name>
        <full_name>\EC\Poetry\Messages\Components\Source::channel</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="24" package="EC\Poetry\Messages\Components">
        <name>$confidential</name>
        <full_name>\EC\Poetry\Messages\Components\Source::confidential</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="25" package="EC\Poetry\Messages\Components">
        <name>$deadline</name>
        <full_name>\EC\Poetry\Messages\Components\Source::deadline</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>$deadlineStatus</name>
        <full_name>\EC\Poetry\Messages\Components\Source::deadlineStatus</full_name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Components">
        <name>$name</name>
        <full_name>\EC\Poetry\Messages\Components\Source::name</full_name>
        <default></default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="28" package="EC\Poetry\Messages\Components">
        <name>$path</name>
        <full_name>\EC\Poetry\Messages\Components\Source::path</full_name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="29" package="EC\Poetry\Messages\Components">
        <name>$size</name>
        <full_name>\EC\Poetry\Messages\Components\Source::size</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="30" package="EC\Poetry\Messages\Components">
        <name>$file</name>
        <full_name>\EC\Poetry\Messages\Components\Source::file</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$sourceLanguages</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::sourceLanguages</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getTemplate()</full_name>
        <docblock line="35">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getConstraints()</full_name>
        <docblock line="43">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="72" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getAttributes()</full_name>
        <docblock line="72">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" refers="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_getAttributes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="90" package="EC\Poetry\Messages\Components">
        <name>getFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getFormat()</full_name>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="90" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="99" package="EC\Poetry\Messages\Components">
        <name>setFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setFormat()</full_name>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="99" description="" type="mixed" variable="$format">
            <type>mixed</type>
          </tag>
          <tag name="return" line="99" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="109" package="EC\Poetry\Messages\Components">
        <name>getLegiswriteFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getLegiswriteFormat()</full_name>
        <docblock line="109">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="109" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="118" package="EC\Poetry\Messages\Components">
        <name>setLegiswriteFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setLegiswriteFormat()</full_name>
        <docblock line="118">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="118" description="" type="mixed" variable="$legiswriteFormat">
            <type>mixed</type>
          </tag>
          <tag name="return" line="118" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$legiswriteFormat</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="128" package="EC\Poetry\Messages\Components">
        <name>getTrackChanges</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getTrackChanges()</full_name>
        <docblock line="128">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="128" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="137" package="EC\Poetry\Messages\Components">
        <name>setTrackChanges</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setTrackChanges()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="mixed" variable="$trackChanges">
            <type>mixed</type>
          </tag>
          <tag name="return" line="137" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$trackChanges</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="147" package="EC\Poetry\Messages\Components">
        <name>getChannel</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getChannel()</full_name>
        <docblock line="147">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="147" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="156" package="EC\Poetry\Messages\Components">
        <name>setChannel</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setChannel()</full_name>
        <docblock line="156">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="156" description="" type="mixed" variable="$channel">
            <type>mixed</type>
          </tag>
          <tag name="return" line="156" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$channel</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="166" package="EC\Poetry\Messages\Components">
        <name>getConfidential</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getConfidential()</full_name>
        <docblock line="166">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="175" package="EC\Poetry\Messages\Components">
        <name>setConfidential</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setConfidential()</full_name>
        <docblock line="175">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="175" description="" type="mixed" variable="$confidential">
            <type>mixed</type>
          </tag>
          <tag name="return" line="175" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$confidential</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="185" package="EC\Poetry\Messages\Components">
        <name>getDeadline</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getDeadline()</full_name>
        <docblock line="185">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="185" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="194" package="EC\Poetry\Messages\Components">
        <name>setDeadline</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setDeadline()</full_name>
        <docblock line="194">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="194" description="" type="mixed" variable="$deadline">
            <type>mixed</type>
          </tag>
          <tag name="return" line="194" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$deadline</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="204" package="EC\Poetry\Messages\Components">
        <name>getDeadlineStatus</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getDeadlineStatus()</full_name>
        <docblock line="204">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="204" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="213" package="EC\Poetry\Messages\Components">
        <name>setDeadlineStatus</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setDeadlineStatus()</full_name>
        <docblock line="213">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="213" description="" type="mixed" variable="$deadlineStatus">
            <type>mixed</type>
          </tag>
          <tag name="return" line="213" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$deadlineStatus</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="223" package="EC\Poetry\Messages\Components">
        <name>getName</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getName()</full_name>
        <docblock line="223">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="223" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="232" package="EC\Poetry\Messages\Components">
        <name>setName</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setName()</full_name>
        <docblock line="232">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="232" description="" type="mixed" variable="$name">
            <type>mixed</type>
          </tag>
          <tag name="return" line="232" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="242" package="EC\Poetry\Messages\Components">
        <name>getPath</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getPath()</full_name>
        <docblock line="242">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="242" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="251" package="EC\Poetry\Messages\Components">
        <name>setPath</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setPath()</full_name>
        <docblock line="251">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="251" description="" type="mixed" variable="$path">
            <type>mixed</type>
          </tag>
          <tag name="return" line="251" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="261" package="EC\Poetry\Messages\Components">
        <name>getSize</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getSize()</full_name>
        <docblock line="261">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="261" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="270" package="EC\Poetry\Messages\Components">
        <name>setSize</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setSize()</full_name>
        <docblock line="270">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="270" description="" type="mixed" variable="$size">
            <type>mixed</type>
          </tag>
          <tag name="return" line="270" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="280" package="EC\Poetry\Messages\Components">
        <name>getFile</name>
        <full_name>\EC\Poetry\Messages\Components\Source::getFile()</full_name>
        <docblock line="280">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="280" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="289" package="EC\Poetry\Messages\Components">
        <name>setFile</name>
        <full_name>\EC\Poetry\Messages\Components\Source::setFile()</full_name>
        <docblock line="289">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="289" description="" type="mixed" variable="$file">
            <type>mixed</type>
          </tag>
          <tag name="return" line="289" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="299" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\Source::parseXml()</full_name>
        <docblock line="299">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="312" package="EC\Poetry\Messages\Components">
        <name>parseSourceLanguage</name>
        <full_name>\EC\Poetry\Messages\Components\Source::parseSourceLanguage()</full_name>
        <docblock line="312">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="312" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="324" package="EC\Poetry\Messages\Components">
        <name>parseDocumentSource</name>
        <full_name>\EC\Poetry\Messages\Components\Source::parseDocumentSource()</full_name>
        <docblock line="324">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="324" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>addSourceLanguage</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::addSourceLanguage()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Component object.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\SourceLanguage" variable="$sourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sourceLanguage</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Traits">
        <name>getSourceLanguages</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::getSourceLanguages()</full_name>
        <docblock line="39">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="51" package="EC\Poetry\Messages\Traits">
        <name>setSourceLanguages</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::setSourceLanguages()</full_name>
        <docblock line="51">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;" variable="$sourceLanguages">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
          </tag>
          <tag name="return" line="51" description="" type="\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait">
            <type>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sourceLanguages</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="64" package="EC\Poetry\Messages\Traits">
        <name>withSourceLanguage</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::withSourceLanguage()</full_name>
        <docblock line="64">
          <description>Factory method: create a new SourceLanguage and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="64" description="SourceLanguage instance." type="\EC\Poetry\Messages\Components\SourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="43" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="90" code="PPC:ERR-50008">No summary for method getFormat()</error>
      <error line="99" code="PPC:ERR-50008">No summary for method setFormat()</error>
      <error line="109" code="PPC:ERR-50008">No summary for method getLegiswriteFormat()</error>
      <error line="118" code="PPC:ERR-50008">No summary for method setLegiswriteFormat()</error>
      <error line="128" code="PPC:ERR-50008">No summary for method getTrackChanges()</error>
      <error line="137" code="PPC:ERR-50008">No summary for method setTrackChanges()</error>
      <error line="147" code="PPC:ERR-50008">No summary for method getChannel()</error>
      <error line="156" code="PPC:ERR-50008">No summary for method setChannel()</error>
      <error line="166" code="PPC:ERR-50008">No summary for method getConfidential()</error>
      <error line="175" code="PPC:ERR-50008">No summary for method setConfidential()</error>
      <error line="185" code="PPC:ERR-50008">No summary for method getDeadline()</error>
      <error line="194" code="PPC:ERR-50008">No summary for method setDeadline()</error>
      <error line="204" code="PPC:ERR-50008">No summary for method getDeadlineStatus()</error>
      <error line="213" code="PPC:ERR-50008">No summary for method setDeadlineStatus()</error>
      <error line="223" code="PPC:ERR-50008">No summary for method getName()</error>
      <error line="232" code="PPC:ERR-50008">No summary for method setName()</error>
      <error line="242" code="PPC:ERR-50008">No summary for method getPath()</error>
      <error line="251" code="PPC:ERR-50008">No summary for method setPath()</error>
      <error line="261" code="PPC:ERR-50008">No summary for method getSize()</error>
      <error line="270" code="PPC:ERR-50008">No summary for method setSize()</error>
      <error line="280" code="PPC:ERR-50008">No summary for method getFile()</error>
      <error line="289" code="PPC:ERR-50008">No summary for method setFile()</error>
      <error line="299" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="312" code="PPC:ERR-50008">No summary for method parseSourceLanguage()</error>
      <error line="324" code="PPC:ERR-50008">No summary for method parseDocumentSource()</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $format</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $legiswriteFormat</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $trackChanges</error>
      <error line="23" code="PPC:ERR-50007">No summary for property $channel</error>
      <error line="24" code="PPC:ERR-50007">No summary for property $confidential</error>
      <error line="25" code="PPC:ERR-50007">No summary for property $deadline</error>
      <error line="26" code="PPC:ERR-50007">No summary for property $deadlineStatus</error>
      <error line="27" code="PPC:ERR-50007">No summary for property $name</error>
      <error line="28" code="PPC:ERR-50007">No summary for property $path</error>
      <error line="29" code="PPC:ERR-50007">No summary for property $size</error>
      <error line="30" code="PPC:ERR-50007">No summary for property $file</error>
    </parse_markers>
    <source>eJy1WNluGzcUfddXEIGBkQ257kte4kZ1KjfoQ+wakNGk6AQFPUNJhGcDScVWAv97uc5wmUWaWvMk8d57eHh4ud1ffq021WRSwBzRCiYI/L6I70rEyC6+QZTCNaLxosyrskAFo5eTyZa2+twTiBmNP2O2WZZbkqBPsFhvhUlaLr24JSLfcMLj7iChiCjzcpevymLX9Bf/BTOcQlaS+AZWFS7W8SKDlN4gBnkzHA5blAVlnADnDiAFHyjvLCDTMlA/sPnLJbg4O5uAMyCpADVa/l80XXEJHzlUPzj3vJgkVjRAzwwVKef3IHpJWO07+TEB/BN8u6WVLhXB3yBD4GRVkhzyVqcxQ2tMnwhm6GObWXT6uNhwXEQ9U8JbC5T5rWWxwikniKFvShFMM1ygjuYlg2zrdyLSz2uqINt4TRR/971WOENaADkr4jsDP65wsUF8tGmZvOjGCxW4fchwAlbbImG4LMAasXuUVxkHm55KDyW4+AhiW1KAKKkn7t07KicgUixeDu+Y8tF7/VuZNnWyG5zk+pfPrDacz2Ga3pGy4lm9s4EilQXRDPxTR4mvQE96EcS3Jfstg8Xj9HQWuDRQ8XWZbHM+eJU3tvPX08tDGPkp+Arc/kb0thxLaRrZWc/ZtIMfhKgXSwimFu5CmQ8Ftdba69B012IX22vH68AuxIrWwMGcHgQkVvgrAPEEpO7m2Zd/i3LL+3bN4otyXETg/Rz8PGuxwWdpe9tu0weBdIn+LLIdeAsUJZAZTgASBGCWlU8o/Slycb62rAVNV553betgxA5lb00fGCP4YcsQDTbHE1jbwHtPyHoZiKGesA2m53Ox0Znsd8dRZ6PnbtIv8KcyH6/7o0zSerE5JI8o9YlZCyyI0BupGxFuhtK32eI8/0/e3hdEOluRG3tvmZw51uee+PRRBQmBu3/5imGITK0Z6syGKx2Y42eUDmWDod5+TGrC9u2jpb8KEpir7sxNxediLlQ9ZGhNRmME2WmT4flZX4paWb+KOuEU9+rUfiEbUsyPGqddQDXA7dDTdxPKhgM5nsbuUujVN7zRDmlrR4zT1aHn4HXoabsILV3Sx9Ox3ol7JXRu/kPqaedxwhk+BqVDLm0VStXcjiiScyr0KxW8hgblsiJGambTc/C61LNcpIQO6ePp2JzjvRq6z8Yh/Yz3OO1qSjVOh2bGLPRqCB5fK3N72Usx+0W9r24q5v+pp0l6mANKKidbT0P/eKre8rfIgJZNAWJIQeE5TjdJQ8Z3aCRMQhlF5nh63EG2GdCjqb4M6SE8x+khacj4Dj2ESeihyBxPjyX+PpQfTelpSA/hOU4PSUPGd+ghTEIPReZ4enzkT+6ha76su+2jh/Acp4ekIeO7rvfcJC/3TRFwXz16nsGkZChhnHrNpRI16i85P2af8/B0lVYir2/myaaK2lO7PKG8ZHGCI/HDm/GTVwFe+uOSvqbuprSaaoAOZ7cubDkPiaIlqSct7izRmyFMbKlUFdYVyuPiRneodz5HMNnUVe/pm9QZ/YX7V2C/mTXd1n2YOsqp1YMl1VNQQddZbj6+xOrJC2fT912RMpdZYbo9n5f8tU3+YLlb4nuZKQbdz/BDxB+Q38ubAfn1xmJdwc2E2OWfaeROQDRrajyWLBKouVvti1TXf7qgzEVjX0CvQOTDujfnfUF15cgHMy/ofWF0OcmHCZ/k+wJaNScf1H2P7gvolKJ8SHWHsaDMThb1rlgRFmCZ8/9ALBEWYKmz82AsERZOqTx3DsYSYdFpvcZfJv8BCaCwzw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Contact.php" generated-path="oe-poetry-client.src.Messages.Components.Contact.html" hash="832a7641c9be5ad36331af221e330076" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="14" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>Contact</name>
      <full_name>\EC\Poetry\Messages\Components\Contact</full_name>
      <docblock line="14">
        <description>Class Contact</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
        <name>$type</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::type</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$action</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::action</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$nickname</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::nickname</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="19" package="EC\Poetry\Messages\Components">
        <name>$email</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::email</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="24" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::getTemplate()</full_name>
        <docblock line="24">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="32" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::getConstraints()</full_name>
        <docblock line="32">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="46" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::getAttributes()</full_name>
        <docblock line="46">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" refers="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_getAttributes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="59" package="EC\Poetry\Messages\Components">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::getType()</full_name>
        <docblock line="59">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="59" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="68" package="EC\Poetry\Messages\Components">
        <name>setType</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::setType()</full_name>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="68" description="" type="mixed" variable="$type">
            <type>mixed</type>
          </tag>
          <tag name="return" line="68" description="" type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="78" package="EC\Poetry\Messages\Components">
        <name>getAction</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::getAction()</full_name>
        <docblock line="78">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="87" package="EC\Poetry\Messages\Components">
        <name>setAction</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::setAction()</full_name>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="87" description="" type="mixed" variable="$action">
            <type>mixed</type>
          </tag>
          <tag name="return" line="87" description="" type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="97" package="EC\Poetry\Messages\Components">
        <name>getNickname</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::getNickname()</full_name>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="97" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="106" package="EC\Poetry\Messages\Components">
        <name>setNickname</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::setNickname()</full_name>
        <docblock line="106">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="106" description="" type="mixed" variable="$nickname">
            <type>mixed</type>
          </tag>
          <tag name="return" line="106" description="" type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$nickname</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="116" package="EC\Poetry\Messages\Components">
        <name>getEmail</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::getEmail()</full_name>
        <docblock line="116">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="116" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="125" package="EC\Poetry\Messages\Components">
        <name>setEmail</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::setEmail()</full_name>
        <docblock line="125">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="125" description="" type="mixed" variable="$email">
            <type>mixed</type>
          </tag>
          <tag name="return" line="125" description="" type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="135" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\Contact::parseXml()</full_name>
        <docblock line="135">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="32" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="59" code="PPC:ERR-50008">No summary for method getType()</error>
      <error line="68" code="PPC:ERR-50008">No summary for method setType()</error>
      <error line="78" code="PPC:ERR-50008">No summary for method getAction()</error>
      <error line="87" code="PPC:ERR-50008">No summary for method setAction()</error>
      <error line="97" code="PPC:ERR-50008">No summary for method getNickname()</error>
      <error line="106" code="PPC:ERR-50008">No summary for method setNickname()</error>
      <error line="116" code="PPC:ERR-50008">No summary for method getEmail()</error>
      <error line="125" code="PPC:ERR-50008">No summary for method setEmail()</error>
      <error line="135" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $type</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $action</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $nickname</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $email</error>
    </parse_markers>
    <source>eJy1Vk2P2jAQvedX+ICUBO2K+9LdQimHHkCo0GqlDapMMGCROJFttqAV/73jjwSHb1A3p2j8/PzmjT32l6/5Ivc8hlMichwT1O1Eg4xIvol6RAg8JyLqZGmeMcKkaHreSriYIeHvNAbMAHNBeFMPDzfpLGOb3bzoN07oFMuMRz2c55TNo06ChegRiSGML0/rZExIjiloQFigtoDFJKhp1OseqiPNhgAkcSwhoGItSGcJ+s9nBMiGF7vTEVlLwqawyEQtGcsS7H14CL6c03csCarJTU6a1RDAacb2gozGS2XwXpikmCaQgwrqPNRXRx8tyhaEUznN4q0NNszM1SShMZqtmF4FzYkckTRPgC0INcIIVB8ncsUZ8uMy06en2CToGx3b21cWEss9AU5hgkpNUS21f/vSyoHHFzydDniWQy03O6LAV8b6D4iRv7bSUT+T3xLMlkEYNm8gMuWoUnUWGezY4M3/0R92f45g0P81+N4edf3xLeQi8Iu6AsVbOU99R4U/nIKMINvAB1o4F74DG9+Uqt5N1Uy7KlQ6dke93UK3JQicrCQRB3uthssx9FyxwlQSPb/AYVlQ8fiitqxKt+JGUaYqrq2DLnJsD4uzvzHnePNnRhNJeODoOJlzy05M6ZpML54uLfX4ybJCdz3gyFo55jg1S5lusa+i7FhndAirQxMcWL9TAdbbjnRU6n8xpKjJWUvcHnjJFIO90xarxpKcsMYMKnMKXZ9nT982hAsGVe+DSxYV6DtNKjWVRCeMKoaVVTuFn2eW7U5nnbJX5DU2aeidHhkphuKEO3pMWePe2tf6cqbR8kySWEICpZ5cvaReU9CzTg/V6FGuz3rRKM3TK3BvC4PSdwUwKRfgBWAIHemWorJJipnmatfTfPtuEA37U6D9MHS6uCayTl7DoqFHKEyzKzOAlm4fBIfQogFUwfY2CcMLVdp6/wC2iDBk</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Identifier.php" generated-path="oe-poetry-client.src.Messages.Components.Identifier.html" hash="6cf9faa593bbb1e9ebf298305991dc51" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ExecutionContextInterface">\Symfony\Component\Validator\Context\ExecutionContextInterface</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <namespace-alias name="GroupSequenceProviderInterface">\Symfony\Component\Validator\GroupSequenceProviderInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="15" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>Identifier</name>
      <full_name>\EC\Poetry\Messages\Components\Identifier</full_name>
      <docblock line="15">
        <description>Class Identifier</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$code</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::code</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$year</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::year</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="19" package="EC\Poetry\Messages\Components">
        <name>$number</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::number</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$sequence</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::sequence</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$version</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::version</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$part</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::part</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="23" package="EC\Poetry\Messages\Components">
        <name>$product</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::product</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="28" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getTemplate()</full_name>
        <docblock line="28">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="36" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getConstraints()</full_name>
        <docblock line="36">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="66" package="EC\Poetry\Messages\Components">
        <name>getFormattedIdentifier</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getFormattedIdentifier()</full_name>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="66" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="84" package="EC\Poetry\Messages\Components">
        <name>getCode</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getCode()</full_name>
        <docblock line="84">
          <description>Get Code property.</description>
          <long-description></long-description>
          <tag name="return" line="84" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="97" package="EC\Poetry\Messages\Components">
        <name>setCode</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::setCode()</full_name>
        <docblock line="97">
          <description>Set Code property.</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;Property value.&lt;/p&gt;" type="mixed" variable="$code">
            <type>mixed</type>
          </tag>
          <tag name="return" line="97" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="110" package="EC\Poetry\Messages\Components">
        <name>getYear</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getYear()</full_name>
        <docblock line="110">
          <description>Get Year property.</description>
          <long-description></long-description>
          <tag name="return" line="110" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="123" package="EC\Poetry\Messages\Components">
        <name>setYear</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::setYear()</full_name>
        <docblock line="123">
          <description>Set Year property.</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;Property value.&lt;/p&gt;" type="mixed" variable="$year">
            <type>mixed</type>
          </tag>
          <tag name="return" line="123" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$year</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="136" package="EC\Poetry\Messages\Components">
        <name>getVersion</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getVersion()</full_name>
        <docblock line="136">
          <description>Get Version property.</description>
          <long-description></long-description>
          <tag name="return" line="136" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="149" package="EC\Poetry\Messages\Components">
        <name>setVersion</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::setVersion()</full_name>
        <docblock line="149">
          <description>Set Version property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;Property value.&lt;/p&gt;" type="mixed" variable="$version">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="162" package="EC\Poetry\Messages\Components">
        <name>getNumber</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getNumber()</full_name>
        <docblock line="162">
          <description>Get Number property.</description>
          <long-description></long-description>
          <tag name="return" line="162" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="175" package="EC\Poetry\Messages\Components">
        <name>setNumber</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::setNumber()</full_name>
        <docblock line="175">
          <description>Set Number property.</description>
          <long-description></long-description>
          <tag name="param" line="175" description="&lt;p&gt;Property value.&lt;/p&gt;" type="mixed" variable="$number">
            <type>mixed</type>
          </tag>
          <tag name="return" line="175" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$number</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="185" package="EC\Poetry\Messages\Components">
        <name>getSequence</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getSequence()</full_name>
        <docblock line="185">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="185" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="194" package="EC\Poetry\Messages\Components">
        <name>setSequence</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::setSequence()</full_name>
        <docblock line="194">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="194" description="" type="mixed" variable="$sequence">
            <type>mixed</type>
          </tag>
          <tag name="return" line="194" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sequence</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="207" package="EC\Poetry\Messages\Components">
        <name>getPart</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getPart()</full_name>
        <docblock line="207">
          <description>Get Part property.</description>
          <long-description></long-description>
          <tag name="return" line="207" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="220" package="EC\Poetry\Messages\Components">
        <name>setPart</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::setPart()</full_name>
        <docblock line="220">
          <description>Set Part property.</description>
          <long-description></long-description>
          <tag name="param" line="220" description="&lt;p&gt;Property value.&lt;/p&gt;" type="mixed" variable="$part">
            <type>mixed</type>
          </tag>
          <tag name="return" line="220" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="233" package="EC\Poetry\Messages\Components">
        <name>getProduct</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getProduct()</full_name>
        <docblock line="233">
          <description>Get Product property.</description>
          <long-description></long-description>
          <tag name="return" line="233" description="Property value." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="246" package="EC\Poetry\Messages\Components">
        <name>setProduct</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::setProduct()</full_name>
        <docblock line="246">
          <description>Set Product property.</description>
          <long-description></long-description>
          <tag name="param" line="246" description="&lt;p&gt;Property value.&lt;/p&gt;" type="mixed" variable="$product">
            <type>mixed</type>
          </tag>
          <tag name="return" line="246" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$product</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="259" package="EC\Poetry\Messages\Components">
        <name>getGroupSequence</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::getGroupSequence()</full_name>
        <docblock line="259">
          <description>Returns which validation groups should be used for a certain state
of the object.</description>
          <long-description></long-description>
          <tag name="return" line="259" description="An array of validation groups" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="272" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\Identifier::parseXml()</full_name>
        <docblock line="272">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="36" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="66" code="PPC:ERR-50008">No summary for method getFormattedIdentifier()</error>
      <error line="185" code="PPC:ERR-50008">No summary for method getSequence()</error>
      <error line="194" code="PPC:ERR-50008">No summary for method setSequence()</error>
      <error line="272" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $code</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $year</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $number</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $sequence</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $version</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $part</error>
      <error line="23" code="PPC:ERR-50007">No summary for property $product</error>
    </parse_markers>
    <source>eJzNWE1v3DYQvetX8GBAspFkjR7tJnHqpoYPDozaCBpkc+BKs141EqmSlONF4P/eISnqayUqCiqgOhjr4XD4Zt5wyOGvb4tdEQSM5iALGgN5f7m+5aDEfn0DUtIHkOtLnhecAVPyPAhKCeRun2852zcD6480SxOquEAZU/Ck1u+fIC5VylkluMa/YosrnE+auKFFkbKH9WVGpbwBRVFMp6fhQlIJmiJOQiV5JyUINT3tSvCyuIN/SmAx3Ar+mCYgWmiD1clJQE6IQUOuE5ydblMQKNPiC4zaVwyTP3CouQringWCYQGWINSNBh6rWj/4HhD8CpE+UgXkKOYJIumI9kBFT8TKfAN9oaw864kfQUgkpyctqI5YVyR4UsYoNWITC/2dkO8XKduBSFXC4+dKuLJzy02WxmRbslgnAHkAdQ95kaG96NhoWPf0J0CVgpEwrkN1dpbWEQotmOf5i0tFVQ9DKz+iTmqRo7z61UdXD7x8Q5MEk6PAlNq3DYWamvAF+VzP0R+Db1X+rT9w9VtG2dfo+MWYyv2+gCikWbGjYUvry/H5HCA6If4TIDKmGZoaV7sSgFSK+x1l0S+np6c/iTkKbcIi6FEMs8y5VB80qASWlFkGMabVLlkorDMJ1pvzf4LE1oRl0/5w019UxcJyOVVy/uAip0pB0hTcseqTYnHCbRyFqwOXjtQulS/fmPKBGj1vmtFPuPvGRz+YRI+Oydsh4VlL6A6icVsfbU6OK9xinnhGLXfRD0X8ChTRfuNxYNPgVTXSpyRPnyBxQkJc1pBHmpXwaooqG9phbirkzQl4iPJuEiVuHZpbkPYwnYLa98+g8LohKzeM+YNzpHGCvHbH+aCnPiZ0ji3MhE1jLxPNxWOYCT/KDhPa1CJMGDeM+REm9JBmwjozm4lqDy5MRr3TvXx0bnLDlEzC7bBSGVyEGOeSW2SEnmpUM1S7N5skW18X5sgVcS9F7Yv5MENTWDsEWXOL8FO5Uy0xwo4d1OQ4x2ZxMxT40fg256E3wt0uZ2DNTgCddh9Ru7nzx6mGVdsaiZUb1tFqQM7OZX2mL5zJ9trgjXLTHg5nsR9lhwJtapEMNm4Y8yOM6CHNhnVmPhP2/rQ0Ge6W5ufD9eYeSqbgdlmx2ssQU7nkFhmjpwL8uv/08KMk/Wl0JPm2S+Odxq3feUxY9UOPJHLHyywhGyClRJ+3XBBKYnQSmxvzbFCXBb4lageEb/6GWI35ToWge/LO/cA5B0tOkd15gRqjvN2WdFuUsClbYffWD3mh9tFhx6H7kKZbxv6j7sRb07+0GoSfeIYRXGHUdICdp5hpEv7Ks+joKc8O2Dej5lBpNzJSwz3va5nOFC2Zp0Xs/I3BVprUtbe6krtZ9hHITAkTyClL4DpZ6dv47/a/Uj85dEJorNjrpN8KZQxgcLY7U/3zkQEQfNBAfWnyW3CPFUMm6qroma8LYjrsQrN3/Ra0WqrMK4t3zz4H/wIgUlvB</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/Target.php" generated-path="oe-poetry-client.src.Messages.Components.Target.html" hash="f7adc9525141f5124cd81ae114eb9379" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="WithContactsTrait">\EC\Poetry\Messages\Traits\WithContactsTrait</namespace-alias>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Constraint">\EC\Poetry\Messages\Components\Constraints</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\AbstractComponent</extends>
      <name>Target</name>
      <full_name>\EC\Poetry\Messages\Components\Target</full_name>
      <docblock line="16">
        <description>Class Target</description>
        <long-description></long-description>
        <tag name="package" line="16" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent" refers="\EC\Poetry\Messages\Components\AbstractComponent" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$format</name>
        <full_name>\EC\Poetry\Messages\Components\Target::format</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$language</name>
        <full_name>\EC\Poetry\Messages\Components\Target::language</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$trackChanges</name>
        <full_name>\EC\Poetry\Messages\Components\Target::trackChanges</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="23" package="EC\Poetry\Messages\Components">
        <name>$action</name>
        <full_name>\EC\Poetry\Messages\Components\Target::action</full_name>
        <default></default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="24" package="EC\Poetry\Messages\Components">
        <name>$remark</name>
        <full_name>\EC\Poetry\Messages\Components\Target::remark</full_name>
        <default></default>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="25" package="EC\Poetry\Messages\Components">
        <name>$delay</name>
        <full_name>\EC\Poetry\Messages\Components\Target::delay</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>$delayFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::delayFormat</full_name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Components">
        <name>$acceptedDelay</name>
        <full_name>\EC\Poetry\Messages\Components\Target::acceptedDelay</full_name>
        <default></default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="28" package="EC\Poetry\Messages\Components">
        <name>$acceptedDelayFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::acceptedDelayFormat</full_name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="29" package="EC\Poetry\Messages\Components">
        <name>$translatedFile</name>
        <full_name>\EC\Poetry\Messages\Components\Target::translatedFile</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="30" package="EC\Poetry\Messages\Components">
        <name>$returnAddresses</name>
        <full_name>\EC\Poetry\Messages\Components\Target::returnAddresses</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$contacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::contacts</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getTemplate()</full_name>
        <docblock line="35">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getConstraints()</full_name>
        <docblock line="43">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="65" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getAttributes()</full_name>
        <docblock line="65">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" refers="\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_getAttributes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="80" package="EC\Poetry\Messages\Components">
        <name>getFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getFormat()</full_name>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="80" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="90" package="EC\Poetry\Messages\Components">
        <name>setFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setFormat()</full_name>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="90" description="" type="mixed" variable="$format">
            <type>mixed</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="100" package="EC\Poetry\Messages\Components">
        <name>getLanguage</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getLanguage()</full_name>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="100" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="110" package="EC\Poetry\Messages\Components">
        <name>setLanguage</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setLanguage()</full_name>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="mixed" variable="$language">
            <type>mixed</type>
          </tag>
          <tag name="return" line="110" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$language</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="120" package="EC\Poetry\Messages\Components">
        <name>getTrackChanges</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getTrackChanges()</full_name>
        <docblock line="120">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="129" package="EC\Poetry\Messages\Components">
        <name>setTrackChanges</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setTrackChanges()</full_name>
        <docblock line="129">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="129" description="" type="mixed" variable="$trackChanges">
            <type>mixed</type>
          </tag>
          <tag name="return" line="129" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$trackChanges</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="139" package="EC\Poetry\Messages\Components">
        <name>getAction</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getAction()</full_name>
        <docblock line="139">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="139" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="148" package="EC\Poetry\Messages\Components">
        <name>setAction</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setAction()</full_name>
        <docblock line="148">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="148" description="" type="mixed" variable="$action">
            <type>mixed</type>
          </tag>
          <tag name="return" line="148" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="158" package="EC\Poetry\Messages\Components">
        <name>getRemark</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getRemark()</full_name>
        <docblock line="158">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="158" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="167" package="EC\Poetry\Messages\Components">
        <name>setRemark</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setRemark()</full_name>
        <docblock line="167">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="167" description="" type="mixed" variable="$remark">
            <type>mixed</type>
          </tag>
          <tag name="return" line="167" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remark</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="177" package="EC\Poetry\Messages\Components">
        <name>getDelay</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getDelay()</full_name>
        <docblock line="177">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="177" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="186" package="EC\Poetry\Messages\Components">
        <name>setDelay</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setDelay()</full_name>
        <docblock line="186">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="186" description="" type="mixed" variable="$delay">
            <type>mixed</type>
          </tag>
          <tag name="return" line="186" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$delay</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="196" package="EC\Poetry\Messages\Components">
        <name>getDelayFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getDelayFormat()</full_name>
        <docblock line="196">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="196" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="205" package="EC\Poetry\Messages\Components">
        <name>setDelayFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setDelayFormat()</full_name>
        <docblock line="205">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="205" description="" type="mixed" variable="$delayFormat">
            <type>mixed</type>
          </tag>
          <tag name="return" line="205" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$delayFormat</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="215" package="EC\Poetry\Messages\Components">
        <name>getAcceptedDelay</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getAcceptedDelay()</full_name>
        <docblock line="215">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="215" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="224" package="EC\Poetry\Messages\Components">
        <name>setAcceptedDelay</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setAcceptedDelay()</full_name>
        <docblock line="224">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="224" description="" type="mixed" variable="$acceptedDelay">
            <type>mixed</type>
          </tag>
          <tag name="return" line="224" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acceptedDelay</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="234" package="EC\Poetry\Messages\Components">
        <name>getAcceptedDelayFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getAcceptedDelayFormat()</full_name>
        <docblock line="234">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="234" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="243" package="EC\Poetry\Messages\Components">
        <name>setAcceptedDelayFormat</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setAcceptedDelayFormat()</full_name>
        <docblock line="243">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="243" description="" type="mixed" variable="$acceptedDelayFormat">
            <type>mixed</type>
          </tag>
          <tag name="return" line="243" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acceptedDelayFormat</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="253" package="EC\Poetry\Messages\Components">
        <name>getTranslatedFile</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getTranslatedFile()</full_name>
        <docblock line="253">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="253" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="262" package="EC\Poetry\Messages\Components">
        <name>setTranslatedFile</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setTranslatedFile()</full_name>
        <docblock line="262">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="262" description="" type="mixed" variable="$translatedFile">
            <type>mixed</type>
          </tag>
          <tag name="return" line="262" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$translatedFile</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="272" package="EC\Poetry\Messages\Components">
        <name>getReturnAddresses</name>
        <full_name>\EC\Poetry\Messages\Components\Target::getReturnAddresses()</full_name>
        <docblock line="272">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="272" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\TargetReturnAddress&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\TargetReturnAddress&gt;</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="280" package="EC\Poetry\Messages\Components">
        <name>setReturnAddresses</name>
        <full_name>\EC\Poetry\Messages\Components\Target::setReturnAddresses()</full_name>
        <docblock line="280">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="280" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\TargetReturnAddress&gt;" variable="$returnAddresses">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\TargetReturnAddress&gt;</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddresses</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\TargetReturnAddress&gt;</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="288" package="EC\Poetry\Messages\Components">
        <name>addReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Components\Target::addReturnAddress()</full_name>
        <docblock line="288">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="288" description="" type="\EC\Poetry\Messages\Components\TargetReturnAddress" variable="$returnAddress">
            <type>\EC\Poetry\Messages\Components\TargetReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddress</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\TargetReturnAddress</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="299" package="EC\Poetry\Messages\Components">
        <name>withReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Components\Target::withReturnAddress()</full_name>
        <docblock line="299">
          <description>Factory method: create a new contact and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="299" description="Contact instance." type="\EC\Poetry\Messages\Components\TargetReturnAddress">
            <type>\EC\Poetry\Messages\Components\TargetReturnAddress</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="309" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\Target::parseXml()</full_name>
        <docblock line="309">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" refers="\EC\Poetry\Messages\Components\AbstractComponent::parseXml()" link="/classes/EC.Poetry.Messages.Components.AbstractComponent.html#method_parseXml"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="323" package="EC\Poetry\Messages\Components">
        <name>parseAttributionContact</name>
        <full_name>\EC\Poetry\Messages\Components\Target::parseAttributionContact()</full_name>
        <docblock line="323">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="323" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="338" package="EC\Poetry\Messages\Components">
        <name>parseAttributionsSend</name>
        <full_name>\EC\Poetry\Messages\Components\Target::parseAttributionsSend()</full_name>
        <docblock line="338">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="338" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="355" package="EC\Poetry\Messages\Components">
        <name>parseAttributions</name>
        <full_name>\EC\Poetry\Messages\Components\Target::parseAttributions()</full_name>
        <docblock line="355">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="355" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>addContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::addContact()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Contact instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Contact" variable="$contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contact</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="40" package="EC\Poetry\Messages\Traits">
        <name>getContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::getContacts()</full_name>
        <docblock line="40">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::setContacts()</full_name>
        <docblock line="53">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="$contacts">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contacts</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="66" package="EC\Poetry\Messages\Traits">
        <name>withContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::withContact()</full_name>
        <docblock line="66">
          <description>Factory method: create a new contact and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="Contact instance." type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\WithContactsTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="43" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="80" code="PPC:ERR-50008">No summary for method getFormat()</error>
      <error line="90" code="PPC:ERR-50008">No summary for method setFormat()</error>
      <error line="100" code="PPC:ERR-50008">No summary for method getLanguage()</error>
      <error line="110" code="PPC:ERR-50008">No summary for method setLanguage()</error>
      <error line="120" code="PPC:ERR-50008">No summary for method getTrackChanges()</error>
      <error line="129" code="PPC:ERR-50008">No summary for method setTrackChanges()</error>
      <error line="139" code="PPC:ERR-50008">No summary for method getAction()</error>
      <error line="148" code="PPC:ERR-50008">No summary for method setAction()</error>
      <error line="158" code="PPC:ERR-50008">No summary for method getRemark()</error>
      <error line="167" code="PPC:ERR-50008">No summary for method setRemark()</error>
      <error line="177" code="PPC:ERR-50008">No summary for method getDelay()</error>
      <error line="186" code="PPC:ERR-50008">No summary for method setDelay()</error>
      <error line="196" code="PPC:ERR-50008">No summary for method getDelayFormat()</error>
      <error line="205" code="PPC:ERR-50008">No summary for method setDelayFormat()</error>
      <error line="215" code="PPC:ERR-50008">No summary for method getAcceptedDelay()</error>
      <error line="224" code="PPC:ERR-50008">No summary for method setAcceptedDelay()</error>
      <error line="234" code="PPC:ERR-50008">No summary for method getAcceptedDelayFormat()</error>
      <error line="243" code="PPC:ERR-50008">No summary for method setAcceptedDelayFormat()</error>
      <error line="253" code="PPC:ERR-50008">No summary for method getTranslatedFile()</error>
      <error line="262" code="PPC:ERR-50008">No summary for method setTranslatedFile()</error>
      <error line="272" code="PPC:ERR-50008">No summary for method getReturnAddresses()</error>
      <error line="280" code="PPC:ERR-50008">No summary for method setReturnAddresses()</error>
      <error line="288" code="PPC:ERR-50008">No summary for method addReturnAddress()</error>
      <error line="309" code="PPC:ERR-50015">Argument $xml is missing from the Docblock of parseXml</error>
      <error line="323" code="PPC:ERR-50008">No summary for method parseAttributionContact()</error>
      <error line="338" code="PPC:ERR-50008">No summary for method parseAttributionsSend()</error>
      <error line="355" code="PPC:ERR-50008">No summary for method parseAttributions()</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $format</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $language</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $trackChanges</error>
      <error line="23" code="PPC:ERR-50007">No summary for property $action</error>
      <error line="24" code="PPC:ERR-50007">No summary for property $remark</error>
      <error line="25" code="PPC:ERR-50007">No summary for property $delay</error>
      <error line="26" code="PPC:ERR-50007">No summary for property $delayFormat</error>
      <error line="27" code="PPC:ERR-50007">No summary for property $acceptedDelay</error>
      <error line="28" code="PPC:ERR-50007">No summary for property $acceptedDelayFormat</error>
      <error line="29" code="PPC:ERR-50007">No summary for property $translatedFile</error>
      <error line="30" code="PPC:ERR-50007">No summary for property $returnAddresses</error>
    </parse_markers>
    <source>eJzNWVtP4zgUfu+vsEZISRFs32GHgS1FWmlACDq7s6JoZRJDInKT7QLViP8+via2c2vCdLV5am2f73zn8/ElJ79/KaJiMslgikgBAwQW89V1jijerC4RIfAJkdU8T4s8Qxklx5PJmjSOWWIYU7L6O6bRPM8oDCgRTceOwS3CL3HADK4hJgjL7ttN+phnm8rR6i+YxCGkOV5dwqKIs6fVPIGEXCIKWTN0URuosp8ZoYwC+w0gAdXffp+O6RlhTJnZZLa/PwH7QFABS4ifEGX/edMp0+6ZMejmxEbOJoFhDdAbRVnIXDxwhwEtx05+TAB7ONMGTUVfgeMXSBHYe8xxClmr1ZjA7GnN/DvN3MvzPGKdiDhdDD/OM6cRoxTiZ6cxRAncNLVdNDGBQYAKisLzBiurr9GaEc5Iwn6GF3HiRoMRXePsLAwxE5sHJLrFNPFnH/w4jbMI4ZiGefCuGmcSY/2QxAF4XGcibMBmY4nSgnvyp2KEnAH+SDfAC8qZPDqiYgI9Seh9uGNCIXX8G2nnW+kO9lL1y2VWdhyewDC8xnnBMnVjAnkyO7wDcFda8SdDryqxV1c5/YOly7M/PagNqaBW53mwTlnwcprMwffT4yGMdGoO5TTEje+Zmc48OcH8g8hV7k8HIcoForAUz3mUs+3Mt+Pw/ry6XdwsPVtO79v1+dly4baeL74urNb7YaycNWDTE3uaf8fFeEFsw/XA5xNA8RoNdBKo/Wco+oiFYa6IM0px/LCmiNTW5B4s+8BnJ4+85Gmeh5LOHo1icnjCwL6qtHPTXK8Qe3Q9y8VYK6tsi6XRVbNTuWNbnIlGK8XVFsYftetAjOHm38c4oQj7RtStCp8qwzR+Q2GfwjpMpa7rXHE1T5gGhwXEMJX+9GnkktGnZQcbUrJRGLUpN8mwSS8PvkbWv0SeKme6BbJP2z6J9OhxIpWcSpwWoXQ3l6oiuDux7AXQfIYqavVrSJ9mpsU43Sx6Fl6LfuYQrqFNenc66m2hU0HzttannRw7TjVFRmG0KCU7uUaa1u7UuRE30h51zGtrnzpy7Dh1FBmF0aKO7OTqaFq7U0dcpHvEMa7vfdqIoeOkkUwkQoswoo/rohjtWBbnrOsQ52LAeWcYfEAoffIZaF2iXZRnoMV3l3uS8aLWuzXVXvj6dyjDZOxGZTK0EVu3LWOM3L0s5v+RnFvlZeub8iBpP5KnTZyb0LcRu8rfxrh2ekcxygn9t5Ra7WGLe4phM/qmYpJ0MNtvK8YgdV+x6I9SddVdZZMB3ZjvoHf3/Ue49crae5Y7RZ7OaRjDt1ZI6j/27QBc+9aLgDVK3gh2G5zjoTMw9u5v2TphbRcUU9MNqy2oC3ZZzPEGpIhGeXgEAox4VQ+KEoOqOACYhTofYkpAnBEKswD9pkA+nq4aQTyqzlpz0yzYa0wjW7EBGvEgG+j40/pCRVnoNyONKbPgnKKAbQpVHAWvxX9PE3/vLU1qIYheLDYUXbiQxXvfLCHJUaKAxJC4jkxwCXjsyiHG6toOI6BU9xVIvwG5FZJsPdwYOmwTrC075/uFjttRWJanbX0b4rUxWoQ/PEEwiMoc9j9BI7AZrKF+Oqgclx7KyvXUcGAo9lp9Y1A5XD2HJ6Sc8XoKNI6+ioNn/knJrxwLI50WXp32TC14beo1Iy9SGCcjYIVdC+ZyU9hMOYzvUdbcYqFfims2qsxnFlffD6TI7fW63SSZXCO/NsUE5ugEa9oqP5Rmwyfum0Dvzx4R6IxtEfkac5sWuGtIyGuOw6GQ2q4tvfT5OwxVmbVypdFwnjRqgdOVj2GA0ur/sT761obMQaMqrReL+WHCjtQ7KL8mWKoJmKpuux2Q+ohRB9K7z3Yw5Zbkwtj10O3ArM8fdUidFAZYY0ZYe0qZEy6aepMfBMZt4jas7SeyAbNrap3aw3DGGqAP+yMRlD66InFfPQeFwk286tPf++QneuthXw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Components/TargetReturnAddress.php" generated-path="oe-poetry-client.src.Messages.Components.TargetReturnAddress.html" hash="29073e0c65fc6692ef1d4a30248d54cc" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Messages\Components" line="10" package="EC\Poetry\Messages\Components">
      <extends>\EC\Poetry\Messages\Components\ReturnAddress</extends>
      <name>TargetReturnAddress</name>
      <full_name>\EC\Poetry\Messages\Components\TargetReturnAddress</full_name>
      <docblock line="10">
        <description>Class TargetReturnAddress</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Messages\Components"/>
        <tag name="inherited_from" description="\EC\Poetry\Messages\Components\ReturnAddress" refers="\EC\Poetry\Messages\Components\ReturnAddress" link="/classes/EC.Poetry.Messages.Components.ReturnAddress.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
        <name>$type</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::type</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Components">
        <name>$action</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::action</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="18" package="EC\Poetry\Messages\Components">
        <name>$user</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::user</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="19" package="EC\Poetry\Messages\Components">
        <name>$password</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::password</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="20" package="EC\Poetry\Messages\Components">
        <name>$address</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::address</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="21" package="EC\Poetry\Messages\Components">
        <name>$path</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::path</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Components">
        <name>$remark</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::remark</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Components" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="16" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\TargetReturnAddress::getTemplate()</full_name>
        <docblock line="16">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\Components\ReturnAddress::getTemplate()" refers="\EC\Poetry\Messages\Components\ReturnAddress::getTemplate()" link="/classes/EC.Poetry.Messages.Components.ReturnAddress.html#method_getTemplate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Components">
        <name>getTemplate</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getTemplate()</full_name>
        <docblock line="27">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Components">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getConstraints()</full_name>
        <docblock line="35">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="26" package="EC\Poetry\Messages\Components">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::getAttributes()</full_name>
        <docblock line="26">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\ComponentInterface::getAttributes()" refers="\EC\Poetry\Messages\ComponentInterface::getAttributes()" link="/classes/EC.Poetry.Messages.ComponentInterface.html#method_getAttributes"/>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="72" package="EC\Poetry\Messages\Components">
        <name>getType</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getType()</full_name>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="72" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="81" package="EC\Poetry\Messages\Components">
        <name>setType</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setType()</full_name>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="mixed" variable="$type">
            <type>mixed</type>
          </tag>
          <tag name="return" line="81" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="91" package="EC\Poetry\Messages\Components">
        <name>getAction</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getAction()</full_name>
        <docblock line="91">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="100" package="EC\Poetry\Messages\Components">
        <name>setAction</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setAction()</full_name>
        <docblock line="100">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="100" description="" type="mixed" variable="$action">
            <type>mixed</type>
          </tag>
          <tag name="return" line="100" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="110" package="EC\Poetry\Messages\Components">
        <name>getUser</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getUser()</full_name>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="110" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="119" package="EC\Poetry\Messages\Components">
        <name>setUser</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setUser()</full_name>
        <docblock line="119">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="119" description="" type="mixed" variable="$user">
            <type>mixed</type>
          </tag>
          <tag name="return" line="119" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="129" package="EC\Poetry\Messages\Components">
        <name>getPassword</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getPassword()</full_name>
        <docblock line="129">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="129" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="138" package="EC\Poetry\Messages\Components">
        <name>setPassword</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setPassword()</full_name>
        <docblock line="138">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="138" description="" type="mixed" variable="$password">
            <type>mixed</type>
          </tag>
          <tag name="return" line="138" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="148" package="EC\Poetry\Messages\Components">
        <name>getAddress</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getAddress()</full_name>
        <docblock line="148">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="148" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="157" package="EC\Poetry\Messages\Components">
        <name>setAddress</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setAddress()</full_name>
        <docblock line="157">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="157" description="" type="mixed" variable="$address">
            <type>mixed</type>
          </tag>
          <tag name="return" line="157" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$address</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="167" package="EC\Poetry\Messages\Components">
        <name>getPath</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getPath()</full_name>
        <docblock line="167">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="167" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="176" package="EC\Poetry\Messages\Components">
        <name>setPath</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setPath()</full_name>
        <docblock line="176">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="176" description="" type="mixed" variable="$path">
            <type>mixed</type>
          </tag>
          <tag name="return" line="176" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="186" package="EC\Poetry\Messages\Components">
        <name>getRemark</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::getRemark()</full_name>
        <docblock line="186">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="186" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="195" package="EC\Poetry\Messages\Components">
        <name>setRemark</name>
        <full_name>\EC\Poetry\Messages\Components\ReturnAddress::setRemark()</full_name>
        <docblock line="195">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="195" description="" type="mixed" variable="$remark">
            <type>mixed</type>
          </tag>
          <tag name="return" line="195" description="" type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$remark</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\ReturnAddress</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="54" package="EC\Poetry\Messages\Components">
        <name>parseXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::parseXml()</full_name>
        <docblock line="54">
          <description>Parse a XML string into a set of properties.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="39" package="EC\Poetry\Messages\Components">
        <name>fromXml</name>
        <full_name>\EC\Poetry\Messages\Components\AbstractComponent::fromXml()</full_name>
        <docblock line="39">
          <description>Set a message or a component internal properties given its XML representation.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;XML string.&lt;/p&gt;" type="string" variable="$xml">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\MessageInterface|\EC\Poetry\Messages\ComponentInterface">
            <type>\EC\Poetry\Messages\MessageInterface</type>
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xml</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Components\AbstractComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Components\TargetReturnAddress">
            <type>\EC\Poetry\Messages\Components\TargetReturnAddress</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Components" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Components" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Components\TargetReturnAddress">
            <type>\EC\Poetry\Messages\Components\TargetReturnAddress</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ParserAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9Ts0KgkAQvs9TzM0SxLsGGdIxiPDoZVunknR32R2hEN+9dY2gQ32Xgfl+N1tzMwBK9OSMkIT7sj5qYvusD+ScuJKrS90brUixywHSOAaMseyEc1gJeyU+EQ9W7ZrGeocnZ77wYXfv/p/nlSnIX1FIDybVOPwuGAHQIwyZEeNYtOpGtuVGy+n9TMM1w7lrJV4GJbnVCn1FRb3pBNNqHRTjovewoQUj+ZmXZRxWJQuViGVBlAfPBBO8AC0gZw4=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/AbstractMessage.php" generated-path="oe-poetry-client.src.Messages.AbstractMessage.html" hash="4d73f0b43424b735e200f42dfe2f5d6d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Identifier">\EC\Poetry\Messages\Components\Identifier</namespace-alias>
    <namespace-alias name="ArrayAccessTrait">\EC\Poetry\Messages\Traits\ArrayAccessTrait</namespace-alias>
    <namespace-alias name="ClassMetadata">\Symfony\Component\Validator\Mapping\ClassMetadata</namespace-alias>
    <namespace-alias name="Assert">\Symfony\Component\Validator\Constraints</namespace-alias>
    <class final="false" abstract="true" namespace="EC\Poetry\Messages" line="15" package="EC\Poetry\Messages">
      <extends/>
      <implements>\EC\Poetry\Messages\MessageInterface</implements>
      <name>AbstractMessage</name>
      <full_name>\EC\Poetry\Messages\AbstractMessage</full_name>
      <docblock line="15">
        <description>Class AbstractMessage</description>
        <long-description></long-description>
        <tag name="package" line="15" description="EC\Poetry\Messages"/>
      </docblock>
      <constant namespace="EC\Poetry\Messages" line="19" package="EC\Poetry\Messages">
        <name>COMMUNICATION_SYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_SYNCHRONOUS</full_name>
        <value>'synchrone'</value>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Poetry\Messages" line="20" package="EC\Poetry\Messages">
        <name>COMMUNICATION_ASYNCHRONOUS</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::COMMUNICATION_ASYNCHRONOUS</full_name>
        <value>'asynchrone'</value>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages" line="25" package="EC\Poetry\Messages">
        <name>$identifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::identifier</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages" line="30" package="EC\Poetry\Messages">
        <name>$messageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::messageId</full_name>
        <default></default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="37" package="EC\Poetry\Messages">
        <name>__construct</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::__construct()</full_name>
        <docblock line="37">
          <description>AbstractMessage constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Messages" line="45" package="EC\Poetry\Messages">
        <name>getConstraints</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getConstraints()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$metadata</name>
          <default></default>
          <type>\Symfony\Component\Validator\Mapping\ClassMetadata</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="59" package="EC\Poetry\Messages">
        <name>getAttributes</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getAttributes()</full_name>
        <docblock line="59">
          <description>Get rendered attributes.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="Array of attributes." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="69" package="EC\Poetry\Messages">
        <name>getCommunication</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getCommunication()</full_name>
        <docblock line="69">
          <description>Get communication type for current message object.</description>
          <long-description></long-description>
          <tag name="return" line="69" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="77" package="EC\Poetry\Messages">
        <name>getIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getIdentifier()</full_name>
        <docblock line="77">
          <description>Get Identifier property.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getIdentifier()" refers="\EC\Poetry\Messages\MessageInterface::getIdentifier()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getIdentifier"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="90" package="EC\Poetry\Messages">
        <name>setIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setIdentifier()</full_name>
        <docblock line="90">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Identifier" variable="$identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
          <tag name="return" line="90" description="" type="\EC\Poetry\Messages\AbstractMessage">
            <type>\EC\Poetry\Messages\AbstractMessage</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$identifier</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Identifier</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="102" package="EC\Poetry\Messages">
        <name>withIdentifier</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::withIdentifier()</full_name>
        <docblock line="102">
          <description>Set Identifier property.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="\EC\Poetry\Messages\Components\Identifier">
            <type>\EC\Poetry\Messages\Components\Identifier</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="112" package="EC\Poetry\Messages">
        <name>getMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::getMessageId()</full_name>
        <docblock line="112">
          <description>Get message ID.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\EC\Poetry\Messages\MessageInterface::getMessageId()" refers="\EC\Poetry\Messages\MessageInterface::getMessageId()" link="/classes/EC.Poetry.Messages.MessageInterface.html#method_getMessageId"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="124" package="EC\Poetry\Messages">
        <name>setMessageId</name>
        <full_name>\EC\Poetry\Messages\AbstractMessage::setMessageId()</full_name>
        <docblock line="124">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$messageId">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$messageId</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\AbstractMessage">
            <type>\EC\Poetry\Messages\AbstractMessage</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\EC\Poetry\Messages\Traits\ArrayAccessTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="45" code="PPC:ERR-50015">Argument $metadata is missing from the Docblock of getConstraints</error>
      <error line="112" code="PPC:ERR-50008">No summary for method getMessageId()</error>
      <error line="124" code="PPC:ERR-50008">No summary for method setMessageId()</error>
      <error line="25" code="PPC:ERR-50007">No summary for property $identifier</error>
      <error line="30" code="PPC:ERR-50007">No summary for property $messageId</error>
    </parse_markers>
    <source>eJy1VV1P2zAUfc+vuA9IbRGMd9gYWbSPPrRFK0yaCEKu41CPxI5sBxSh/vddp2nrNnFhoFmq2tr345xz77U/fi7mRRAIkjNdEMrgaxRfSmZUFY+Y1uSe6bMgKHXXQRzJvJCCCaPjYYJfPOVMnfmsrxThaBkqRaqQUtyud5b20ypPpag2IeNfJOMJMVLFI1IUXNzHUUa0HjFDcJu87BZJoQ1mQHhANIRaM4XZgpPDwwAOoY4G4czaUNOgxAN7doFSPODfDhp4fBKQxgtoVxDgeZGx3OoCzdZQGKZS1Dd4DgCXxd4Woj6iFjZEk9HoejyMwqvhZHw3/T2OfvycjCfXU/gEPV0JOlfIt3fmdQl3fIjrVHvVOtiFfB+Jgvi1FW68TurvQvFHYhgccKcDOuOjRljFbue8kSlp++6KW5NVJcUSf2hs1mkKokj+eiIu6G1c5SzjFNJSUMOlgLu7ddZ+t/ug9lsW164DM+f6+HxjgDXYksgaLVpkny+4mDPFTSLpoguSNsS4yO6Zcfq8vzUiVtblrxa61cHxOUmS78xgd7phehukvSO4WfvZJdhTM0vxWJovGREP/cGRz6QeR/f8duDjjjBAMZEwxRIgBrtlVhqmW0VWzJRKALHjs9qE5TSBTDs8u2uKyoVr0/6uQk2Sm9t9aKnM81JwSuqApioYpFIBLRXyMNA0NcjZH0aNj0fXWLShRm4qH1rNsvT01Ht1vLnpXCCb9vehaLW+L+8UJXSmqVCywJap/sNU4+eyiQ6PJCuZrxg19r0S6C0J3nMDdOr2Xq2aWG+8y3e4PnEz31PvLoZ29F0XD83XtMe/DcjqoU1aMHkKfZYXpuo3qdePzWDgmLUh7nR7vfFNqhxvGJZsk1wFWPjoOg+ch+2yy5dknQfxpWbc8N74eAq1Pred2AK0CP4C0c0Dvw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/ParserAwareTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.ParserAwareTrait.html" hash="1b90e08f4983aceaf4a05bfe3da892db" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>ParserAwareTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait</full_name>
      <docblock line="12">
        <description>Trait ParserAwareTrait.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$parser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::parser</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Services\Parser" variable="">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="22" package="EC\Poetry\Messages\Traits">
        <name>$raw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::raw</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="27" package="EC\Poetry\Messages\Traits">
        <name>getRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getRaw()</full_name>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="35" package="EC\Poetry\Messages\Traits">
        <name>setRaw</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setRaw()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="string" variable="$raw">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$raw</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="43" package="EC\Poetry\Messages\Traits">
        <name>getParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::getParser()</full_name>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="43" description="" type="\EC\Poetry\Services\Parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="53" package="EC\Poetry\Messages\Traits">
        <name>setParser</name>
        <full_name>\EC\Poetry\Messages\Traits\ParserAwareTrait::setParser()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="53" description="" type="\EC\Poetry\Services\Parser" variable="$parser">
            <type>\EC\Poetry\Services\Parser</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Traits\ParserAwareTrait">
            <type>\EC\Poetry\Messages\Traits\ParserAwareTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parser</name>
          <default></default>
          <type>\EC\Poetry\Services\Parser</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="27" code="PPC:ERR-50008">No summary for method getRaw()</error>
      <error line="35" code="PPC:ERR-50008">No summary for method setRaw()</error>
      <error line="43" code="PPC:ERR-50008">No summary for method getParser()</error>
      <error line="53" code="PPC:ERR-50008">No summary for method setParser()</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $parser</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $raw</error>
    </parse_markers>
    <source>eJyNUslOwzAQvfsrfOgBIkE+gF2ox0oVcMxlsIbUonWssZMIof473iJoapfOJdK8mbeMc/ugN5oxBTs0GgTy5XOz7tDSV7NCY6BF07wRSGtuGOvNX/wVaZDC4Wsgg+TwuqoYr3iY57H7NAJhaFw7yKOPTubT8ZaV3FTNbJaEfTPuKgj5cnQDEG+KrtJYHb6a5AAW+UJPjnNkxpJUbX6RYMxsEdqeVHaxf99KwT96JazsFG/RvsB4cRnAmMVXIljYjTRX90HEt/fHUs457JJSsHNSzkQ5PzeX/NXidylXQTKZO/fGx4njVCm02HYKJzvTw5xMX3YyvWxamEcIIv8dLLk9JCxcL4L+gAd/1PxJpzx79gOSS/pg</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithReferenceDocumentsTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithReferenceDocumentsTrait.html" hash="6d96fc3a272843e1fdd0a9f71e682aaa" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ReferenceDocument">\EC\Poetry\Messages\Components\ReferenceDocument</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>WithReferenceDocumentsTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</full_name>
      <docblock line="12">
        <description>Contains setter, getter and factory methods for "Reference Document" component.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$referenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::referenceDocuments</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="27" package="EC\Poetry\Messages\Traits">
        <name>addReferenceDocument</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::addReferenceDocument()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Contact instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\ReferenceDocument" variable="$referenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait">
            <type>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$referenceDocument</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="40" package="EC\Poetry\Messages\Traits">
        <name>getReferenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::getReferenceDocuments()</full_name>
        <docblock line="40">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="53" package="EC\Poetry\Messages\Traits">
        <name>setReferenceDocuments</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::setReferenceDocuments()</full_name>
        <docblock line="53">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;" variable="$referenceDocuments">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait">
            <type>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$referenceDocuments</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\ReferenceDocument&gt;</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="66" package="EC\Poetry\Messages\Traits">
        <name>withReferenceDocument</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReferenceDocumentsTrait::withReferenceDocument()</full_name>
        <docblock line="66">
          <description>Factory method: create a new ReferenceDocument and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="Target instance." type="\EC\Poetry\Messages\Components\ReferenceDocument">
            <type>\EC\Poetry\Messages\Components\ReferenceDocument</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $referenceDocuments</error>
    </parse_markers>
    <source>eJydVMtOwzAQvPsrVohDWwG980blcUJCgMSh6WFxtm1EY0frTVGF+Hcc01YUu0BYqUrk2rMzk1kfn1XTSimDJbkKNcHVILuzJLzIbsk5nJDLHhkLcUdK1S75/8CWlTVkxGX3NCYmo+nS6rr0S/5Uv9dT0IOBNYKFceBIhHgPJuEJaHIYoxbLCyhJpjZ3MLYMO2ssWIHtgF61OvCQDeq5J/3iWWzn7Xf1lTSv8FTINGLowjb1psBX4NqUR54jQ9ZS7nC0PN4Pz4qLOQrBLkdd4QSGI+/Ot64Xeb4hMqyuKVXIWELUNYG/OhIqWK8FvPuCflOEyyQ1G9iVaeE2BdTPs0LDuDZaCmsA8zzq3vkLn26A+zS5qdBq/zT2ZTjyzsTnl0419ZXsUVh9j2y8CdnapvPfX9X/7thWxLKAOc7qtZNpt3zC47h1vlvxVU/KkW0aH9IaPzPSXmIqpL/Jbh8gl7QEmXGRIvDn2CRD41qm5nrjGjoEzdRML4Kh18TUNTfXEtbfM79OV9tPsjHCj8g+TVGPtMmvqXsuyt3PI5iU3OnGjpLJO1uhuiur39UHjc8C9g==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithTargetsTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithTargetsTrait.html" hash="ab23e5a8b7ec718d757e16f2efcfbb07" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Target">\EC\Poetry\Messages\Components\Target</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>WithTargetsTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait</full_name>
      <docblock line="12">
        <description>Contains setter, getter and factory methods for "Target" component.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$targets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::targets</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="27" package="EC\Poetry\Messages\Traits">
        <name>addTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::addTarget()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Component object.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Target" variable="$target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Traits\WithTargetsTrait">
            <type>\EC\Poetry\Messages\Traits\WithTargetsTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Target</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="39" package="EC\Poetry\Messages\Traits">
        <name>getTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::getTargets()</full_name>
        <docblock line="39">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="52" package="EC\Poetry\Messages\Traits">
        <name>setTargets</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::setTargets()</full_name>
        <docblock line="52">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;" variable="$targets">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
          </tag>
          <tag name="return" line="52" description="" type="\EC\Poetry\Messages\Traits\WithTargetsTrait">
            <type>\EC\Poetry\Messages\Traits\WithTargetsTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targets</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Target&gt;</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="65" package="EC\Poetry\Messages\Traits">
        <name>withTarget</name>
        <full_name>\EC\Poetry\Messages\Traits\WithTargetsTrait::withTarget()</full_name>
        <docblock line="65">
          <description>Factory method: create a new Target and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="65" description="Target instance." type="\EC\Poetry\Messages\Components\Target">
            <type>\EC\Poetry\Messages\Components\Target</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $targets</error>
    </parse_markers>
    <source>eJyVk0tvwjAMx+/5FNa0Q0Eb3MeeQttOk5A2aQfgYFpDu0FSJS6omvjuS9MHtLwtVakS52//7Pj+KQ5jISQuyMToE7z2RwNFrNPRBxmDMzKjL40Rm54Qidl73leLWEmSbF1Rz4ita7fdFtCGvpKMkTRgiJn0DczcCigDmKLPSqewIA5VYGCqNFzlAlfgl5odK5MpPdvsfm24wwlar67g7Be+Iw5zJePOxJ8Aay6pzKzcEjWMzoEZjos7XbfGOloiE1xzrg8PMBxb4Ib+SxDUGNxuFTxGjQvI9Uul8tBZlQWoyQ/5uwqaONHS3g0jU88vmcwjH6aJ9DlSEjAI8jhePVzLeed1ycwp3T4WVMOx5So8C7jMtqP23O66Cf7uGnwo38sqbr+BVjFpTmGJ84Q6R1Ht1aLpXpNuO/EKsiRoInzuR8ibdiZB9T5OoVzeUbPBRK0xrUIdb+mmoeZER5v1eKsN6h34mrIJQJC0Kh9xNtCFlh1FsCPPKP2DlGdVsTYRRZym8P4Srar533kJe975BsNr7ZaGZODVL7XKQq3FP9Tvi+k=</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithDetailsTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithDetailsTrait.html" hash="706063cc08fc3e1b7aaa0d646bab7705" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Details">\EC\Poetry\Messages\Components\Details</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>WithDetailsTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait</full_name>
      <docblock line="12">
        <description>Contains setter, getter and factory methods for "Details" component.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$details</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::details</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\Details" variable="">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="25" package="EC\Poetry\Messages\Traits">
        <name>getDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::getDetails()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="38" package="EC\Poetry\Messages\Traits">
        <name>setDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::setDetails()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Details" variable="$details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Traits\WithDetailsTrait">
            <type>\EC\Poetry\Messages\Traits\WithDetailsTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$details</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Details</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="51" package="EC\Poetry\Messages\Traits">
        <name>withDetails</name>
        <full_name>\EC\Poetry\Messages\Traits\WithDetailsTrait::withDetails()</full_name>
        <docblock line="51">
          <description>Factory method: create new details and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Details instance." type="\EC\Poetry\Messages\Components\Details">
            <type>\EC\Poetry\Messages\Components\Details</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $details</error>
    </parse_markers>
    <source>eJyVk01rwzAMhu/+FaL0sIWtve8buo/ToLDBLrl4jtqEJbaxlZYy+t9ne05K3XZrBcFJbL3S80a5udelZkzyBq3mAuFpkk8Vklnlr2gtn6PN3w2vyF4z1tq9+xPVaCVRks0fkXhV+7PjLGOQwURJ90ZasEiE5gLmYQUuC5hxQcqsoEEqVWFhpgwMosIARKc6cjpe6sH19+UKHm7RnRoz8rfwUVEZpcIe+2bgInTlw8ktuIH8KJyYMg6rNopQEBYwLHraRPslQI7iY1/RILVGnlbUXVOjNBpawYLXLY62u2k/60rArJWCKiW9vTH/7Dwc+OX2EasPqazs5V3fu99a7xC87SfQ3PDmSIDen/9IUn9Ch39S2g1lWiyl3saF2/Srpc4cMuR5a1ivQBjkhCBxCZ22n+ko5YYR3NQTl+Ig5qlj4KKDTaX3u7Tc/APHDYNzx/P0OZ0Xa/YDDklBVw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithStatusTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithStatusTrait.html" hash="6636c589271efaf74df02937550d47ad" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Status">\EC\Poetry\Messages\Components\Status</namespace-alias>
    <namespace-alias name="Poetry">\EC\Poetry\Poetry</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="13" package="EC\Poetry\Messages\Traits">
      <name>WithStatusTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait</full_name>
      <docblock line="13">
        <description>Contains setter, getter and factory methods for "Status" component.</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="18" package="EC\Poetry\Messages\Traits">
        <name>$statuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::statuses</full_name>
        <default>array()</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="26" package="EC\Poetry\Messages\Traits">
        <name>getStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getStatuses()</full_name>
        <docblock line="26">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="26" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="39" package="EC\Poetry\Messages\Traits">
        <name>setStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::setStatuses()</full_name>
        <docblock line="39">
          <description>Set components.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="&lt;p&gt;List of component instances.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;" variable="$statuses">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
          </tag>
          <tag name="return" line="39" description="" type="\EC\Poetry\Messages\Traits\WithStatusTrait">
            <type>\EC\Poetry\Messages\Traits\WithStatusTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Status&gt;</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="54" package="EC\Poetry\Messages\Traits">
        <name>addStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::addStatus()</full_name>
        <docblock line="54">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;Component instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Status" variable="$status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
          <tag name="return" line="54" description="" type="\EC\Poetry\Messages\Traits\WithStatusTrait">
            <type>\EC\Poetry\Messages\Traits\WithStatusTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Status</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="67" package="EC\Poetry\Messages\Traits">
        <name>withStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::withStatus()</full_name>
        <docblock line="67">
          <description>Factory method: create a new Status and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="67" description="Status instance." type="\EC\Poetry\Messages\Components\Status">
            <type>\EC\Poetry\Messages\Components\Status</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="80" package="EC\Poetry\Messages\Traits">
        <name>isSuccessful</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::isSuccessful()</full_name>
        <docblock line="80">
          <description>Check if all statuses are successful.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="True if there are no errors neither warnings, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="91" package="EC\Poetry\Messages\Traits">
        <name>hasErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasErrors()</full_name>
        <docblock line="91">
          <description>Check some statuses have errors.</description>
          <long-description></long-description>
          <tag name="return" line="91" description="True if some status has errors, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="102" package="EC\Poetry\Messages\Traits">
        <name>hasWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasWarnings()</full_name>
        <docblock line="102">
          <description>Check some statuses have warnings.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="True if some status has warnings, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="113" package="EC\Poetry\Messages\Traits">
        <name>getErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getErrors()</full_name>
        <docblock line="113">
          <description>Get statuses with errors.</description>
          <long-description></long-description>
          <tag name="return" line="113" description="Statuses with errors." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="128" package="EC\Poetry\Messages\Traits">
        <name>countErrors</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::countErrors()</full_name>
        <docblock line="128">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="128" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="139" package="EC\Poetry\Messages\Traits">
        <name>getWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getWarnings()</full_name>
        <docblock line="139">
          <description>Get statuses with warnings.</description>
          <long-description></long-description>
          <tag name="return" line="139" description="Statuses with warnings." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="154" package="EC\Poetry\Messages\Traits">
        <name>countWarnings</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::countWarnings()</full_name>
        <docblock line="154">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="154" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="162" package="EC\Poetry\Messages\Traits">
        <name>hasRequestStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasRequestStatus()</full_name>
        <docblock line="162">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="162" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="170" package="EC\Poetry\Messages\Traits">
        <name>getRequestStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getRequestStatus()</full_name>
        <docblock line="170">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="\EC\Poetry\Messages\Components\Status|null">
            <type>\EC\Poetry\Messages\Components\Status</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="184" package="EC\Poetry\Messages\Traits">
        <name>hasDemandStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasDemandStatus()</full_name>
        <docblock line="184">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="184" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="192" package="EC\Poetry\Messages\Traits">
        <name>getDemandStatus</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getDemandStatus()</full_name>
        <docblock line="192">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="192" description="" type="\EC\Poetry\Messages\Components\Status|null">
            <type>\EC\Poetry\Messages\Components\Status</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="206" package="EC\Poetry\Messages\Traits">
        <name>hasAttributionStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::hasAttributionStatuses()</full_name>
        <docblock line="206">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="206" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="214" package="EC\Poetry\Messages\Traits">
        <name>getAttributionStatuses</name>
        <full_name>\EC\Poetry\Messages\Traits\WithStatusTrait::getAttributionStatuses()</full_name>
        <docblock line="214">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="214" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="128" code="PPC:ERR-50008">No summary for method countErrors()</error>
      <error line="154" code="PPC:ERR-50008">No summary for method countWarnings()</error>
      <error line="162" code="PPC:ERR-50008">No summary for method hasRequestStatus()</error>
      <error line="170" code="PPC:ERR-50008">No summary for method getRequestStatus()</error>
      <error line="184" code="PPC:ERR-50008">No summary for method hasDemandStatus()</error>
      <error line="192" code="PPC:ERR-50008">No summary for method getDemandStatus()</error>
      <error line="206" code="PPC:ERR-50008">No summary for method hasAttributionStatuses()</error>
      <error line="214" code="PPC:ERR-50008">No summary for method getAttributionStatuses()</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $statuses</error>
    </parse_markers>
    <source>eJzNV1tP2zAUfs+vOEMVpIjBnsdlQx3byyahFYkHyoNJTolFame206ra+O+zc6lzqZu0jG2WqrSNfc53OT5Ozj4kUeJ5jMxQJiRAuBpNrjkqsZx8QynJI8rJjSBUyVPPS+Xa+yM+SzhDpuRkrIhK9dT6zPyiA5wcHnpwCCPOFKFMgkSlUBzBY3YFwkKYkkBxsYQZqoiHEqZcwF4edg+CMtOxDmMifdSYnzQIN2w968RT5ivcUhXlkbJb3k8P9MgwmaGjzYmASR+Gd/fFmpPsmgg6JwphILO7KOEc7u414UaCLxnP4+LnKq1AlQq2ZWb9uRY8QaGWMCdxisd1SOlDTAOYpixQlDMj8bgA5w+zGTl9M4r8AxVR+fai5HCa3X9ukRijskbIFpmECDLry8UqZlnp8ZVKBXxq04CuFkVYgO18VfAbFZAVBYgQZGmTNwVpKKHdHFhV1srmEusyDGtVu7NWJQKr06glzu7akDDM0/j1bB3CaANX0mwpzOfaPn8PgUCzgwgwXEABwvSDIpbeyZ00e+lYq7MiTzPweo0Wq/bR2kDrZLE8/GFbG2Sh31g1dEkFowiDJ6BTIHEMq6IkAkGmgd4TcprGLlEeOI+RsArtG5GiCaYi1BFMFMYBheBCatDU/A0LIhhlj/JI9+NY93Ju/l1Q2SERleMVIFeXeVPQjoi8LbL4Q9jfr964ytD4XYpIPkOrR0TmWPDYXoxKKB1IFnG2pF9BvrHD6l5czoM35/lRsS3R0qGXU93R65p/XXQrTncQ1kekZWq2XIelWSevsBxvWOs8GR2uDYpdYQGboZ9IkAQR+JaePVmB2N5ZiWSGlt6nTOmz2i9mZGtHPER/OIQzeNdcUcFQ77TVCc+e/dYyIF/sErvUUKPaqFDAU+bSqAiRTfHb9e3ewm2ju0p6s9XN1U6znVU7KEP8HcMvHIaXKHa0vFz+R0zv2uFN2+18p/HVBtXVYL7jjxSlcpy6rS7TmJ61GpbGcReUXg8Ov0ykrtraDPglhVStoJtloisINLsDkSc8WFdJpT7bllAfyfq49wln+gmur3n12f/Au41wX8G6MMuH/6V1l0oJ+pCan11vjc0WsHZp1u26gFX7u9OlPsiar+GvaCKxcNYauYKyYzdvvow/e78BK08M/Q==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/ArrayAccessTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.ArrayAccessTrait.html" hash="59245c7d27df98428c691d0b60f87292" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <trait namespace="EC\Poetry\Messages\Traits" line="10" package="spec\EC\Poetry\Messages\Traits">
      <name>ArrayAccessTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait</full_name>
      <docblock line="10">
        <description>Trait ArrayAccessTrait.</description>
        <long-description></long-description>
        <tag name="package" line="10" description="spec\EC\Poetry\Messages\Traits"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="15" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetExists()</full_name>
        <docblock line="15">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="23" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetGet()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="31" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetSet()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="45" package="spec\EC\Poetry\Messages\Traits">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::offsetUnset()</full_name>
        <docblock line="45">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="56" package="spec\EC\Poetry\Messages\Traits">
        <name>withArray</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::withArray()</full_name>
        <docblock line="56">
          <description>Construct message or component with an array.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="array" variable="$properties">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="\EC\Poetry\Messages\Traits\ArrayAccessTrait">
            <type>\EC\Poetry\Messages\Traits\ArrayAccessTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="71" package="spec\EC\Poetry\Messages\Traits">
        <name>toCamelCase</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::toCamelCase()</full_name>
        <docblock line="71">
          <description>Convert snake_case to CamelCase.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="71" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="82" package="spec\EC\Poetry\Messages\Traits">
        <name>hasWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasWithMethod()</full_name>
        <docblock line="82">
          <description>Check whereas given property has a 'with*' factory method.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="82" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="93" package="spec\EC\Poetry\Messages\Traits">
        <name>hasSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasSetMethod()</full_name>
        <docblock line="93">
          <description>Check whereas given property has a 'set*' method.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="104" package="spec\EC\Poetry\Messages\Traits">
        <name>hasGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::hasGetMethod()</full_name>
        <docblock line="104">
          <description>Check whereas given property has a 'get*' method.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="104" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="115" package="spec\EC\Poetry\Messages\Traits">
        <name>getGetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getGetMethod()</full_name>
        <docblock line="115">
          <description>Get a get*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="126" package="spec\EC\Poetry\Messages\Traits">
        <name>getSetMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getSetMethod()</full_name>
        <docblock line="126">
          <description>Get a set*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="137" package="spec\EC\Poetry\Messages\Traits">
        <name>getWithMethod</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::getWithMethod()</full_name>
        <docblock line="137">
          <description>Get a with*' method given a camel case property.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="149" package="spec\EC\Poetry\Messages\Traits">
        <name>isProperty</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isProperty()</full_name>
        <docblock line="149">
          <description>Check whereas given name / value pair is a simple component property.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="149" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="149" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="161" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponent</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponent()</full_name>
        <docblock line="161">
          <description>Check whereas given name / value pair is a component.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="173" package="spec\EC\Poetry\Messages\Traits">
        <name>isComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::isComponentCollection()</full_name>
        <docblock line="173">
          <description>Check whereas given name / value pair is a collection of components.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="173" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="184" package="spec\EC\Poetry\Messages\Traits">
        <name>setComponentCollection</name>
        <full_name>\EC\Poetry\Messages\Traits\ArrayAccessTrait::setComponentCollection()</full_name>
        <docblock line="184">
          <description>Helper method: set child components.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="string" variable="$parent">
            <type>string</type>
          </tag>
          <tag name="param" line="184" description="" type="array" variable="$components">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$components</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetExists</error>
      <error line="23" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetGet</error>
      <error line="31" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetSet</error>
      <error line="31" code="PPC:ERR-50015">Argument $value is missing from the Docblock of offsetSet</error>
      <error line="45" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetUnset</error>
    </parse_markers>
    <source>eJzNl91v2jAQwN/zV9wkVCii5X1dv4Sq7qVSpW7aw5iQaw5iEeLINm1Rxf++s+OQEAiklK7LSxTfh88/+y7nb5dJmARBzKaoE8YRbnr9e4lGzft3qDUbo+7/UEwYfRYE3XY7gDa4b7hWis2vOSctN3BKIiu9IjcTsgOdIO9XuiPVbmA2egpeA6DHzWafNrxeiThEJcxQ8oUf7Lp3MnuMBIfRLOZGyBjkaKTR3LwIbXSrkX4dO83UqX0UmpmKIVEyQWXmA/TaJhS6A5nRmdNfBO+N5RbNjkDcxCcXIdOke4cmlMOlBVxm4lf/HjuXJbVF6xi+QrN5qKAf8qCJyBOLZlgOXoyg5UMSuieniYwxNj0ZReg8rdkfF4zt441JpY712dJ2ARhp3Dx93UkLMH8JE67TPLl4pnF3Mlt1Irj3h2mPAB427Ob6lAfa2J+xrj6Ps1SYRZgqLSozoSdjbdSMG5imuQ1SAc+2AixAYDEwC/HUG2W2VCUUm6YyaPhUFKiX8mJubF1Xvk9rzsrrG0mFjIe0bbkOMA0NW/7g/CLbs01b9tsp/YFzr1Tcmo0JvYXaE00NOmYTHHCmEYyEHjmPevRRAYpAi3gMjfRdprQy6jEpaSiVcJiTMnI5S8s7qqhIMz4SSpsWKQ0UJhH9GFpNaHaownRI+CzVUK8KB1ZoNTLH9FQSCJFP4JmOLRL8sXjCvBgDVUFg0LS72m7CiHEj1ZwOmE2QHWxSpTKbRymjXWRo0mIZSB1VsEmFpZ+Gi7d56lNnBbR39i4alIYE4+MhFErRHgwoyo9DMP5HCG7fhWC8LwKallZZXKTnwIBbL+AKRQZlLwD1isRqe7EVwc7Vbl+s/i8WW/fI7zzd2xfr69lnr7Z2ldtd0N6SzO7/2gX344SECQXCJrUW0yTCQstQE4J1VxJNxQst1f+b90n9Ygtn/Ve1vd6l0APNWcRU1qrB0VGhkS+cKuvsELCWlD4FTqHDrkeHFVtnC+cLDQqyn+ByuASteDgPRy27UVADnDPUnwuxeM/ZE+fhaH7HiM69L01fbVkGHopoWJ8WfZHW5tY+d7KLT9VFMPXeWXdY3d7nOq69X36+7TaYTrx2G8y9rV/PFsFfO+YeRg==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithSourceLanguagesTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithSourceLanguagesTrait.html" hash="5605c75dc9627605a33c8f1c57efe357" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="SourceLanguage">\EC\Poetry\Messages\Components\SourceLanguage</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>WithSourceLanguagesTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</full_name>
      <docblock line="12">
        <description>Contains setter, getter and factory methods for "SourceLanguage" component.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$sourceLanguages</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::sourceLanguages</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="27" package="EC\Poetry\Messages\Traits">
        <name>addSourceLanguage</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::addSourceLanguage()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Component object.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\SourceLanguage" variable="$sourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait">
            <type>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sourceLanguage</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="39" package="EC\Poetry\Messages\Traits">
        <name>getSourceLanguages</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::getSourceLanguages()</full_name>
        <docblock line="39">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="51" package="EC\Poetry\Messages\Traits">
        <name>setSourceLanguages</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::setSourceLanguages()</full_name>
        <docblock line="51">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;" variable="$sourceLanguages">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
          </tag>
          <tag name="return" line="51" description="" type="\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait">
            <type>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sourceLanguages</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\SourceLanguage&gt;</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="64" package="EC\Poetry\Messages\Traits">
        <name>withSourceLanguage</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceLanguagesTrait::withSourceLanguage()</full_name>
        <docblock line="64">
          <description>Factory method: create a new SourceLanguage and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="64" description="SourceLanguage instance." type="\EC\Poetry\Messages\Components\SourceLanguage">
            <type>\EC\Poetry\Messages\Components\SourceLanguage</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $sourceLanguages</error>
    </parse_markers>
    <source>eJyVVMtuwjAQvPsrVohDQG25lz6F2l5aqRKVeiAcFmchaYsd2Q4IVfx7HfMQtgkqe0nkx8zs7K5v7su8ZEzgnHSJnOBpkL5LMmqVvpHWOCOdfigsjO4zVumj+wM5L6UgYXQ6lJXi9IpiVtkte6XX7TLowkAKg4XQoMkYUhcwc19AkcEUuZFqBXMyucw0TKWClg/UAr7juLJwNeKDVfttt5oF21M9Zupf+CxM7iNqd4b9MrDhRNZhYReoID0nydF4e7fnvqUqFmgI2trng1sYja0hAd9jlnm5udW9mBIVzsHnC5F3h13sVYKcfBGPERWZSglom7zQvu5q8lNwmFaCm0IKwCzzeZPTMjoOZeNnHY7h8i5wYTS2PgQ3t6bUcaiu71bXkWMvrnOaEjtdmyBH24RBVyRhGoeKomyaJA6PS9xU88zmihqpIfHGFj9lgI4NQKVwFZH+r7pxbfWZxX323oJr4IrqYUIQtAznoH47tph22sG+LgYFp6bOOMt3b6gC3pDouLXLqB5Rb50YkTjdpBNbSSJLjoN0dgav2R95GdKK</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithContactsTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithContactsTrait.html" hash="84539e74781f3d747f9e068a857b1dfd" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Contact">\EC\Poetry\Messages\Components\Contact</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>WithContactsTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait</full_name>
      <docblock line="12">
        <description>Contains setter, getter and factory methods for "Contact" component.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$contacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::contacts</full_name>
        <default>array()</default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="27" package="EC\Poetry\Messages\Traits">
        <name>addContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::addContact()</full_name>
        <docblock line="27">
          <description>Add component.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Contact instance.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Contact" variable="$contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
          <tag name="return" line="27" description="" type="\EC\Poetry\Messages\Traits\WithContactsTrait">
            <type>\EC\Poetry\Messages\Traits\WithContactsTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contact</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Contact</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="40" package="EC\Poetry\Messages\Traits">
        <name>getContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::getContacts()</full_name>
        <docblock line="40">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="40" description="Property value." type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="53" package="EC\Poetry\Messages\Traits">
        <name>setContacts</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::setContacts()</full_name>
        <docblock line="53">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;Property value.&lt;/p&gt;" type="array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;" variable="$contacts">
            <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
          </tag>
          <tag name="return" line="53" description="" type="\EC\Poetry\Messages\Traits\WithContactsTrait">
            <type>\EC\Poetry\Messages\Traits\WithContactsTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contacts</name>
          <default></default>
          <type>array&lt;mixed,\EC\Poetry\Messages\Components\Contact&gt;</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="66" package="EC\Poetry\Messages\Traits">
        <name>withContact</name>
        <full_name>\EC\Poetry\Messages\Traits\WithContactsTrait::withContact()</full_name>
        <docblock line="66">
          <description>Factory method: create a new contact and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="Contact instance." type="\EC\Poetry\Messages\Components\Contact">
            <type>\EC\Poetry\Messages\Components\Contact</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $contacts</error>
    </parse_markers>
    <source>eJyVVE1rwzAMvftXiNJDW7b1vu6Tsu00KGywQ9OD56hNWGMH22kJo/99tud8NElpKgg2tvyk9yTl7jGNUkI4TVCllCG8zIOFQC3z4B2VohtUwaeksVYzQjLVeT8XSSo4cm23XFOmje90MiEwAXcQcwUKtUZ5BRu3AuUhrI2nkDkkqCMRKlgLCQOPMABWoN4YHAv1ZPL7MQFPp2i8pkTbLXzFOvJQyl2SXwLGXFrWDN6OSgh68Vmu/KOpW1MZ76hGGDIfAe5huTKkGxGew/CIhjstw6dU0gR8hBKruHZWXBoBNeUMWxgSdSY5DHUUq+MUs+9tzGCdcaZjwYGGoQcbNSOO3YN/eaw5sOuHgttyZdgVvp6jtXromTs9tAR4c8U+lfWF2ptvIUWKUuewo9usVKObsWm0ogFGTYr13Cump1h8dLP4r19fElWznKNzeXFVjSqVkuZVsDPFrZVWXVjb16PpvQUm0c4EBY578JhuzD2Ymc+zfdxPzF4j0q3UvvottJqiq+8tl9K/LRDycNR4Ni70OpA/qlmXFg==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithSourceTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithSourceTrait.html" hash="de81b9a8a17a6e85889d3a0a2574137a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Source">\EC\Poetry\Messages\Components\Source</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>WithSourceTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait</full_name>
      <docblock line="12">
        <description>Contains setter, getter and factory methods for "Source" component.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$source</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::source</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\Source" variable="">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="25" package="EC\Poetry\Messages\Traits">
        <name>getSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::getSource()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="38" package="EC\Poetry\Messages\Traits">
        <name>setSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::setSource()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\Source" variable="$source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Traits\WithSourceTrait">
            <type>\EC\Poetry\Messages\Traits\WithSourceTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\Source</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="51" package="EC\Poetry\Messages\Traits">
        <name>withSource</name>
        <full_name>\EC\Poetry\Messages\Traits\WithSourceTrait::withSource()</full_name>
        <docblock line="51">
          <description>Factory method: create new details and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Source instance." type="\EC\Poetry\Messages\Components\Source">
            <type>\EC\Poetry\Messages\Components\Source</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $source</error>
    </parse_markers>
    <source>eJyVUstqwzAQvOsrlpBDG9rk3jeEtqdCIIVefFHlTWwaS2J3nRBK/r2ybAfsJm2yYCSz0uzMaO4efeaVsrpA9togPE+TmUOhbfKGzHqJnLyTzoVvlSr5YH/qCu8sWuFk7koyGI5ORiMFI5g6Kzq3DIwiSFewjCtom8JCG3G0hQIlcynDwhEMaoABmBZzHGAqpKfA7iuMO04wnJooqbbwkUtWI8WW+lYQKnKqKqCtNUFyipbmxiSunpygEUxhyK3SHvJrFDhufvfzCKUke9bI8M3IeSTZwlqvShx3uZSfq9zAorRGcmcrZ+vrF5exX2uuqpk9lCzn64eWeNXZ/aI/P0zfa9LFaexba/5T0bcm0vtTIe8Vdif19XaEwn3vrfqOHHPipRPPGzCEWhAsbiDFEOoVxxQ3UCF/EHIu2pqjCs98/FCNzj7wYXs2+9CflIBgTKWlvdHasFM/x3U6sw==</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/MessageAwareTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.MessageAwareTrait.html" hash="a1e587d8f3ea965e5dba6ac06c373578" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="MessageInterface">\EC\Poetry\Messages\MessageInterface</namespace-alias>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="13" package="EC\Poetry\Messages\Traits">
      <name>MessageAwareTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait</full_name>
      <docblock line="13">
        <description>Trait MessageAwareTrait.</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Messages\Traits" line="18" package="EC\Poetry\Messages\Traits">
        <name>$message</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::message</full_name>
        <default>null</default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\EC\Poetry\Messages\MessageInterface" variable="">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="23" package="EC\Poetry\Messages\Traits">
        <name>getMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::getMessage()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="31" package="EC\Poetry\Messages\Traits">
        <name>setMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::setMessage()</full_name>
        <docblock line="31">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="39" package="EC\Poetry\Messages\Traits">
        <name>hasMessage</name>
        <full_name>\EC\Poetry\Messages\Traits\MessageAwareTrait::hasMessage()</full_name>
        <docblock line="39">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="31" code="PPC:ERR-50015">Argument $message is missing from the Docblock of setMessage</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $message</error>
    </parse_markers>
    <source>eJytUE1LxDAQvedXjNCDFtb+gLq6snjwICzosZeYnd0Gu2mZTFZk6X93mkZlywqKziUh7+V9zNVNV3dKOb1D32mDcLesVi0yvVUP6L3eoq+eSFv2pVLBn8TT5d4x0kY0ygnxEWlvjRBXmjySCBV5riCHKAzp++2rJowvl4IN8EICvQjyfSZhFYpPq6iDAploNYzo7TVB9YMC6UMRz45aRsO4hmw38mAOLjSN9JgYHBbW1UiW163pj0XCc2MNbIIzbFsHW+Rken4RCWPYYQg5kIOMa+tn18myjHD/B0f/5Tit+1lsGuU4g9TO/i1Orf2vFgBn84+tj9a9egdqqdKt</source>
  </file>
  <file path="oe-poetry-client/src/Messages/Traits/WithReturnAddressTrait.php" generated-path="oe-poetry-client.src.Messages.Traits.WithReturnAddressTrait.html" hash="3700217b4ec25ac99629df028550c2be" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ReturnAddress">\EC\Poetry\Messages\Components\ReturnAddress</namespace-alias>
    <trait namespace="EC\Poetry\Messages\Traits" line="12" package="EC\Poetry\Messages\Traits">
      <name>WithReturnAddressTrait</name>
      <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</full_name>
      <docblock line="12">
        <description>Contains setter, getter and factory methods for "ReturnAddress" component.</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Messages\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Messages\Traits" line="17" package="EC\Poetry\Messages\Traits">
        <name>$returnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::returnAddress</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="25" package="EC\Poetry\Messages\Traits">
        <name>getReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::getReturnAddress()</full_name>
        <docblock line="25">
          <description>Getter.</description>
          <long-description></long-description>
          <tag name="return" line="25" description="Property value." type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="38" package="EC\Poetry\Messages\Traits">
        <name>setReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::setReturnAddress()</full_name>
        <docblock line="38">
          <description>Setter.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Property value.&lt;/p&gt;" type="\EC\Poetry\Messages\Components\ReturnAddress" variable="$returnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
          <tag name="return" line="38" description="" type="\EC\Poetry\Messages\Traits\WithReturnAddressTrait">
            <type>\EC\Poetry\Messages\Traits\WithReturnAddressTrait</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnAddress</name>
          <default></default>
          <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Messages\Traits" line="51" package="EC\Poetry\Messages\Traits">
        <name>withReturnAddress</name>
        <full_name>\EC\Poetry\Messages\Traits\WithReturnAddressTrait::withReturnAddress()</full_name>
        <docblock line="51">
          <description>Factory method: create a new return address and return its instance.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Return address instance." type="\EC\Poetry\Messages\Components\ReturnAddress">
            <type>\EC\Poetry\Messages\Components\ReturnAddress</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $returnAddress</error>
    </parse_markers>
    <source>eJydU01rwzAMvftXiNLDVrb2vu9Rtp0GpRvskovqqE1YYxtbaSmj/322mw7ipRutINiJpff0XuSbe1MYIRRW5AxKgqdxNtHEdpO9knO4IJe9WyzZXQtRu87zsa6MVqTYZVPi2qrHPLf+0FeMBgMBAxhrxVgqB46YyV7AIq6AKoc5StZ2AxVxoXMHc22h18LpgdwzDD1aAHzwvX568sPt+qyR4LCFj5KLFmDMEF8CfMQOQ3jQFVrIjhDYFI7iamy5Qibo28SDhOUlSh82rz/cu6pT6P0zsdqQ5Q2scFnTsN1XPVuWEua1klxqFaxvoZydx7SdGyGaTvpclO7yLlETEra/NL11azJosTpKUuLefwpT92LPf6p3qfo2YepFlwlw2/2PU+8OmfXcGvgrkJbC3CAoWu8BsKEKF6T55Gca/BViVPKg/tOmx8e0TZvydHu5Tu/VMaPkXQx6k/q9Z1vxDWkscKM=</source>
  </file>
  <file path="oe-poetry-client/src/Services/Renderer.php" generated-path="oe-poetry-client.src.Services.Renderer.html" hash="d6958cf2a59487840dc43a45a54ceada" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="AbstractMessage">\EC\Poetry\Messages\AbstractMessage</namespace-alias>
    <namespace-alias name="MessageInterface">\EC\Poetry\Messages\MessageInterface</namespace-alias>
    <namespace-alias name="Engine">\League\Plates\Engine</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services" line="14" package="EC\Poetry\Services">
      <extends/>
      <name>Renderer</name>
      <full_name>\EC\Poetry\Services\Renderer</full_name>
      <docblock line="14">
        <description>Class Renderer</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Services"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Services" line="19" package="EC\Poetry\Services">
        <name>$engine</name>
        <full_name>\EC\Poetry\Services\Renderer::engine</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="\League\Plates\Engine" variable="">
            <type>\League\Plates\Engine</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="26" package="EC\Poetry\Services">
        <name>__construct</name>
        <full_name>\EC\Poetry\Services\Renderer::__construct()</full_name>
        <docblock line="26">
          <description>Renderer constructor.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="" type="\League\Plates\Engine" variable="$engine">
            <type>\League\Plates\Engine</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$engine</name>
          <default></default>
          <type>\League\Plates\Engine</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="36" package="EC\Poetry\Services">
        <name>render</name>
        <full_name>\EC\Poetry\Services\Renderer::render()</full_name>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="36" description="" type="\EC\Poetry\Messages\MessageInterface" variable="$message">
            <type>\EC\Poetry\Messages\MessageInterface</type>
          </tag>
          <tag name="return" line="36" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>\EC\Poetry\Messages\MessageInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="36" code="PPC:ERR-50008">No summary for method render()</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $engine</error>
    </parse_markers>
    <source>eJyNUc1OwkAQvu9TzIGEn4g8AFI1hIOJJkS9WUOWZSgb6baZ3ZIYw7s7bXfBRTDOZZv5fuab6c1tuSmFMDJHW0qFMJum8wIdfaYvSDut0I6FqOxP4AmtlRna9H5pHUnlfGN8iec/HoxDWvOQlviIMqswnW+lY87MZNowIkaDgYABTLfSWnhGs0JC4k7dvOOIH+x0JiXDI6Fi0ZcArsawLtbvJEF6brBnjJq3JL1jDDoYQp34hAmgCsMnqJQr6NqDh1mlJJmfnxac46nVcqsVrCujnC4MLBYH914s6zf8dru6Om6j7TBpQZgcc9fg/lf6kOwffwo6eds5XY7QVWSA42mT/bkGNbfqXXQ+XcY7RzsNE+8SRMMkQ/eKeVlftde/greDvq6uXqFxeq2RujBJIJKFJCvWxSrPiiRHyns/HHQvvgFhCPg2</source>
  </file>
  <file path="oe-poetry-client/src/Services/Providers/MessagesProvider.php" generated-path="oe-poetry-client.src.Services.Providers.MessagesProvider.html" hash="49684b42ad2ee83162b453e0fa8f8ee3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Component">\EC\Poetry\Messages\Components</namespace-alias>
    <namespace-alias name="StatusUpdated">\EC\Poetry\Messages\Notifications\StatusUpdated</namespace-alias>
    <namespace-alias name="TranslationReceived">\EC\Poetry\Messages\Notifications\TranslationReceived</namespace-alias>
    <namespace-alias name="ParserAwareInterface">\EC\Poetry\Messages\ParserAwareInterface</namespace-alias>
    <namespace-alias name="CreateTranslationRequest">\EC\Poetry\Messages\Requests\CreateTranslationRequest</namespace-alias>
    <namespace-alias name="GetRequestStatus">\EC\Poetry\Messages\Requests\GetRequestStatus</namespace-alias>
    <namespace-alias name="GetNewNumber">\EC\Poetry\Messages\Requests\GetNewNumber</namespace-alias>
    <namespace-alias name="CreateReviewRequest">\EC\Poetry\Messages\Requests\CreateReviewRequest</namespace-alias>
    <namespace-alias name="Status">\EC\Poetry\Messages\Responses\Status</namespace-alias>
    <namespace-alias name="Container">\Pimple\Container</namespace-alias>
    <namespace-alias name="ServiceProviderInterface">\Pimple\ServiceProviderInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services\Providers" line="22" package="EC\Poetry\Services">
      <extends/>
      <implements>\Pimple\ServiceProviderInterface</implements>
      <name>MessagesProvider</name>
      <full_name>\EC\Poetry\Services\Providers\MessagesProvider</full_name>
      <docblock line="22">
        <description>Class MessagesProvider</description>
        <long-description></long-description>
        <tag name="package" line="22" description="EC\Poetry\Services"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services\Providers" line="27" package="EC\Poetry\Services">
        <name>register</name>
        <full_name>\EC\Poetry\Services\Providers\MessagesProvider::register()</full_name>
        <docblock line="27">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$container</name>
          <default></default>
          <type>\Pimple\Container</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Services\Providers" line="86" package="EC\Poetry\Services">
        <name>serviceFactory</name>
        <full_name>\EC\Poetry\Services\Providers\MessagesProvider::serviceFactory()</full_name>
        <docblock line="86">
          <description>Helper: Register services.</description>
          <long-description></long-description>
          <tag name="param" line="86" description="" type="array" variable="$services">
            <type>array</type>
          </tag>
          <tag name="param" line="86" description="" type="\Pimple\Container" variable="$container">
            <type>\Pimple\Container</type>
          </tag>
          <tag name="param" line="86" description="" type="array" variable="$args">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$services</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$container</name>
          <default></default>
          <type>\Pimple\Container</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Services\Providers" line="104" package="EC\Poetry\Services">
        <name>registerSubscribers</name>
        <full_name>\EC\Poetry\Services\Providers\MessagesProvider::registerSubscribers()</full_name>
        <docblock line="104">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="104" description="" type="array" variable="$services">
            <type>array</type>
          </tag>
          <tag name="param" line="104" description="" type="\Pimple\Container" variable="$container">
            <type>\Pimple\Container</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$services</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$container</name>
          <default></default>
          <type>\Pimple\Container</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="27" code="PPC:ERR-50015">Argument $container is missing from the Docblock of register</error>
      <error line="104" code="PPC:ERR-50008">No summary for method registerSubscribers()</error>
    </parse_markers>
    <source>eJy1V9tu2zgQfddX8MGA5MBx3pvW28Dd3QZog8BuFyjiQGCosU3UplSSchAU/veOKEqibraa3fWLbfLM4VwOyeHbP5Jt4nmC7kEllAH5c766j0HLl9US5IEzUKt7GR94BFJde16qXMhnUIpuEDKP90ksQGhFqCLlv+s+/F2s+Zozqnks1GqpqU7V1ySiGqKBNl8kFWpn/iyAAT+csLynUoG8eaYSboUGucZAe8EL+JGC0hiTBPSnto6ZOW/5N2j7O49skMUdPN+l+yeQQz1bwIHD83mnFNZCQZHlHHjP98kOsGxCUy6KNe2oLXxRdidl3tXFhUcuyHxHlSLFGgUQZ7LJ96ij7zjeISWcvvJYpzExa++NhPoc8H56BD/GiexzQX6+52ILkusoZkc7eGW+k/RpxxlZp4JltSMSNlwhT1DGTEas+Dk2Jjm7WeGK3EboCuoNcayQ87QEVKYPfjXNSxv/kbxzQJczdF/H8iUo/en2w/HBLmO5kS4Q8FxtrVXlYDAe16wIuZwp0PM4gsB1FMc0FxvlPz74latThjj/sZPiG1A5hOIFcT0UuaaHkAiD7KH5B48fTNsQnkMO7SHCs0APYUkQ10OxzLacYIOSqyy2zxsZRykb5lAORSLch90iKQJUjYQnZqhtKUGnUjgE1+X00cWO9nazogofHAZH+mY19M6lfzdz5DrPAW/emO0/6WaJAF3eqX6WDzngNIuENcgs6SGeCml2pPh1lkUB+GDnz/FlaQppFEnMg9/2amEAN/n8aS4VpxLVUFNCjWtpAGdIzEl+isQATpNoKjegT5B8MYAh4YQ7KjYpCsTvCeeTnW+RPVaKG+ktV5mCzdn/lz0vS+lN3GPS1aa0t2JTm3Z8ysxlGerqHg/tVK6Knlu+K+6CEtNScITNWiBl8/o/RWW9k+Yurxwrq9G+6c85hrdEaI/SZm3dLuMVpSgy7ZZiMuAqrGOq461RRtuntOuYT5Sqx0B68jokBLvK78YwblEXDcUyfVJMckyp6uGvxSncLrYZqzs5rSs2b3FN9B2tb5coamR58sI077GdJNqu+xW5rEXyP+Wzdw1rf/SaHeFH2CWobrKwdMS6rWzzVgKxTZV0T6iU9KW2UUaq7FZryFWzaXbcOUs6nU5HeJ4WnLZHlbEGhtmv2tRGknOi0qMJ6Vp8UrI3+9h1jOcH25KgZMieZ6PstZcpYGRq3tF0FsUzyNe2stmLIsiXwMoZ9xorudkuGtzsct6BITavDMswHl/OcPpWoJDx4r5BtiDnvG5R8jUJerjsYhlb9d4o3xdB10PR7oxxl/NuAAOar6bp0WsNFS2ZJa3bHB2OY4/+awr8F1LuVWjXPh0k0/9anD4csHphxFVCNdtmOb6cYZNWORa0pNyRwKP3C1IuY18=</source>
  </file>
  <file path="oe-poetry-client/src/Services/Providers/ServicesProvider.php" generated-path="oe-poetry-client.src.Services.Providers.ServicesProvider.html" hash="344ea1bfffc642003560e0a7f1581599" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="NotificationHandler">\EC\Poetry\NotificationHandler</namespace-alias>
    <namespace-alias name="Client">\EC\Poetry\Client</namespace-alias>
    <namespace-alias name="Server">\EC\Poetry\Server</namespace-alias>
    <namespace-alias name="LoggerSubscriber">\EC\Poetry\Services\LoggerSubscriber</namespace-alias>
    <namespace-alias name="AttributesExtension">\EC\Poetry\Services\Plates\AttributesExtension</namespace-alias>
    <namespace-alias name="Settings">\EC\Poetry\Services\Settings</namespace-alias>
    <namespace-alias name="Wsdl">\EC\Poetry\Services\Wsdl</namespace-alias>
    <namespace-alias name="Engine">\League\Plates\Engine</namespace-alias>
    <namespace-alias name="ComponentExtension">\EC\Poetry\Services\Plates\ComponentExtension</namespace-alias>
    <namespace-alias name="Renderer">\EC\Poetry\Services\Renderer</namespace-alias>
    <namespace-alias name="Container">\Pimple\Container</namespace-alias>
    <namespace-alias name="ServiceProviderInterface">\Pimple\ServiceProviderInterface</namespace-alias>
    <namespace-alias name="Parser">\EC\Poetry\Services\Parser</namespace-alias>
    <namespace-alias name="NullLogger">\Psr\Log\NullLogger</namespace-alias>
    <namespace-alias name="EventDispatcher">\Symfony\Component\EventDispatcher\EventDispatcher</namespace-alias>
    <namespace-alias name="ValidatorBuilder">\Symfony\Component\Validator\ValidatorBuilder</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services\Providers" line="27" package="EC\Poetry\Services\Providers">
      <extends/>
      <implements>\Pimple\ServiceProviderInterface</implements>
      <name>ServicesProvider</name>
      <full_name>\EC\Poetry\Services\Providers\ServicesProvider</full_name>
      <docblock line="27">
        <description>Class ServicesProvider</description>
        <long-description></long-description>
        <tag name="package" line="27" description="EC\Poetry\Services\Providers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services\Providers" line="32" package="EC\Poetry\Services\Providers">
        <name>register</name>
        <full_name>\EC\Poetry\Services\Providers\ServicesProvider::register()</full_name>
        <docblock line="32">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$container</name>
          <default></default>
          <type>\Pimple\Container</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="32" code="PPC:ERR-50015">Argument $container is missing from the Docblock of register</error>
    </parse_markers>
    <source>eJytV1tv0zAUfs+v8ANS0qlLXhAPDMqlKwJpjIlKgLRWkZu4nSG1I9vZmND+O8fOzbl1YSWqmsQ+5/hcvnPJqzfpTeo4DO+JTHFE0GK+uuJEifvVkohbGhG5uhL8lsZEyDPHyaRNcskV3dIIK8rZR8zihIizFsk8oYSp9qqW3aWtTrzgux0Ry2wjI0E3BwivEqzg9k4poMvgcfFbESZBnUGWJVGKsp0cJPgu4yTfvCB4l5HykAXbUUYeU2XO9ylnYPLjmnwlDLxaWndF92lCgJ8pDOc0VwueMhKfmCJiC+Ea1gYLWcmQQnt0dZklSe7ZfH15v99ydl+rvFrcwv85BSSo6IaI9vsQ2zec0BgrLuqn9xlNYs3hBCcnDjpB8wRLiUr9SkNgR2++Bej9wrvD6APCwIl6xSDjpT3oUu11XOX8cRBcRh19naA/bykDq6iKefRQLAbmnmabhEZom7FIQxsJsqMS5HhVdNCzqHycGJZcur7qnWs3Muh31+h1LaxfiCVAX4KoTDDEyB3KM8izxcoCw+562jhOcpyG5ZnNrdsyMu0NUaCwvU507MO4Cr67npxVKj5AYPvsvYPcOc5anX0Dtl67zKo3Puidctq1tDQICHTCjtK74bhj1F8tQdLBiOlng1A/d1YrghZdro/PU62JHGWH7aDwJq/IxxnUU+JHQbELn3Gws3A6Nm7SNJMnmPlMRwC4XDgQvwwCRX6rIE2A9myDJXnxfOr6+UNIWMRj4nWxfjrbEfVjn3gTS10jPFcLxFe4yLueZ46dousGub5cqQTB+1AfAqq46PUMNZfCCN4U8SbTLnOEwc+h0Uozfl+eX4Tzd/OPi/Dyy+WiybDuV/Z0BuH8svlJoiZ6+2E1sYJioaaQNSJ4T42bBc/SpUOY+A81rcv070CruQs8tDqr145HzXA6w3Fcj0INUxPTzUNZ7Q4HJba6+GMWp2Z4MHbWy6cz6KKQl/debfuBwOQDiG3Xw2TguLoUHIOEcpryju0FHZ5/D7fgXDWc15HqKwIjC6RyuOV6UHLXLQDkZCDEM3Axb54RPJm0ct9k7QeakGrk9FyVJj5M9m6XNuE4rgnNgNEZWb2eM7p8PVN3HyPA94Ox0XPhI0PCmCfdae4j3w2qpYOMUamizWotHmS2q5fN31wfShxSjP19sAmCAnaoCBdkDnxJwaQo/THY6qIAAh6G55++hiEo6PvFryST7gBmra751KQ1IW3P7xBP48rPRN3w+DNOU+j1ngstD/IAWhMcor1vmmDFOyrp67mhkV4HS33O4Y3I4bwwjpddfxqNl94ou8dUrvbXbk+JHzs91V5tmmFuzoPzFywVErU=</source>
  </file>
  <file path="oe-poetry-client/src/Services/Plates/ComponentExtension.php" generated-path="oe-poetry-client.src.Services.Plates.ComponentExtension.html" hash="105472293ccf15229f2f84ea09a0cef2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ComponentInterface">\EC\Poetry\Messages\ComponentInterface</namespace-alias>
    <namespace-alias name="Engine">\League\Plates\Engine</namespace-alias>
    <namespace-alias name="ExtensionInterface">\League\Plates\Extension\ExtensionInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services\Plates" line="14" package="EC\Poetry\Services\Plates">
      <extends/>
      <implements>\League\Plates\Extension\ExtensionInterface</implements>
      <name>ComponentExtension</name>
      <full_name>\EC\Poetry\Services\Plates\ComponentExtension</full_name>
      <docblock line="14">
        <description>Class ComponentExtension</description>
        <long-description></long-description>
        <tag name="package" line="14" description="EC\Poetry\Services\Plates"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services\Plates" line="19" package="EC\Poetry\Services\Plates">
        <name>$engine</name>
        <full_name>\EC\Poetry\Services\Plates\ComponentExtension::engine</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="\League\Plates\Engine" variable="">
            <type>\League\Plates\Engine</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services\Plates" line="24" package="EC\Poetry\Services\Plates">
        <name>register</name>
        <full_name>\EC\Poetry\Services\Plates\ComponentExtension::register()</full_name>
        <docblock line="24">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$engine</name>
          <default></default>
          <type>\League\Plates\Engine</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services\Plates" line="37" package="EC\Poetry\Services\Plates">
        <name>render</name>
        <full_name>\EC\Poetry\Services\Plates\ComponentExtension::render()</full_name>
        <docblock line="37">
          <description>Render given component.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\EC\Poetry\Messages\ComponentInterface" variable="$component">
            <type>\EC\Poetry\Messages\ComponentInterface</type>
          </tag>
          <tag name="return" line="37" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$component</name>
          <default></default>
          <type>\EC\Poetry\Messages\ComponentInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="24" code="PPC:ERR-50015">Argument $engine is missing from the Docblock of register</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $engine</error>
    </parse_markers>
    <source>eJyNkt9OwjAUxu/7FOeCZIOAPAAySQgmJpoQ9c55UcuhNG5nS9sRDeHd7bqxjX9qb7r0O/2d73zr7V2+yRkjnqLJuUBYzONlhlZ/xy+ot0qgiZcJt2gmjBWmqz+hMVw6fZ6leUZI9oEs6rWjTHzpI3JZYH09XpBUdFn5skhGZdR+dUhsPBgwGMA84cZA06spdVopz5z7T2fn+gCuaszEFQqoNE8wdUcGzl2wHQO3vJNyuXZbriG+NGFdMfZ7rjOLwuIKeljPf0razRRtUCu7ysT++HLxkSgB64KELS1qlMo4R2HV6IDs++LKYbl6dqPMKKpEmLadm4LqYBQdgPd1hzAQh2CCIbx50BACjbRCHbz3K8T+bIRnXwBSbZGgQdzUchNZzjVPIf7XC4JewznFaLSFJjBWK5J/BFb6Cn+ln6ZX049CLJPypPbaKJJoX9E9Gvfrw75Lq5MdTKNOhza3PfsB06YYYA==</source>
  </file>
  <file path="oe-poetry-client/src/Services/Plates/AttributesExtension.php" generated-path="oe-poetry-client.src.Services.Plates.AttributesExtension.html" hash="7f1dc34f9557ff5ab5c1fbc960638c2c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Engine">\League\Plates\Engine</namespace-alias>
    <namespace-alias name="ExtensionInterface">\League\Plates\Extension\ExtensionInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services\Plates" line="13" package="EC\Poetry\Services\Plates">
      <extends/>
      <implements>\League\Plates\Extension\ExtensionInterface</implements>
      <name>AttributesExtension</name>
      <full_name>\EC\Poetry\Services\Plates\AttributesExtension</full_name>
      <docblock line="13">
        <description>Class AttributesExtension</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Services\Plates"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services\Plates" line="18" package="EC\Poetry\Services\Plates">
        <name>$engine</name>
        <full_name>\EC\Poetry\Services\Plates\AttributesExtension::engine</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\League\Plates\Engine" variable="">
            <type>\League\Plates\Engine</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services\Plates" line="23" package="EC\Poetry\Services\Plates">
        <name>register</name>
        <full_name>\EC\Poetry\Services\Plates\AttributesExtension::register()</full_name>
        <docblock line="23">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$engine</name>
          <default></default>
          <type>\League\Plates\Engine</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services\Plates" line="36" package="EC\Poetry\Services\Plates">
        <name>render</name>
        <full_name>\EC\Poetry\Services\Plates\AttributesExtension::render()</full_name>
        <docblock line="36">
          <description>Render given component attributes.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="36" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services\Plates" line="50" package="EC\Poetry\Services\Plates">
        <name>escape</name>
        <full_name>\EC\Poetry\Services\Plates\AttributesExtension::escape()</full_name>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="50" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="23" code="PPC:ERR-50015">Argument $engine is missing from the Docblock of register</error>
      <error line="50" code="PPC:ERR-50008">No summary for method escape()</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $engine</error>
    </parse_markers>
    <source>eJyVkl1r2zAUhu/1Kw7FICfkg94N2qQtIYVCu4UthUEchiqf2KK2bCQ5LHT575Nt2W7z0bFzY6Pz6j2vHun6Jo9zQiRLUeeMI8xnwSJDo3bBD1RbwVEHi4QZ1FeEFBrhEVlUoFsL5jISEq9OdX4blFpksvt7kAbVxg6xVuN+n0AfZgnTGu6MUeKlsNtarW2W/Vub6ZVFn8SyqjHh52xApHmCKUqj4TgHeSNgq8pSlp23ZQqCU2d0inH1zVVmkBsMwUNH4NDp7VbIGJUwYcb3HzcXL4ngsCkkN2VEhZHQNpFfD2ose5W4TliWZ2Khh9O6CZNuciuoF4bTxvDeTfApa8nQAawqpwFQhTJERde92mN/dIbvlQAisUUJPEvzTFqS0LmNnLLFlzPFUmBKsR14ne5QptAUSoK2fRn9A04ZwT9yPKJTCzHsHoFltFp3eDaZQsZj8N+5ANPgveIOJlPwtiwpsPfO84zval3St7tGdHJBR829aM5y9J3LiF7QbrQjW5Y7efkssxB9CvZCTsw4eyWOcE0OvA8E/4drE7eWHtJ0PrFJE50jFyzhMVO6kQ9g/nX56+fT4yX8qX5n354Wd0v7pJ6X98MvtE2/J38BdjJSgA==</source>
  </file>
  <file path="oe-poetry-client/src/Services/Plates/Template.php" generated-path="oe-poetry-client.src.Services.Plates.Template.html" hash="90ba73d8762616fa2b347b20305aa381" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="file" line="0" description="Contains \EC\Poetry\Services\Plates\Template"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="OriginalTemplate">\League\Plates\Template\Template</namespace-alias>
    <namespace-alias name="ComponentInterface">\EC\Poetry\Messages\ComponentInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services\Plates" line="24" package="EC\Poetry\Services\Plates">
      <extends>\League\Plates\Template\Template</extends>
      <name>Template</name>
      <full_name>\EC\Poetry\Services\Plates\Template</full_name>
      <docblock line="24">
        <description>Class Template.</description>
        <long-description>This class is not actually used it's just to allow proper IDE completion in
template files.</long-description>
        <tag name="package" line="24" description="EC\Poetry\Services\Plates"/>
      </docblock>
      <method final="false" static="false" visibility="public" line="24">
        <name>component</name>
        <docblock>
          <description/>
          <long-description/>
          <tag name="magic" line="24"/>
          <tag name="return" line="24" type="">
            <type/>
          </tag>
          <tag name="method" line="24" description="" method_name="component"/>
        </docblock>
      </method>
      <method final="false" static="false" visibility="public" line="24">
        <name>attributes</name>
        <docblock>
          <description/>
          <long-description/>
          <tag name="magic" line="24"/>
          <tag name="return" line="24" type="">
            <type/>
          </tag>
          <tag name="method" line="24" description="" method_name="attributes"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx1UUFOwzAQvPsVe6hEmwN9QJCoFHqoBKISPeayONvExbEt7waIEH/HiZQUqHryaNYzsx7f3YcmKLXOMgUZbI7G0gAK7wSNYyi3Rbn3JLEvXyi+G01c7i1KOg7UhgGl+2ulHLbEATXBVUWuVMcEj4R1R/9dZgDI8BxNbRzaictH4dn4iZixTurCt8E7crJzQvGY4vP5MYVFZpgsbhM1sIfGMOhxlIDzAqilQ2t7SBkVGLlhOHUsIB4S7T8gRB8owu5hCzrlWRLjHRg32Mm09dAcTyGblqTx1Xh9XG95uSgs5unqtwZFonntUjdLjBF7WJyZ1eSfin5LBVzvevwU/acBoE8hV122q76U+lY/qGKzlg==</source>
  </file>
  <file path="oe-poetry-client/src/Services/Wsdl.php" generated-path="oe-poetry-client.src.Services.Wsdl.html" hash="993b082ca9a495afd73f385fe3a51711" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Engine">\League\Plates\Engine</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services" line="12" package="EC\Poetry\Services">
      <extends/>
      <name>Wsdl</name>
      <full_name>\EC\Poetry\Services\Wsdl</full_name>
      <docblock line="12">
        <description>Class Wsdl</description>
        <long-description></long-description>
        <tag name="package" line="12" description="EC\Poetry\Services"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services" line="17" package="EC\Poetry\Services">
        <name>$url</name>
        <full_name>\EC\Poetry\Services\Wsdl::url</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services" line="22" package="EC\Poetry\Services">
        <name>$renderEngine</name>
        <full_name>\EC\Poetry\Services\Wsdl::renderEngine</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="\League\Plates\Engine" variable="">
            <type>\League\Plates\Engine</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services" line="27" package="EC\Poetry\Services">
        <name>$headers</name>
        <full_name>\EC\Poetry\Services\Wsdl::headers</full_name>
        <default>array('content-type' =&gt; 'application/xml; utf-8')</default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="37" package="EC\Poetry\Services">
        <name>__construct</name>
        <full_name>\EC\Poetry\Services\Wsdl::__construct()</full_name>
        <docblock line="37">
          <description>Wsdl constructor.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="37" description="" type="\League\Plates\Engine" variable="$renderEngine">
            <type>\League\Plates\Engine</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$renderEngine</name>
          <default></default>
          <type>\League\Plates\Engine</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="48" package="EC\Poetry\Services">
        <name>getXml</name>
        <full_name>\EC\Poetry\Services\Wsdl::getXml()</full_name>
        <docblock line="48">
          <description>Get client WSDL XML.</description>
          <long-description></long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="58" package="EC\Poetry\Services">
        <name>getHeaders</name>
        <full_name>\EC\Poetry\Services\Wsdl::getHeaders()</full_name>
        <docblock line="58">
          <description>Get headers.</description>
          <long-description></long-description>
          <tag name="return" line="58" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="66" package="EC\Poetry\Services">
        <name>sendHeaders</name>
        <full_name>\EC\Poetry\Services\Wsdl::sendHeaders()</full_name>
        <docblock line="66">
          <description>Send HTTP headers for WSDL response.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $url</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $renderEngine</error>
      <error line="27" code="PPC:ERR-50007">No summary for property $headers</error>
    </parse_markers>
    <source>eJyFVF1L60AQfd9fMYiQtLT29XL9uuAVfeiFQgUFIzJup2lwuwm7m2qR/vc7m8TWphudl5CdOWfPnBn27LJYFEJoXJItUBJcXyWTnJxZJ1Myq0ySPRWitARjwrSkZKLQkU2udZpp4tSo3xfQhyuF1sK9nSn+8wd/mO0V0xAhp0dC7gAfAjgqIh+MXaEB60ym0+ZoVH0LkzuSjmZwXBrFl4dwSUhoF40hPSOzbSbEh8bgugu/IGS8hXN4rEsgkrl2pN3QrQuK4PwCIiwKlUl0Wa5H70t1CqWbD39FgwrxdHitNwWYhh0opcvNSZPYyirQ4LIxCFrhnWkVBh3Z732/v/KF9cK81NJrhufnrZjY0w8gRNGrsB9iK8QtMju84Hp2p55XK/UV7Wv2h+ELNwfe3JADqTI2GO6nf8fw8G98YI8hVxodXKBWZym5h6WK29IbgoDMz784euMhRQN4jCQq9cK7Xs161/RT77sWmr3pkh7YuUPltzXHD+qbm7rETLkduL27m3xKgnluamsNvwg8dzr5Vohlgi4lTEUoFxDvawG0cOxfnMqxFaqSel9QPurK+Kgq+90UHfV2K7Rp+tmI/5I0UMg=</source>
  </file>
  <file path="oe-poetry-client/src/Services/LoggerSubscriber.php" generated-path="oe-poetry-client.src.Services.LoggerSubscriber.html" hash="4be0cc7ba45c20e64b39e3f2442f1e7b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ClientResponseEvent">\EC\Poetry\Events\Client\ClientResponseEvent</namespace-alias>
    <namespace-alias name="ClientRequestEvent">\EC\Poetry\Events\Client\ClientRequestEvent</namespace-alias>
    <namespace-alias name="ExceptionEvent">\EC\Poetry\Events\ExceptionEvent</namespace-alias>
    <namespace-alias name="NotificationEventInterface">\EC\Poetry\Events\NotificationEventInterface</namespace-alias>
    <namespace-alias name="ReceivedNotificationEvent">\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent</namespace-alias>
    <namespace-alias name="StatusUpdatedEvent">\EC\Poetry\Events\Notifications\StatusUpdatedEvent</namespace-alias>
    <namespace-alias name="TranslationReceivedEvent">\EC\Poetry\Events\Notifications\TranslationReceivedEvent</namespace-alias>
    <namespace-alias name="ParseNotificationEvent">\EC\Poetry\Events\ParseNotificationEvent</namespace-alias>
    <namespace-alias name="ParseResponseEvent">\EC\Poetry\Events\ParseResponseEvent</namespace-alias>
    <namespace-alias name="LogLevel">\Psr\Log\LogLevel</namespace-alias>
    <namespace-alias name="EventSubscriberInterface">\Symfony\Component\EventDispatcher\EventSubscriberInterface</namespace-alias>
    <namespace-alias name="LoggerInterface">\Psr\Log\LoggerInterface</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services" line="23" package="EC\Poetry\Services">
      <extends/>
      <implements>\Symfony\Component\EventDispatcher\EventSubscriberInterface</implements>
      <name>LoggerSubscriber</name>
      <full_name>\EC\Poetry\Services\LoggerSubscriber</full_name>
      <docblock line="23">
        <description>Class LoggerSubscriber</description>
        <long-description></long-description>
        <tag name="package" line="23" description="EC\Poetry\Services"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services" line="28" package="EC\Poetry\Services">
        <name>$logger</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::logger</full_name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="\Psr\Log\LoggerInterface" variable="">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services" line="33" package="EC\Poetry\Services">
        <name>$renderer</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::renderer</full_name>
        <default></default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="\EC\Poetry\Services\Renderer" variable="">
            <type>\EC\Poetry\Services\Renderer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services" line="38" package="EC\Poetry\Services">
        <name>$settings</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::settings</full_name>
        <default></default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="\EC\Poetry\Services\Settings" variable="">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="47" package="EC\Poetry\Services">
        <name>__construct</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::__construct()</full_name>
        <docblock line="47">
          <description>LoggerSubscriber constructor.</description>
          <long-description></long-description>
          <tag name="param" line="47" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="param" line="47" description="" type="\EC\Poetry\Services\Renderer" variable="$renderer">
            <type>\EC\Poetry\Services\Renderer</type>
          </tag>
          <tag name="param" line="47" description="" type="\EC\Poetry\Services\Settings" variable="$settings">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$renderer</name>
          <default></default>
          <type>\EC\Poetry\Services\Renderer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>\EC\Poetry\Services\Settings</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="EC\Poetry\Services" line="57" package="EC\Poetry\Services">
        <name>getSubscribedEvents</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::getSubscribedEvents()</full_name>
        <docblock line="57">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="74" package="EC\Poetry\Services">
        <name>onParseResponseEvent</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::onParseResponseEvent()</full_name>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="\EC\Poetry\Events\ParseResponseEvent" variable="$event">
            <type>\EC\Poetry\Events\ParseResponseEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseResponseEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="82" package="EC\Poetry\Services">
        <name>onParseNotificationEvent</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::onParseNotificationEvent()</full_name>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="\EC\Poetry\Events\ParseNotificationEvent" variable="$event">
            <type>\EC\Poetry\Events\ParseNotificationEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ParseNotificationEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="90" package="EC\Poetry\Services">
        <name>onNotificationEvent</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::onNotificationEvent()</full_name>
        <docblock line="90">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="90" description="" type="\EC\Poetry\Events\NotificationEventInterface" variable="$event">
            <type>\EC\Poetry\Events\NotificationEventInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\NotificationEventInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="99" package="EC\Poetry\Services">
        <name>onClientRequestEvent</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::onClientRequestEvent()</full_name>
        <docblock line="99">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="99" description="" type="\EC\Poetry\Events\Client\ClientRequestEvent" variable="$event">
            <type>\EC\Poetry\Events\Client\ClientRequestEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\Client\ClientRequestEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="111" package="EC\Poetry\Services">
        <name>onReceivedNotificationEvent</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::onReceivedNotificationEvent()</full_name>
        <docblock line="111">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="111" description="" type="\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent" variable="$event">
            <type>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\NotificationHandler\ReceivedNotificationEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="123" package="EC\Poetry\Services">
        <name>onClientResponseEvent</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::onClientResponseEvent()</full_name>
        <docblock line="123">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="123" description="" type="\EC\Poetry\Events\Client\ClientResponseEvent" variable="$event">
            <type>\EC\Poetry\Events\Client\ClientResponseEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\Client\ClientResponseEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="131" package="EC\Poetry\Services">
        <name>onExceptionEvent</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::onExceptionEvent()</full_name>
        <docblock line="131">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="131" description="" type="\EC\Poetry\Events\ExceptionEvent" variable="$event">
            <type>\EC\Poetry\Events\ExceptionEvent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event</name>
          <default></default>
          <type>\EC\Poetry\Events\ExceptionEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Services" line="153" package="EC\Poetry\Services">
        <name>hidePassword</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::hidePassword()</full_name>
        <docblock line="153">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="153" description="" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="153" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Services" line="164" package="EC\Poetry\Services">
        <name>logInfo</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::logInfo()</full_name>
        <docblock line="164">
          <description>Log info messages.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="164" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Services" line="177" package="EC\Poetry\Services">
        <name>logError</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::logError()</full_name>
        <docblock line="177">
          <description>Log error messages.</description>
          <long-description></long-description>
          <tag name="param" line="177" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="177" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="EC\Poetry\Services" line="189" package="EC\Poetry\Services">
        <name>canLogLevel</name>
        <full_name>\EC\Poetry\Services\LoggerSubscriber::canLogLevel()</full_name>
        <docblock line="189">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="189" description="" type="" variable="$level"/>
          <tag name="return" line="189" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="74" code="PPC:ERR-50008">No summary for method onParseResponseEvent()</error>
      <error line="82" code="PPC:ERR-50008">No summary for method onParseNotificationEvent()</error>
      <error line="90" code="PPC:ERR-50008">No summary for method onNotificationEvent()</error>
      <error line="99" code="PPC:ERR-50008">No summary for method onClientRequestEvent()</error>
      <error line="111" code="PPC:ERR-50008">No summary for method onReceivedNotificationEvent()</error>
      <error line="123" code="PPC:ERR-50008">No summary for method onClientResponseEvent()</error>
      <error line="131" code="PPC:ERR-50008">No summary for method onExceptionEvent()</error>
      <error line="153" code="PPC:ERR-50008">No summary for method hidePassword()</error>
      <error line="189" code="PPC:ERR-50008">No summary for method canLogLevel()</error>
      <error line="28" code="PPC:ERR-50007">No summary for property $logger</error>
      <error line="33" code="PPC:ERR-50007">No summary for property $renderer</error>
      <error line="38" code="PPC:ERR-50007">No summary for property $settings</error>
    </parse_markers>
    <source>eJzlWG1T2zgQ/u5fIRimsZm0fKcHLZe6vcxAYBKY9oZwGeMoiaaO7ZOU0EyH/34rWX6V5Bju5ct5Bpxodx/ts7taSfnlQ7pKHScO1pilQYiRP5jeJJjT3XSC6ZaEmL13nA2rCvwtjjmbDiICb/Uag3kSMyxl7zsZ/LnBjLfp+z9CnHKSxG1Ko4STBQmDQm8Yc0wXQKWDwW9BPI8wnY5xiMkWzzWwDhhsOuEB37C7dB5wPO9udkuDmEXySz5/m/FNQBnu6qBUNuTkhtHpZbIUf5d4i6NsdLJbL5J4Nx0kazAQOZImnwiUBA9XECD5fbJ5ZCElj5g2YlxBXdaEzsnxsYOO0SAKGEOZuEQBiRB+hLr7HixNpQfiEyc0GiOyTiO8FmyRzTvnp4PgkU6IB+baBhRNLf4qpRP5TmnCcQgJRUeRVAM2RjDdayineI6pIGgGpEr+AsgJ5pzES2aDZEquQ2qBC6EmON2EPKHvlFIxfRrQYG0NkNRS4WiatIShJNzBKCdaUqpT3jxGJESLTRyKNYBms4KO2/RWedpHuiN9pM/jyQmykpFE+Yqwt+cZCDor66ChkGMKlTKzDaV8EqFU5kooPGsZ+/mRxLDoCJ8n4bOJPYOGUw3CEpfVn/UQ5jbZUMw3NEb3xYB49DZxejq6uPJz+dk56iWxrtXr6zBaayqhKjCaVgNK76Umj/ah2FprjtUNRd+oTL7oWhYYW5TrMPYoWzcphZbhWLUaaPXNtU6s9KquVYF4sBWvvrStWxI6wuLVur5N1edaoexLeBgvEoNdxruP7ntw/mGwCfUE8Qzs7Tmsq2/ryPUevNex1XLwAsaardsK2YW5pXD+Bfb2Q1m3COjk9yJqAVCURMOt9+n8k1shepUpu56nde48hBXtEZyWXU+Lm/ryinhZT8bdwqXbuVaoPYVi63n9xs7Rg3MfFbeGZsncqXGIT90ghVPcU0LnmUE264rM8Y0arwa4GPOaKJZCLfJX6VB/r2z3Xg26pcZq7u4D3pOoPbvB/yJf9hvoy9ZNdW+xg3VcOS/ZXYowvIJ8fWvuRrhu4xohNJo41xKttPS9MHaNPdOnNKGu6ZShlWYxgQyPG+MnBMtuEWHptrw7uqUXnlftwW3VllvYKk6acAp7iMngVgg09QWJjNqfYVxTDpO5UXkA45pyRGKj8iWMN9dJ8YUskNu4YUgjtwwq63nozRt0kKeOsAn4Ctn3vEqWxcNXNHmqTF+m9bm9OOH+BTOjo7xlNG+V6u6RqTVusGQLJ/2yRusdJge0XGZSipczitNIZOrwxP1w8If3Dv4feSeHfXR4DP9KCNsCg1sjIrCAkSoeZrkU5ySVWkMaUBrsoP7hNsrxD95OsjhSKKy+Ms+tYaHdPzQ5V1IdBnH+A46bfzg9HY4+X2s5rV1iIfn1afMJvf2pFmHCYk3/t3HK2sg/Gyh/PL4e74sUbkz8glApqkeRmM6yFh6TJGonX/U9g9I6sxwVPylUG2rJ85P/692XvlEkasUsGV3fDge+Wfb1YjwajiyQMqpm0WA8BNCLS7P04tIf31owr/zxF380+F27eEr+3/EOyMuSmDEc0HDVbIb3PcjnTMap99DPI1bdsIoYKhjYMbGKN+vLKar9VmWvdRp0cHaGFkHEsGy8JJ5JaAXadOLZeXb+As41Ke4=</source>
  </file>
  <file path="oe-poetry-client/src/Services/Settings.php" generated-path="oe-poetry-client.src.Services.Settings.html" hash="d4be05554116894eedb2ced057406654" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Poetry\Services" line="10" package="EC\Poetry\Services">
      <extends/>
      <implements>\ArrayAccess</implements>
      <name>Settings</name>
      <full_name>\EC\Poetry\Services\Settings</full_name>
      <docblock line="10">
        <description>Class Settings</description>
        <long-description></long-description>
        <tag name="package" line="10" description="EC\Poetry\Services"/>
      </docblock>
      <property static="false" visibility="protected" namespace="EC\Poetry\Services" line="15" package="EC\Poetry\Services">
        <name>$settings</name>
        <full_name>\EC\Poetry\Services\Settings::settings</full_name>
        <default>array('identifier.code' =&gt; '', 'identifier.year' =&gt; '', 'identifier.number' =&gt; '', 'identifier.version' =&gt; '', 'identifier.sequence' =&gt; '', 'identifier.part' =&gt; '', 'identifier.product' =&gt; '', 'service.wsdl' =&gt; '', 'service.username' =&gt; '', 'service.password' =&gt; '', 'client.wsdl' =&gt; '', 'client.options' =&gt; array('cache_wsdl' =&gt; WSDL_CACHE_NONE), 'notification.endpoint' =&gt; '', 'notification.username' =&gt; '', 'notification.password' =&gt; '', 'exceptions' =&gt; true, 'log_level' =&gt; false)</default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="15" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="62" package="EC\Poetry\Services">
        <name>get</name>
        <full_name>\EC\Poetry\Services\Settings::get()</full_name>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed|string">
            <type>mixed</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="73" package="EC\Poetry\Services">
        <name>set</name>
        <full_name>\EC\Poetry\Services\Settings::set()</full_name>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="73" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="73" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="73" description="" type="\EC\Poetry\Services\Settings">
            <type>\EC\Poetry\Services\Settings</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="83" package="EC\Poetry\Services">
        <name>withArray</name>
        <full_name>\EC\Poetry\Services\Settings::withArray()</full_name>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="array" variable="$values">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="95" package="EC\Poetry\Services">
        <name>has</name>
        <full_name>\EC\Poetry\Services\Settings::has()</full_name>
        <docblock line="95">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="95" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="95" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="106" package="EC\Poetry\Services">
        <name>getSettings</name>
        <full_name>\EC\Poetry\Services\Settings::getSettings()</full_name>
        <docblock line="106">
          <description>Get Settings property.</description>
          <long-description></long-description>
          <tag name="return" line="106" description="Property value." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="114" package="EC\Poetry\Services">
        <name>offsetExists</name>
        <full_name>\EC\Poetry\Services\Settings::offsetExists()</full_name>
        <docblock line="114">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="122" package="EC\Poetry\Services">
        <name>offsetGet</name>
        <full_name>\EC\Poetry\Services\Settings::offsetGet()</full_name>
        <docblock line="122">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="130" package="EC\Poetry\Services">
        <name>offsetSet</name>
        <full_name>\EC\Poetry\Services\Settings::offsetSet()</full_name>
        <docblock line="130">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="138" package="EC\Poetry\Services">
        <name>offsetUnset</name>
        <full_name>\EC\Poetry\Services\Settings::offsetUnset()</full_name>
        <docblock line="138">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="62" code="PPC:ERR-50008">No summary for method get()</error>
      <error line="73" code="PPC:ERR-50008">No summary for method set()</error>
      <error line="83" code="PPC:ERR-50008">No summary for method withArray()</error>
      <error line="95" code="PPC:ERR-50008">No summary for method has()</error>
      <error line="114" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetExists</error>
      <error line="122" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetGet</error>
      <error line="130" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetSet</error>
      <error line="130" code="PPC:ERR-50015">Argument $value is missing from the Docblock of offsetSet</error>
      <error line="138" code="PPC:ERR-50015">Argument $offset is missing from the Docblock of offsetUnset</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $settings</error>
    </parse_markers>
    <source>eJytVk1v4jAQvedXzKESbdXSw95g+yXKditVLQKteigVMs5AvA1x1nagqMt/34ljQgIk3UpFQoDnzZs3Xw7fL+Mg9ryIzVDHjCN0O8OeRKOWwwGqueCo2553dnzswTF0QqY1DNAYEU01naSHV+T2yqb7PMl85vGSE4hZHOIMI6NheK0UW15zQmrv3QN62UDpi3jnTAFLEe7kzH7GShrkBn040GvOc3j2MlBKcQY3OGFJaODOpzhiIlDBnIUJ6maOaojc1uTSxwacX0CjcbIXsESmagFRMhtjPWSOSgsZ1WI0/kkw4vViYqZMPUBJP+EbTLEyrjPAFVoHFhZrojNrc6H9cDfE2prQl3ReqhExdXwhlb9XQicUFBkcFigd4jJUnYIQbjEVOpxRxobqqa39ObdmCMYDHOXeT4Ob+1HnuvOzO3p4fOhuqF7Kyh5kWkHOUt79uqICoomRH0sR7WlGCVZdrhKstmZPASpkGowEEyi5AHzjmOUPUsHvRBsI5ZSMOCvI3aAsq1EJbo+DgYmSM1gEggfQG/S/WZ4Q5xjCAmEhdJBGpcNm0fFKI8Kwp9XwXk7T933qsU1Njo0JjRjlTl8pXUvOoqUJaG+be+AMdIw8rYrTkMXORJqAGXecxCcwXtIQ0VoJsyxSFVl7UmsxDtGtf6sCdrqbSqt19/DjsQX0WwMLQ6BDurOaH7p1+/3HvvOTUbgstKrQGcppZDOxjbE1ygbjpe3tXIR2FEEbRUWDg3SWnClHKDSJimAm3tD/mwHLl2YyDqmkkyTidrinaA4t0ZE1v+fCHJHQOkfAJRxQv/Tpxfq+fbaGF2jRnLat6+oTotcmKxbgwLamIiEbuDaTXOeJY9rOqEL7uYO3ve3crcMHadnHkmOo17cQJrCPucOSz7bKiaT9pg08dHagZbdK0/FwiRXg5cTKBdBH7Ry3+nR3tjswljKsTTBgunaUbNqjV1yO8E1oo3Ox5b4cVVX8li6G/M8DPdpiVPm+76gt/l2gd8/Bs/Vv1uZBK7EOc1iRypbkKsXvVyIK0mvJl3xVG1NOJkTWdXXJftXHttV2wK+Kf5tO0P8EnxaAXxV8sOH8eIN3kF+l4lekq4uQZMbteyQDv+QaVt4/jGckew==</source>
  </file>
  <file path="oe-poetry-client/src/Services/Parser.php" generated-path="oe-poetry-client.src.Services.Parser.html" hash="ae1c5133ed58fb2715a522b24011882d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ParserException">\EC\Poetry\Exceptions\ParserException</namespace-alias>
    <namespace-alias name="DomCrawler">\Symfony\Component\DomCrawler</namespace-alias>
    <class final="false" abstract="false" namespace="EC\Poetry\Services" line="13" package="EC\Poetry\Services">
      <extends>\Symfony\Component\DomCrawler\Crawler</extends>
      <name>Parser</name>
      <full_name>\EC\Poetry\Services\Parser</full_name>
      <docblock line="13">
        <description>Class Crawler</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Services"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="22" package="EC\Poetry\Services">
        <name>getContent</name>
        <full_name>\EC\Poetry\Services\Parser::getContent()</full_name>
        <docblock line="22">
          <description>Get node content given its xPath expression or null if none found.</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="string" variable="$xpath">
            <type>string</type>
          </tag>
          <tag name="return" line="22" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xpath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="39" package="EC\Poetry\Services">
        <name>getAttribute</name>
        <full_name>\EC\Poetry\Services\Parser::getAttribute()</full_name>
        <docblock line="39">
          <description>Get node attribute given its xPath expression or null if none found.</description>
          <long-description></long-description>
          <tag name="param" line="39" description="" type="string" variable="$xpath">
            <type>string</type>
          </tag>
          <tag name="param" line="39" description="" type="string" variable="$attribute">
            <type>string</type>
          </tag>
          <tag name="return" line="39" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xpath</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attribute</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="56" package="EC\Poetry\Services">
        <name>getOuterContent</name>
        <full_name>\EC\Poetry\Services\Parser::getOuterContent()</full_name>
        <docblock line="56">
          <description>Get content, including outer element.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="string" variable="$xpath">
            <type>string</type>
          </tag>
          <tag name="return" line="56" description="" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xpath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="73" package="EC\Poetry\Services">
        <name>outerHtml</name>
        <full_name>\EC\Poetry\Services\Parser::outerHtml()</full_name>
        <docblock line="73">
          <description>Get outer HTML of current node.</description>
          <long-description></long-description>
          <tag name="return" line="73" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Services" line="92" package="EC\Poetry\Services">
        <name>eachComponent</name>
        <full_name>\EC\Poetry\Services\Parser::eachComponent()</full_name>
        <docblock line="92">
          <description>Run closure on all components in callee $this context.</description>
          <long-description></long-description>
          <tag name="param" line="92" description="" type="string" variable="$xpath">
            <type>string</type>
          </tag>
          <tag name="param" line="92" description="" type="\Closure" variable="$closure">
            <type>\Closure</type>
          </tag>
          <tag name="param" line="92" description="" type="object" variable="$callee">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xpath</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>\Closure</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callee</name>
          <default></default>
          <type>object</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9Vd9P2zAQfs9fcZMqNa0o8EzXMlTQmLQfaPAwifDgutfWm2NHtlNaAf/7zk7ShrQUbWjzA6i+u+/O33d3eX+azbMoUixFmzGOcDFKrjQ6s0qu0SwER9uPotzWDRdLjpkTWtnkihmLZn3RD57Xq3Sq1SoZ6TTTCpVLznU6MuxeoiGwo243gi6MJLMWymu68HcfqIRfbLarCjIfRTzEFEkBlw7VxMIGPKnQHiKgExL504WP6EDpCQLXiqIczMQCFQhnYXnF3JzAMoPW0htAG1C5lCCmFKIQpjpXk8MSqQKkSg1LwToj1Axay4xAmi4GXW5U6fPoMUvTUfif5WMpOExzxT13MEM3KqqLC7xOcCve4g/RUfvlT5mh5ebC9oZTIR2aH/49FUJvOHepjDv9ddgTcOb4HOLkk1owKSZnZpanlHQtIrSwszuPf0INKSr+vsg1c/Tyce7wX7LdtK2Tvl2NswqqZPOght7UZmOxMNgrCLWtYdzFt5uQu5o+xEP8DtPMreIaZucFRWout8d3MBgMoN2G04LSk4a53gQoaVDfKHI5SwcgFJf5xNOvKRVNpkTfUW+YGV/EY+H4mkrffMo/HZxWaND9QhH2V/KKj2vqhNhqhwwKmN5Q3ys055qHOeoNLVvg5c2Xz3EwU/RO5UqU/z2ZhUK+PNBT4Lkx/im+0C25nk3MXhkC6GXYNA3qQztzmmnSxnO91cgK76HxFYnbN3N8VhpIYR0IC2EwDtv1fbZhtyHqLv1afh3+hXCVaD68/wK733MFXGqbGwTihNEE8uoLaGlGSF4pEYvyiuFZvjIjsHvXJaMyTavM17Dr8U/kLrRqSLlXO2R8vv5SrzfdVoqDCmxr8+3bdYQdV1AnJ2OhJvEW4Aa5U1H7FP0GtKOE5Q==</source>
  </file>
  <file path="oe-poetry-client/src/Traits/DispatchExceptionEventTrait.php" generated-path="oe-poetry-client.src.Traits.DispatchExceptionEventTrait.html" hash="21a6161daf9eab2dfb2bfd868481fe3a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ExceptionEvent">\EC\Poetry\Events\ExceptionEvent</namespace-alias>
    <namespace-alias name="PoetryException">\EC\Poetry\Exceptions\PoetryException</namespace-alias>
    <trait namespace="EC\Poetry\Traits" line="13" package="EC\Poetry\Traits">
      <name>DispatchExceptionEventTrait</name>
      <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait</full_name>
      <docblock line="13">
        <description>Trait DispatchExceptionEventTrait</description>
        <long-description></long-description>
        <tag name="package" line="13" description="EC\Poetry\Traits"/>
      </docblock>
      <property static="false" visibility="private" namespace="EC\Poetry\Traits" line="18" package="EC\Poetry\Traits">
        <name>$eventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::eventDispatcher</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="18" description="" type="\Symfony\Component\EventDispatcher\EventDispatcher" variable="">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="EC\Poetry\Traits" line="24" package="EC\Poetry\Traits">
        <name>dispatchExceptionEvent</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::dispatchExceptionEvent()</full_name>
        <docblock line="24">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="\EC\Poetry\Exceptions\PoetryException" variable="$exception">
            <type>\EC\Poetry\Exceptions\PoetryException</type>
          </tag>
          <tag name="param" line="24" description="" type="boolean" variable="$silent">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\EC\Poetry\Exceptions\PoetryException</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$silent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Poetry\Traits" line="37" package="EC\Poetry\Traits">
        <name>getEventDispatcher</name>
        <full_name>\EC\Poetry\Traits\DispatchExceptionEventTrait::getEventDispatcher()</full_name>
        <docblock line="37">
          <description>Get EventDispatcher property.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="Property value." type="\Symfony\Component\EventDispatcher\EventDispatcher">
            <type>\Symfony\Component\EventDispatcher\EventDispatcher</type>
          </tag>
        </docblock>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="24" code="PPC:ERR-50008">No summary for method dispatchExceptionEvent()</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $eventDispatcher</error>
    </parse_markers>
    <source>eJydkk1vwjAMhu/5FT7sUBAfd9jYJlbttAmJHXsJxUC1NokSt1s18d+XhhRoYNq0SFWT+M1j+01u79VOMSZ4gUbxFCGeJwuJpOvkTfOMzJSx0pxvxxUKMkn8maKiTAq3noaiNmr8znHD8sb9PoM+OD48ZTYvpbsuz8WsqNE92Lre+fayNBscM/qV8sXADpe0GRZYcQ3Jsi42UtTJXBZKCqs+dNaSUIdrf3zs/kpnFSeEG+yKbHthNsU1LyD5izkW106D4yspc7gxWW6zBYVIwpRwDZtSpA6yvmpG9HOuQUuGO9jw3GDPoQ/GNePQpY0K/IAAe8L0psGB4cwgLR058hnONbTLzHC2RQqMjnrDWdtD1M02mbw+vsQDz/ew/YXnz0gQQBujFGqqR150NFgjlVr8/0HYb+HZUPG8xFH3gspVnqWn27nWb2C3r8gbdPHCDj3v2TfT3zXa</source>
  </file>
  <file path="backtrac-php-client/phing/BacktracTasks/BacktracCompareTask.php" generated-path="backtrac-php-client.phing.BacktracTasks.BacktracCompareTask.html" hash="6827cd61e35c12d44bf89f71ffe56a86" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="BacktracTasks" line="5" package="Default">
      <extends>\Task</extends>
      <name>BacktracCompareTask</name>
      <full_name>\BacktracTasks\BacktracCompareTask</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="5" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="BacktracTasks" line="7" package="Default">
        <name>$auth_token</name>
        <full_name>\BacktracTasks\BacktracCompareTask::auth_token</full_name>
        <default></default>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="14" package="Default">
        <name>$check_results</name>
        <full_name>\BacktracTasks\BacktracCompareTask::check_results</full_name>
        <default>true</default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="21" package="Default">
        <name>$compare_mode</name>
        <full_name>\BacktracTasks\BacktracCompareTask::compare_mode</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="28" package="Default">
        <name>$environment</name>
        <full_name>\BacktracTasks\BacktracCompareTask::environment</full_name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="35" package="Default">
        <name>$project_id</name>
        <full_name>\BacktracTasks\BacktracCompareTask::project_id</full_name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="9" package="Default">
        <name>setAuth_token</name>
        <full_name>\BacktracTasks\BacktracCompareTask::setAuth_token()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="16" package="Default">
        <name>setCheck_results</name>
        <full_name>\BacktracTasks\BacktracCompareTask::setCheck_results()</full_name>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bool</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="23" package="Default">
        <name>setCompare_mode</name>
        <full_name>\BacktracTasks\BacktracCompareTask::setCompare_mode()</full_name>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="30" package="Default">
        <name>setEnvironment</name>
        <full_name>\BacktracTasks\BacktracCompareTask::setEnvironment()</full_name>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="37" package="Default">
        <name>setProject_id</name>
        <full_name>\BacktracTasks\BacktracCompareTask::setProject_id()</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="42" package="Default">
        <name>init</name>
        <full_name>\BacktracTasks\BacktracCompareTask::init()</full_name>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="46" package="Default">
        <name>main</name>
        <full_name>\BacktracTasks\BacktracCompareTask::main()</full_name>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="5" code="PPC:ERR-50005">No summary for class \BacktracTasks\BacktracCompareTask</error>
      <error line="9" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setAuth_token</error>
      <error line="9" code="PPC:ERR-50008">No summary for method setAuth_token()</error>
      <error line="16" code="PPC:ERR-50015">Argument $bool is missing from the Docblock of setCheck_results</error>
      <error line="16" code="PPC:ERR-50008">No summary for method setCheck_results()</error>
      <error line="23" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setCompare_mode</error>
      <error line="23" code="PPC:ERR-50008">No summary for method setCompare_mode()</error>
      <error line="30" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setEnvironment</error>
      <error line="30" code="PPC:ERR-50008">No summary for method setEnvironment()</error>
      <error line="37" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setProject_id</error>
      <error line="37" code="PPC:ERR-50008">No summary for method setProject_id()</error>
      <error line="42" code="PPC:ERR-50008">No summary for method init()</error>
      <error line="46" code="PPC:ERR-50008">No summary for method main()</error>
      <error line="7" code="PPC:ERR-50007">No summary for property $auth_token</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $check_results</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $compare_mode</error>
      <error line="28" code="PPC:ERR-50007">No summary for property $environment</error>
      <error line="35" code="PPC:ERR-50007">No summary for property $project_id</error>
    </parse_markers>
    <source>eJyNVNuO2jAUfM9XnK6QSBB035eWqqVU2reqF/UFCRnnhLhx7Mh2YKsV/147ITfqQiyBMJ4znjMe+92HIi2CQJAcdUEowidCM6MI/UF0puE1CMAOyonW7dJa5gVR6BCALwZFrGHrZhX2tfp2o1DsSAzChJQm3RmZoVgG3Wq554xCUgpqmBSg0XxsceFEGxW12I7TjYlJmV6sOlZ4Dw6/bFHn4F8RNEWa7RTqkhttK4wq8bacdb8inOyl5HckXe9R1dyRVZu5y2V8T04POcafPvMoh1AcmZIiR2FuK9l0wDFCeryjdBRK/kZqdiy+LeNrixujomO9KeJqGyaYCX3MN2pywoS3plJDOauNEHiC7Wa9/WkY19vmcm3X1Xo4KPK2Mf8fpLsYA0S0HEwfZ7MhwQwuCQNKON9bPRqeriCPgzlLIHzDxI4oRf6EntjNoV6aNn8yo5En0zlMtSCFTqWZRlF0ZVHVSsyS5Lk6qtqwlrgXPu3bM1qs6gu4WAmXoD7reTBDrtG1gHlhWvm9sHqFmVTJU312aykSdigVcae+eaFYuB/hQ08hWFn2aTWowDZb8hj2CFLYTwIxHpHLwsHmNvwyLuv4SIs15MDEAYwEQzKExqyH6F4/46x0pN8vnP5z87gx2tdLLZeHcNrEOgOnAp4/w9MU3jaaot4Fd8OTyV+EGUisJ82rak9MIMYYjwin71n2pq0x5mR3+yLVt+bNb2X6u61/nYNz8BdD/wLC</source>
  </file>
  <file path="backtrac-php-client/phing/BacktracTasks/BacktracSetUrlTask.php" generated-path="backtrac-php-client.phing.BacktracTasks.BacktracSetUrlTask.html" hash="53dddc8f47e0656cdb56b765cdbd4177" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="BacktracTasks" line="5" package="Default">
      <extends>\Task</extends>
      <name>BacktracSetUrlTask</name>
      <full_name>\BacktracTasks\BacktracSetUrlTask</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="5" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="BacktracTasks" line="7" package="Default">
        <name>$auth_token</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::auth_token</full_name>
        <default></default>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="14" package="Default">
        <name>$projectId</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::projectId</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="21" package="Default">
        <name>$environment</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::environment</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="28" package="Default">
        <name>$url</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::url</full_name>
        <default></default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="BacktracTasks" line="35" package="Default">
        <name>$uris</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::uris</full_name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="9" package="Default">
        <name>setAuth_token</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::setAuth_token()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="16" package="Default">
        <name>setProject_id</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::setProject_id()</full_name>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="23" package="Default">
        <name>setEnvironment</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::setEnvironment()</full_name>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="30" package="Default">
        <name>setUrl</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::setUrl()</full_name>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="37" package="Default">
        <name>setUris</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::setUris()</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$arr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="42" package="Default">
        <name>init</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::init()</full_name>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BacktracTasks" line="46" package="Default">
        <name>main</name>
        <full_name>\BacktracTasks\BacktracSetUrlTask::main()</full_name>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="5" code="PPC:ERR-50005">No summary for class \BacktracTasks\BacktracSetUrlTask</error>
      <error line="9" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setAuth_token</error>
      <error line="9" code="PPC:ERR-50008">No summary for method setAuth_token()</error>
      <error line="16" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setProject_id</error>
      <error line="16" code="PPC:ERR-50008">No summary for method setProject_id()</error>
      <error line="23" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setEnvironment</error>
      <error line="23" code="PPC:ERR-50008">No summary for method setEnvironment()</error>
      <error line="30" code="PPC:ERR-50015">Argument $str is missing from the Docblock of setUrl</error>
      <error line="30" code="PPC:ERR-50008">No summary for method setUrl()</error>
      <error line="37" code="PPC:ERR-50015">Argument $arr is missing from the Docblock of setUris</error>
      <error line="37" code="PPC:ERR-50008">No summary for method setUris()</error>
      <error line="42" code="PPC:ERR-50008">No summary for method init()</error>
      <error line="46" code="PPC:ERR-50008">No summary for method main()</error>
      <error line="7" code="PPC:ERR-50007">No summary for property $auth_token</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $projectId</error>
      <error line="21" code="PPC:ERR-50007">No summary for property $environment</error>
      <error line="28" code="PPC:ERR-50007">No summary for property $url</error>
      <error line="35" code="PPC:ERR-50007">No summary for property $uris</error>
    </parse_markers>
    <source>eJyNk1FrwjAQx9/7Ke6h0BbUL+Dm2ETYYDBhk70UJMZsZta05K46EL/7kpa2cdbaPIS298v//rm73j1km8zzFNsJzBgX8MT4ljTjHwy3CEfPA7N4whDr0LughU4sAOKXhFojxPatQI/Fblem5Z6RAJ/ltFlSuhVq7DXRfJVIDl+54iRTBSjoseZCH0lHNdto2uXTRuJw0qjCPVh+XFMn79JEptMfwell3e1hXmJLue7jIavpXh6E2kudqp1Q1O1i1oB9bDi6vXzkOunOb9rbJ6/R6ZlP4q2EEkOf6dsZJdqUhmxP+U9aKklhm2bHmR2TqvVM4YMnsiyzEgeIZ9N4QTLBuPo34mkRD88OORdoJmZwDWkG+4yInAoW9EGsUJryXrXyWQJhQAJpaB+DgdO6Qcv4DNxCR+O2qw8npl+VdGXiwlypkqTfYVD5AXdMAxi1Te/IBOxUmRRAqUvZryOYP8+Xs7fXyG1+uZ+8Px2rUOA=</source>
  </file>
  <file path="backtrac-php-client/src/Client.php" generated-path="backtrac-php-client.src.Client.html" hash="6aedfc0110db3992d9e16bb7a1915100" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Utils\Backtrac" line="5" package="Default">
      <extends/>
      <name>Client</name>
      <full_name>\EC\Utils\Backtrac\Client</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="5" description="Default"/>
      </docblock>
      <constant namespace="EC\Utils\Backtrac" line="8" package="Default">
        <name>BACKTRAC_API_ENDPOINT</name>
        <full_name>\EC\Utils\Backtrac\Client::BACKTRAC_API_ENDPOINT</full_name>
        <value>'https://backtrac.io/api'</value>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Utils\Backtrac" line="10" package="Default">
        <name>COMPARE_PROD_STAGE</name>
        <full_name>\EC\Utils\Backtrac\Client::COMPARE_PROD_STAGE</full_name>
        <value>'compare_prod_stage'</value>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Utils\Backtrac" line="11" package="Default">
        <name>COMPARE_PROD_DEV</name>
        <full_name>\EC\Utils\Backtrac\Client::COMPARE_PROD_DEV</full_name>
        <value>'compare_prod_dev'</value>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Utils\Backtrac" line="12" package="Default">
        <name>COMPARE_STAGE_DEV</name>
        <full_name>\EC\Utils\Backtrac\Client::COMPARE_STAGE_DEV</full_name>
        <value>'compare_stage_dev'</value>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Utils\Backtrac" line="14" package="Default">
        <name>ENV_PROD</name>
        <full_name>\EC\Utils\Backtrac\Client::ENV_PROD</full_name>
        <value>'production'</value>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Utils\Backtrac" line="15" package="Default">
        <name>ENV_STAGE</name>
        <full_name>\EC\Utils\Backtrac\Client::ENV_STAGE</full_name>
        <value>'staging'</value>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="EC\Utils\Backtrac" line="16" package="Default">
        <name>ENV_DEV</name>
        <full_name>\EC\Utils\Backtrac\Client::ENV_DEV</full_name>
        <value>'development'</value>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="EC\Utils\Backtrac" line="21" package="Default">
        <name>$projectId</name>
        <full_name>\EC\Utils\Backtrac\Client::projectId</full_name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="21" description="&lt;p&gt;Backtrac project id&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="EC\Utils\Backtrac" line="25" package="Default">
        <name>$httpClient</name>
        <full_name>\EC\Utils\Backtrac\Client::httpClient</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\RestClient" variable="$httpClient">
            <type>\RestClient</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="EC\Utils\Backtrac" line="29" package="Default">
        <name>$apiKey</name>
        <full_name>\EC\Utils\Backtrac\Client::apiKey</full_name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="29" description="&lt;p&gt;Backtrac.io api key&lt;/p&gt;" type="string" variable="$token">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="36" package="Default">
        <name>__construct</name>
        <full_name>\EC\Utils\Backtrac\Client::__construct()</full_name>
        <docblock line="36">
          <description>Backtrac ls teClient constructor.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;string Backtrac project id&lt;/p&gt;" type="" variable="$projectId"/>
          <tag name="param" line="36" description="&lt;p&gt;string Backtrac api key&lt;/p&gt;" type="" variable="$apiKey"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$projectId</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$apiKey</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="57" package="Default">
        <name>compareEnvironments</name>
        <full_name>\EC\Utils\Backtrac\Client::compareEnvironments()</full_name>
        <docblock line="57">
          <description>Request a compare between 2 environments</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;string One of the self::COMPARE_* constants&lt;/p&gt;" type="" variable="$method"/>
          <tag name="return" line="57" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="57" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="73" package="Default">
        <name>takeSnapshot</name>
        <full_name>\EC\Utils\Backtrac\Client::takeSnapshot()</full_name>
        <docblock line="73">
          <description>Request a snapshot of environment</description>
          <long-description></long-description>
          <tag name="param" line="73" description="&lt;p&gt;One of the self::COMPARE_* constants&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="73" description="&lt;p&gt;One of the self::ENV_* constants&lt;/p&gt;" type="string" variable="$env">
            <type>string</type>
          </tag>
          <tag name="return" line="73" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="73" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$env</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="103" package="Default">
        <name>customCompare</name>
        <full_name>\EC\Utils\Backtrac\Client::customCompare()</full_name>
        <docblock line="103">
          <description>Request a compare between 2 custom URLs</description>
          <long-description></long-description>
          <tag name="param" line="103" description="" type="" variable="$diffName"/>
          <tag name="param" line="103" description="" type="\EC\Utils\Backtrac\Website" variable="$site1">
            <type>\EC\Utils\Backtrac\Website</type>
          </tag>
          <tag name="param" line="103" description="" type="\EC\Utils\Backtrac\Website" variable="$site2">
            <type>\EC\Utils\Backtrac\Website</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$diffName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$site1</name>
          <default></default>
          <type>\EC\Utils\Backtrac\Website</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$site2</name>
          <default></default>
          <type>\EC\Utils\Backtrac\Website</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="124" package="Default">
        <name>checkResponse</name>
        <full_name>\EC\Utils\Backtrac\Client::checkResponse()</full_name>
        <docblock line="124">
          <description>Checks an API response and return the decoded object, or throw an exception if failed.</description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="\RestClient" variable="$client">
            <type>\RestClient</type>
          </tag>
          <tag name="return" line="124" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="124" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$client</name>
          <default></default>
          <type>\RestClient</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="141" package="Default">
        <name>setWebsite</name>
        <full_name>\EC\Utils\Backtrac\Client::setWebsite()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="141" description="" type="\EC\Utils\Backtrac\Website" variable="$website">
            <type>\EC\Utils\Backtrac\Website</type>
          </tag>
          <tag name="return" line="141" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="141" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$website</name>
          <default></default>
          <type>\EC\Utils\Backtrac\Website</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="186" package="Default">
        <name>getResult</name>
        <full_name>\EC\Utils\Backtrac\Client::getResult()</full_name>
        <docblock line="186">
          <description>Gets a job / diff result</description>
          <long-description>Results is (decoded ) :

{"status":"success","result":{"message":"Diff is completed","result":"Amount of differences: 100 %"}}</long-description>
          <tag name="param" line="186" description="" type="" variable="$id"/>
          <tag name="return" line="186" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="204" package="Default">
        <name>waitForResults</name>
        <full_name>\EC\Utils\Backtrac\Client::waitForResults()</full_name>
        <docblock line="204">
          <description>Wait for the end of the diff to return the result :</description>
          <long-description>Highly experimental, relying on "Diff is completed" text
is unreliable</long-description>
          <tag name="param" line="204" description="" type="" variable="$id"/>
          <tag name="param" line="204" description="" type="integer" variable="$timeout">
            <type>integer</type>
          </tag>
          <tag name="return" line="204" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$timeout</name>
          <default>10</default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="5" code="PPC:ERR-50005">No summary for class \EC\Utils\Backtrac\Client</error>
      <error line="141" code="PPC:ERR-50008">No summary for method setWebsite()</error>
      <error line="25" code="PPC:ERR-50007">No summary for property $httpClient</error>
    </parse_markers>
    <source>eJztWVlz2kgQfvev6FDeArxgbB7J4o2D2cSVrO0iTvIQu1SDNBjFQtJqRj7K8X/f7pmR0InlHPu080AB6ru/Pgb++DNchltbPltxETKbw3Ry8VG6nrh4zexrGTEbHra2AI/tMSFg4rncl+qLB/VKZzCA10xw4L4TBq4vIY683fSpHfhCwuvDybvz2eHEOjw7tqYnR2enxyfnMIb2UspQjAaDudG36wYDFrrtl1nxk2AVsohDEEoXxRWFT07/PjucTa2z2emR9eH88M2UJNuayQqjwLGEZFc8I7SC8Wj6qcTm8JtaJqWoyKX0FNjQgal/40aBv8LgiYK46cknpZ+kkM7YJh9LWoksdY20uP5VJZExCE3gXhCSRiRb27Kzk76HHXh1wyIQMkJhkGYcrfjKbQmukyEdpO/DyL1hksO2oTt2Xm4UfzHjQmrgwDalOwOikux47rl2lmyzbGP6tgyuuZ96gBgCxBBc8/vNHiDRO35fH540JJ4AyY0PKtQRpimIdnMGIQDYKhOWZoFN+bQxJaaNjuhwLWJfgQYsKzWus7ajl8jupozr4qWzLZeu6B8YA8bruFQQrb0bVyIgQ7pOItL6/DaLhE73CZb+gSn2L+1Y8MjCskIkXxK0p5N+0k76Z2/P+pP3x9OT88He7n67uVAbm5RlPimxXy6bMy85c3hk+HJcdNqHts1D2YbxAbRZGGKKGDEOvgos7F6Z/q6PAe9jkhVLLhs54mdYOMeGbKGLykTBvcVoVNmC1xIfa6tgxv+JMXHAwHQ5mHN5y7HghtjzKxob7FThe8XlMkiL4tTHdr4AueTGvKSt7ugCY3mB8CriMo58WLl3PF8+chkFtwIupncUdXS/UakYV7KNuWNMrC0TjCfhb2BgP2jDbrksdpFAPdDC8ikzThgme8nta6yJEB3mnYp0hoGQnRJeyI7cl93u89IofBaKZSApAZkEbs5f0mpNGp+dv7wUVFsWQePrP0q/ZNf8gwlDkveeNgsz3K6DgLuADl+F8r5DpN1u4TEdZY9ud6lJnXYGZ6AiwSWPwBXokBAUERmoICS43G0XGuQjcE9w0v/C9S0WRUzb0AP9vmTHOqS4EZSbzvqx2io2EdB2UsBbY8dLVHRa6XDLoA8wFbHnYG+BQAMjs8L0YL0aQUBzXy1ArZL4yqhVGPsTapnOT6nnxJ5yDujQ0LC4bwcO75RnDZ02RlFPDsJDJclltxypYqh+cBLYsZDBCj7O3j81CBx3sTjBCqh49pnPhUubGb3uP0UwbNbplWHmCtFJtfcKygqfhz8+BbRiy4Sq/YsmQTnhDRCDfPsaMsr3/kEt/Ih0uCYdbiIV/r5FV8mcZPqiln5YoB9upKfUZRjKODKngPZm43FCKRDAfMD9CNOjc4GfnSRXNKgcTmF1IJhTonvUi3TfQz6edD0aEwvmetypuiDk7kN28S708xedHLQqlDeYdbZBYRKV5ww+krAO5yLCHoEBLo23fI2l9GONZh32CkNe1pmcUsC3b2t5/QOcHDIW8GI8hpaIcVEXotXcG4KGzTzPpBdGoKr/CbMeKys/IW4CzmL3u9VvfiVuBJdGXaeotgFiDGX/oG5NylGkdxSzrjRYfbLs/+9AubO5tJqMr8I9Ey0UlTfdXHzVdZd++Xoy0IpS/yL3VMwVKfldoCxehR0mWYWJyvQvObBcksiKSztdltVYSYkrBt3lRisURIsFEEeuqK4AZfPvVXE1BrmiZJEryhG7bNJtmu4Z8XetGcqX75m6b7jEmQtfgzkMgAY6jYrYq7uLztRDQRenTjKKuzCqoX5o6W7fGqWtvtfS8lujh9YKv0AM4tMjUowyaVXz8GbmZOhah6sg9tVdmezjEbrMxQj29/bgt9bjY43uZNkt/NZX06Tr2/AVl9rpDop6cifVRuuadn/wt4c6JHxHlj8zV8JC7Urqb4Lk2q8SjjffzIKlPahN6Vv3aund46oV8silrsi8HvJ493SHxnBVpBIkv8ttWPg09pHHZXOPPy99+lv6j2NbovogbrS61Wf3FgPzVxAZWFOKe6lkTOj+Xl3Gb5e4f0CStzxI1B6CH/oHBuF62ylHpqorCY/zsJPY0GiRqbIhiwr9+rj1L0Xa6f0=</source>
  </file>
  <file path="backtrac-php-client/src/Website.php" generated-path="backtrac-php-client.src.Website.html" hash="471ed98d62af19a8c1dfb90e7e34068c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="EC\Utils\Backtrac" line="5" package="Default">
      <extends/>
      <name>Website</name>
      <full_name>\EC\Utils\Backtrac\Website</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="5" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="EC\Utils\Backtrac" line="10" package="Default">
        <name>$env</name>
        <full_name>\EC\Utils\Backtrac\Website::env</full_name>
        <default></default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="10" description="&lt;p&gt;Website environment&lt;/p&gt;" type="string" variable="$env">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="EC\Utils\Backtrac" line="15" package="Default">
        <name>$name</name>
        <full_name>\EC\Utils\Backtrac\Website::name</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="15" description="&lt;p&gt;Website name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="EC\Utils\Backtrac" line="20" package="Default">
        <name>$url</name>
        <full_name>\EC\Utils\Backtrac\Website::url</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="20" description="&lt;p&gt;Website url&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="EC\Utils\Backtrac" line="25" package="Default">
        <name>$uris</name>
        <full_name>\EC\Utils\Backtrac\Website::uris</full_name>
        <default></default>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="25" description="&lt;p&gt;Website uris&lt;/p&gt;" type="array" variable="$uris">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="EC\Utils\Backtrac" line="33" package="Default">
        <name>__construct</name>
        <full_name>\EC\Utils\Backtrac\Website::__construct()</full_name>
        <docblock line="33">
          <description>Website constructor</description>
          <long-description></long-description>
          <tag name="param" line="33" description="" type="" variable="$env"/>
          <tag name="param" line="33" description="" type="" variable="$name"/>
          <tag name="param" line="33" description="" type="" variable="$url"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$env</name>
          <default>'development'</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$uris</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="5" code="PPC:ERR-50005">No summary for class \EC\Utils\Backtrac\Website</error>
      <error line="33" code="PPC:ERR-50014">Name of argument $name does not match with the DocBlock's name $env in __construct()</error>
      <error line="33" code="PPC:ERR-50014">Name of argument $url does not match with the DocBlock's name $name in __construct()</error>
      <error line="33" code="PPC:ERR-50014">Name of argument $env does not match with the DocBlock's name $url in __construct()</error>
      <error line="33" code="PPC:ERR-50015">Argument $uris is missing from the Docblock of __construct</error>
      <error line="33" code="PPC:ERR-50014">Name of argument $uris does not match with the DocBlock's name $url in __construct()</error>
    </parse_markers>
    <source>eJyNkl1OAyEQx985xTw0qW626QF01Wh6BOODNc0UsZ3IAgF2E9P07gK7i9Ws3c4DGebjx8Cf23uzN4wprIUzyAWsntbPnqRbPyL/9BY5HBiDYFyic/Aito68SJFDWqMtiyL7UMBDixact6R2MBOqHbog+GS1qoXyJ/XL7JtmK4mnnht2ET0OnvFxc5YbCy4EN1ZmbvDPYkN+gorW4lcsJHdCJTeBJfc/d8BwrcLMDffa/jrWoMU6PeVY+M9T5fjEVT8axT1pBZtNPvcqwcrUW3Z6VzB/F62Q2kSp52V/8wpe364z8uf7RJv5PbnFXdfdfYCRdJK7GoQcKYiyVb0io+k0Rv+0Q/LIuvXIvgEQYMMd</source>
  </file>
  <file path="phpdrush/src/PhpDrush.php" generated-path="phpdrush.src.PhpDrush.html" hash="138e8240bc9afdaf080547de8cc6f9d9" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RedisClient">\RedisClient\RedisClient</namespace-alias>
    <class final="false" abstract="false" namespace="PhpDrush" line="11" package="PhpDrush">
      <extends/>
      <name>PhpDrush</name>
      <full_name>\PhpDrush\PhpDrush</full_name>
      <docblock line="11">
        <description>Class PhpDrush</description>
        <long-description></long-description>
        <tag name="package" line="11" description="PhpDrush"/>
      </docblock>
      <property static="false" visibility="private" namespace="PhpDrush" line="17" package="PhpDrush">
        <name>$drushLocation</name>
        <full_name>\PhpDrush\PhpDrush::drushLocation</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;location&lt;/p&gt;" type="\PhpDrush\Drush" variable="">
            <type>\PhpDrush\Drush</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="PhpDrush" line="22" package="PhpDrush">
        <name>$siteLocation</name>
        <full_name>\PhpDrush\PhpDrush::siteLocation</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="&lt;p&gt;location&lt;/p&gt;" type="\PhpDrush\Site" variable="">
            <type>\PhpDrush\Site</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="PhpDrush" line="28" package="PhpDrush">
        <name>$noColor</name>
        <full_name>\PhpDrush\PhpDrush::noColor</full_name>
        <default>true</default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="28" description="&lt;p&gt;or disable coloring in drush output&#10;By default disabled&lt;/p&gt;" type="\PhpDrush\Enable" variable="">
            <type>\PhpDrush\Enable</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="PhpDrush" line="33" package="PhpDrush">
        <name>$alias</name>
        <full_name>\PhpDrush\PhpDrush::alias</full_name>
        <default>null</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="33" description="&lt;p&gt;Alias to run commands on ( for targeting multiple sites )&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="40" package="PhpDrush">
        <name>__construct</name>
        <full_name>\PhpDrush\PhpDrush::__construct()</full_name>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="40" description="" type="" variable="$drushLocation"/>
          <tag name="param" line="40" description="" type="" variable="$siteLocation"/>
          <tag name="throws" line="40" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$drushLocation</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$siteLocation</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="PhpDrush" line="65" package="PhpDrush">
        <name>runDrush</name>
        <full_name>\PhpDrush\PhpDrush::runDrush()</full_name>
        <docblock line="65">
          <description>Run a drush command and throws an exception if failing</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Argument to pass to drush as a string&lt;/p&gt;" type="" variable="$arguments"/>
          <tag name="return" line="65" description="An array of all the lines returned by drush (including PHP warnings/errors)" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="65" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$arguments</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="95" package="PhpDrush">
        <name>getUpDbStatus</name>
        <full_name>\PhpDrush\PhpDrush::getUpDbStatus()</full_name>
        <docblock line="95">
          <description></description>
          <long-description></long-description>
          <tag name="return" line="95" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="95" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="117" package="PhpDrush">
        <name>updateDatabase</name>
        <full_name>\PhpDrush\PhpDrush::updateDatabase()</full_name>
        <docblock line="117">
          <description>Run a database upgrade</description>
          <long-description></long-description>
          <tag name="param" line="117" description="&lt;p&gt;Double check that updb did its job since rc code are for idiots (or sysadmins)&lt;/p&gt;" type="boolean|true" variable="$doubleCheck">
            <type>boolean</type>
            <type>true</type>
          </tag>
          <tag name="return" line="117" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="117" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$doubleCheck</name>
          <default>true</default>
          <type>boolean|true</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="141" package="PhpDrush">
        <name>registryRebuild</name>
        <full_name>\PhpDrush\PhpDrush::registryRebuild()</full_name>
        <docblock line="141">
          <description>Runs a registry rebuild</description>
          <long-description></long-description>
          <tag name="param" line="141" description="&lt;p&gt;Avoid clearing the cache after rr&lt;/p&gt;" type="boolean|false" variable="$noCacheClear">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="param" line="141" description="&lt;p&gt;Fire a professional bazooka ... Yes ... A bazooka mtf!&lt;/p&gt;" type="boolean|false" variable="$fireBazooka">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="141" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="141" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$noCacheClear</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fireBazooka</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="160" package="PhpDrush">
        <name>featuresRevert</name>
        <full_name>\PhpDrush\PhpDrush::featuresRevert()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="160" description="&lt;p&gt;List of features to revert&lt;/p&gt;" type="array" variable="$featureList">
            <type>array</type>
          </tag>
          <tag name="param" line="160" description="&lt;p&gt;If true, pass the --force argument&lt;/p&gt;" type="boolean|false" variable="$force">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="160" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="160" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$featureList</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$force</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="184" package="PhpDrush">
        <name>setMaintenanceMode</name>
        <full_name>\PhpDrush\PhpDrush::setMaintenanceMode()</full_name>
        <docblock line="184">
          <description>Set the maintenance mode for the site</description>
          <long-description></long-description>
          <tag name="param" line="184" description="&lt;p&gt;True to enable, False to disable&lt;/p&gt;" type="" variable="$bool"/>
          <tag name="return" line="184" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="184" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bool</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="198" package="PhpDrush">
        <name>setVariable</name>
        <full_name>\PhpDrush\PhpDrush::setVariable()</full_name>
        <docblock line="198">
          <description>Set a variable name</description>
          <long-description></long-description>
          <tag name="param" line="198" description="" type="" variable="$key"/>
          <tag name="param" line="198" description="" type="" variable="$value"/>
          <tag name="return" line="198" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="198" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="212" package="PhpDrush">
        <name>clearCache</name>
        <full_name>\PhpDrush\PhpDrush::clearCache()</full_name>
        <docblock line="212">
          <description>Run a clear cache</description>
          <long-description></long-description>
          <tag name="param" line="212" description="&lt;p&gt;Type of cache to clean ( default : all )&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="212" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="212" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'all'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="226" package="PhpDrush">
        <name>enableModules</name>
        <full_name>\PhpDrush\PhpDrush::enableModules()</full_name>
        <docblock line="226">
          <description>Enable one or multiple modules</description>
          <long-description></long-description>
          <tag name="param" line="226" description="&lt;p&gt;Either a string (single module) or an array&lt;/p&gt;" type="mixed" variable="$modules">
            <type>mixed</type>
          </tag>
          <tag name="return" line="226" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="226" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$modules</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="246" package="PhpDrush">
        <name>disableModules</name>
        <full_name>\PhpDrush\PhpDrush::disableModules()</full_name>
        <docblock line="246">
          <description>Disable one or multiple modules</description>
          <long-description></long-description>
          <tag name="param" line="246" description="&lt;p&gt;Either a string (single module) or an array&lt;/p&gt;" type="mixed" variable="$modules">
            <type>mixed</type>
          </tag>
          <tag name="return" line="246" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="246" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$modules</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="266" package="PhpDrush">
        <name>uninstallModules</name>
        <full_name>\PhpDrush\PhpDrush::uninstallModules()</full_name>
        <docblock line="266">
          <description>Uninstall one or multiple modules</description>
          <long-description></long-description>
          <tag name="param" line="266" description="&lt;p&gt;Either a string (single module) or an array&lt;/p&gt;" type="mixed" variable="$modules">
            <type>mixed</type>
          </tag>
          <tag name="return" line="266" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="266" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$modules</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="286" package="PhpDrush">
        <name>ev</name>
        <full_name>\PhpDrush\PhpDrush::ev()</full_name>
        <docblock line="286">
          <description>Eval PHP code in current drush session</description>
          <long-description></long-description>
          <tag name="param" line="286" description="" type="" variable="$toEval"/>
          <tag name="return" line="286" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="286" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$toEval</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="299" package="PhpDrush">
        <name>userLogin</name>
        <full_name>\PhpDrush\PhpDrush::userLogin()</full_name>
        <docblock line="299">
          <description>Get logged in URL</description>
          <long-description></long-description>
          <tag name="param" line="299" description="&lt;p&gt;User to log into&lt;/p&gt;" type="null" variable="$user">
            <type>null</type>
          </tag>
          <tag name="param" line="299" description="&lt;p&gt;Path to log into&lt;/p&gt;" type="null" variable="$path">
            <type>null</type>
          </tag>
          <tag name="return" line="299" description="URL" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="299" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="322" package="PhpDrush">
        <name>updatePassword</name>
        <full_name>\PhpDrush\PhpDrush::updatePassword()</full_name>
        <docblock line="322">
          <description>Update password for user by auth name</description>
          <long-description></long-description>
          <tag name="param" line="322" description="" type="" variable="$authname"/>
          <tag name="param" line="322" description="" type="" variable="$password"/>
          <tag name="return" line="322" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="322" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$authname</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="PhpDrush" line="337" package="PhpDrush">
        <name>validateDrushOutput</name>
        <full_name>\PhpDrush\PhpDrush::validateDrushOutput()</full_name>
        <docblock line="337">
          <description>Check drush output to handle drush [error]</description>
          <long-description></long-description>
          <tag name="param" line="337" description="" type="array" variable="$output">
            <type>array</type>
          </tag>
          <tag name="return" line="337" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="337" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$output</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="353" package="PhpDrush">
        <name>setColoring</name>
        <full_name>\PhpDrush\PhpDrush::setColoring()</full_name>
        <docblock line="353">
          <description>Enable/disable coloring drush output</description>
          <long-description></long-description>
          <tag name="param" line="353" description="" type="" variable="$color"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="366" package="PhpDrush">
        <name>userAdd</name>
        <full_name>\PhpDrush\PhpDrush::userAdd()</full_name>
        <docblock line="366">
          <description>Add user</description>
          <long-description></long-description>
          <tag name="param" line="366" description="" type="" variable="$username"/>
          <tag name="param" line="366" description="" type="" variable="$mail"/>
          <tag name="param" line="366" description="" type="" variable="$password"/>
          <tag name="return" line="366" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="366" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mail</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="389" package="PhpDrush">
        <name>userAddRole</name>
        <full_name>\PhpDrush\PhpDrush::userAddRole()</full_name>
        <docblock line="389">
          <description>Add role to user</description>
          <long-description></long-description>
          <tag name="param" line="389" description="" type="" variable="$username"/>
          <tag name="param" line="389" description="" type="" variable="$mail"/>
          <tag name="param" line="389" description="" type="" variable="$password"/>
          <tag name="return" line="389" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="389" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$role</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="404" package="PhpDrush">
        <name>getVariable</name>
        <full_name>\PhpDrush\PhpDrush::getVariable()</full_name>
        <docblock line="404">
          <description>Get variable value</description>
          <long-description></long-description>
          <tag name="param" line="404" description="" type="" variable="$variable"/>
          <tag name="return" line="404" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="404" description="" type="\PhpDrush\PhpDrushException">
            <type>\PhpDrush\PhpDrushException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$variable</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="429" package="PhpDrush">
        <name>sqlQuery</name>
        <full_name>\PhpDrush\PhpDrush::sqlQuery()</full_name>
        <docblock line="429">
          <description>Run SQLQuery</description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="PhpDrush" line="440" package="PhpDrush">
        <name>getRedisClient</name>
        <full_name>\PhpDrush\PhpDrush::getRedisClient()</full_name>
        <docblock line="440">
          <description>Get redis-cli</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="PhpDrush" line="472" package="PhpDrush">
        <name>redisFlushDB</name>
        <full_name>\PhpDrush\PhpDrush::redisFlushDB()</full_name>
        <docblock line="472">
          <description>Flush Redis DB</description>
          <long-description>Remove all keys from the current database</long-description>
          <tag name="throws" line="472" description="" type="\PhpDrush\ErrorResponseException">
            <type>\PhpDrush\ErrorResponseException</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="40" code="PPC:ERR-50015">Argument $alias is missing from the Docblock of __construct</error>
      <error line="40" code="PPC:ERR-50014">Name of argument $alias does not match with the DocBlock's name $siteLocation in __construct()</error>
      <error line="40" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="95" code="PPC:ERR-50008">No summary for method getUpDbStatus()</error>
      <error line="160" code="PPC:ERR-50008">No summary for method featuresRevert()</error>
      <error line="389" code="PPC:ERR-50014">Name of argument $role does not match with the DocBlock's name $mail in userAddRole()</error>
      <notice line="389" code="PPC:ERR-50013">Parameter $mail could not be found in userAddRole()</notice>
      <notice line="389" code="PPC:ERR-50013">Parameter $password could not be found in userAddRole()</notice>
      <error line="429" code="PPC:ERR-50015">Argument $query is missing from the Docblock of sqlQuery</error>
    </parse_markers>
    <source>eJztWntz27gR/9+fAtGpIeXRw06uj7OrXBzbuUvrXBw5TnuNfRqIhCTGFMkQpBxd4u/eXQAkAT4U2alvetN6EokiF4vF7m8fWOKv30fzaGsroAvGI+owcjqPjuKUz8mnrS1CUs7IiLkeP/Q9FiQX2vU+Ph9sb8Mn2SaHPuU8HyzvPQWGV3TGzNsD+HTK1GKynJ0YvKQxkZL4oUMTLwzUo4H4jmJvSRNG2i7SnCiS/Xo+Zx5QrmfDgeQLXI4DOvEZCWMCShCXTuiHsRfMiBcQIQcJ0yRKk2zYsxVx2ZSmfpINcetnD8JDZEWGJIlT1jA/T8RcB75HOUlCEqcBSLBY0MDlJAyITabAIqHxjCVIuIB5vQjExLVx0qmfmgp2QxKkvl8zcURjuihpufxQ113+LJnH4XVh5OOPDouq6k8nvueQaRo4+IyMx04YwDpTJ7HNObvmNF1TcLm2T5I38abEfuDx8dTzWYlNp5NT4Z8QkgTsuiqnbUn0JWHokyBMQLlp4FqdfTX8RpsM5kIpbClThzx8SIr5dbH7Ry9Gx4dvXo1+Hp8dnx6MDuCyb3GWoMF4H3zRKkk4GJCfYHIaELleMDbR6QvRyN6GCzMlsogbMh5cWAnwZQsE1oQRSpYwn4uojqgP+OYJ9X0xQlMBYT5nmba/RgNe4LKPDcuXeJ+kCSyV5IRyzfe45AXlCYur9iakncw93nti4ApwWI5EJXJdAqQ2A06JOMO2VKd8fLNV8c4RRACqIo+KBAIgyvcANCxTAeJ0Sj0fcKNGl7wY5opn6QIiOycH6go1E2Gohm85CyJQBaJ8fMySNAZB4piuyEF2EU4BsT6IApHXCyD+SDLmkslKMbO9wPFTF2PV6Y+n5JrGAcJ6wOI4jHnnlqFEBbQ8lkB4FOR2sTAzTEAemrtebNcYqKNZxFm4aIkao++X4o30AM2CJTALVv0hschTq6/T1cUU9VxlhiZGvV4QiixErBqgFmQrAjPmetivIXn05OGupT2QmQxWLsxp6xqJHbi9U9xgH5ljI6duNqyLRB1dPzjoCdm5dfhF3qmwJ6IX0LMHKwG0jI9fnfS9ReSHLrPV73z6jjn/zVY+J8QTyNUOhbpGT9icvBOguxRxRq4P3Gd1DUDeK0Zz5k/39kSYAKgJAV+J8XY28X5BrNxCPcl9WEihJVhFNoE083W5E7L+eXQ0OUtoknK7DPXCngpYuXtYaYSrcSc9LoZamqlzQbO/bfKWxSuI+2xGg6T0bKB+QxnCqAP+nU0KUaONQUC3PoIiitlsvKCJA1IMILqDHHSCtpEiYcz4kHoxcwee1VUsTATlapZ1U3bzpuILwvSz6WqrMnJKIYk1mUdF2EKuWUxd1hBB0YafURDIBSFYhx3OmXNFjsQ1BBv8kcxpgsubQEXoEg+Q9z6cQIUWQO0NuHMAzuBxTJRynuuFQGDDJV9x6i4gDXfKwBHu+XXIkdo+Uou0DeFlRVqtr3SiUnCSRkcsNqBtokNMBE9FVYJw2dTrwoUJRfizzlHJMmh0hcYVvomr2wOsIAoBTHNWv8LlS5EGxe0YozpVFGpg04ZV43VGs05l9VUAZmXwJQ8y8wouJqnnu+tAKjAvth3gp+zQZ7C9OFiGgEgHrzEjY+J28CmhUyiESByv4zQFL31Gfw3DK0rIc/gBAkVxOGWcg3WgnJqoh/1+n/wMno3fB/ndRTJ9cA/AzlQykhqxzQUPpet3TenV3Ur8hOQJzyzLSGo6v5IXIH2eontCrT2pz0qmFqw0GZo5IVEvU5pVk98aIIQ8+lYcaygqgUgZVdZuct4pA3eJ2QmokIgPKOnUPbn/ZEsWJyUGBijCGKKa/HsxFYGkq+pJUAOsRjzPqpJ7sH8m7UhIahsrygubbiZoreXRNg5sNczRHTIclouZDCHZpD2pnx5UwYWlxI5pk2FaKVakU11+zKnqdzlOFoix+ow7NGJ8zmD3Fs9yFjVRykQjamQNDoXCbgnARuydsUQgYkG9IGEBxVy4wEQo+hlz2cBo2rUg4MgbTLoASSZaNF3yXAAQdy2y7XIP2IJN+MtC3peYHIQslcAB5WKK4JKSfk+sXQuL2B3NwqbSgPNbiMEot21pOhmjTrAOEhzXahP3spIDwdZek+6u2KpyTzC/H33lq8KJ83WU9NUAIAPgHDZ7QTK1rSVwJX/g8A/0UoY6TNKp3pWTFjm7UY+y9BOBWybCBi2qtlw7WUWMvMEPiJMy0gMAcTy25rI+4J7YFd9HFSckFenIlrKAq2LsacpkjkP0/Z7y7rK6kFOnCambuXfWNw1E7zTvSgKaU5/xBq0uvI+w2WsrInLsQRyI894DsaFinuVMOsiYlrX4n1OtDCsvpSx2JlSTYqNFTw4gRrHg8bHMOPl4Pb4WQT5bMgb4bHn18b1sK0Xdt3TD5uG9MfXUs+E1na+7WP9I9cp/x+ZXSeQW9s9eEPwfANvkPFDd498zBNJsEbcAQT7mfxIGGW0lG0ACFu1e0erAZlwax9hrlv04LneMTRVLEuL4+wjxS1sx37AgsWBITX2teDR6ww9QsPjhbAbQhrWfj04aVoq9ZNJOOUD+HD+glIBhMCYJ60kjmszJKX7UkapFKN8ppr2rO4BIJ+HMC2wponwL11VS1L2TkyjDdxoWSX0Pkan5RNE9R3bltrkYWINzQauj/KaWJcq0KUtBa7LMh/mw7bKxCXnVqWlsCZZ1/V8c0BgbRedN7Imvw9gVGx6h0MmK0BRUqVXv+etWfFB3P+NyH+FPyHmqJrBzEbrFrGvMHV275VKzVvkZ104NLe46s6mGVbfLpdioVOWN7imbnvqrAXSnOQ1cP3tjoN4UNPitbKC0zXMAX93kx86lbo+6VxDGzKY17taQ/+VCLvXiUmu/GwmIkM+fSXnMlELOaxrzm73/2d1Z0+KoeWvQtG0ZVM561B30yFxQEK31JNiwHipOtiSvOI7x4g886IGka5LzwHVFzCjLgvfqwsQC9Phbhg4QA0S0c3m6UgQ9Z6jo19iAe1D4t66ofCCM5OkEkpsN/8d8nk6n2DuhEwe23bO59/7KXwRh9CHmSbq8/rj69eDZ4dHx8x9+fPG3v5+8/OnV6evR2Zvzt//458//2tl99PjbP/7pz3/5zgIU7RhAMtKLWIQhjlpVXZYSUY30SespnkLy5yFP+uLKDbHB06p5d1uETxjfc8CBE7ZRFM3na4iiKOawVQ2hcj19YrXqZjHib83owkAlDncKw4jpOPRFB+W/H9ujEHtaGr5R9DX5EA1KXbcnVriJSQW/GroWad0NEHcyCpaueVvRbBMqVWdP68vOr9P1TO8fZhOZSi5UvARq2aaGxDR8z2F8rudGPeVMc8rGd+a6ooAOJxjHjGODb0gas1JeHA4GZMQW4RIqvzCBvY+H5408zsWpPbHryg/DmKLInWP1UEYpd7cGb+bYPff98BqY9Leh8EjACDTqe4Gzt7v77WO7v90Z8FbXEL5rzmMUzaVFGoTvdi8r9XI7JxUDXeaIFrkxm3i1bGwEQAkMimxJ8C43yaUhSobeClXjaxY1Qp5xzAStRzm2fc9en7xOWbxaC0j+wRdEdvsDfjVBEcg+bAA+yeO2yKs/Y4Kfdc4b4+ndnuN75rrKB6fAd7RzvqWTJPiCWQOFYDl2BOUY01ohsu6wrQpdyzhQpD+NwngjLki3hktRVHyZk6Jt5iYOf2zACela+iYQMc0WUbKyq6rqlKvnb36x3+30vrv8tNt9fHPR73x6fFP8bn+D9XQNk2H1VWQN3I2dLBSUwdTDns87bZQFeWLJYosMn7Tanyoz3eyVbqIBblpdnUPiLRhgEVmQR8aTTMfiUb2pDPrsyE0NPd4uaC+rW27cUOgIVsvVzq06qHBiX2Qp6KKSi0ib1YScTQLIcx/3B2J+cvSstE1UYR+bgldsxck0DhfyqEXWBVPrLm8vVc48xg3ZiPEoDDjb9BAESCKEOnpmV2vrtpRUB7fh/XWBVxD0nkyRqTuxO3eJu/j/ZuvfFrX9qg==</source>
  </file>
  <file path="phpdrush/src/PhpDrushException.php" generated-path="phpdrush.src.PhpDrushException.html" hash="49d4d83cd5bfe47673387cdbb3ae009d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="PhpDrush" line="8" package="PhpDrush">
      <extends>\Exception</extends>
      <name>PhpDrushException</name>
      <full_name>\PhpDrush\PhpDrushException</full_name>
      <docblock line="8">
        <description>Class PhpDrushException</description>
        <long-description></long-description>
        <tag name="package" line="8" description="PhpDrush"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyzsS/IKODKS8xNLS5ITE5VCMgocCkqLc5QqObiUgACfS0tMK2gpeCck1hcDFfgWpGcWlCSmZ8Hk3YA6s9OTEcYAZXQB9LJ2LUqpFaUpOalFCvEIJsGtrmWq5YLAGcaL30=</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="EC" full_name="EC">
    <package name="Poetry" full_name="EC\Poetry">
      <package name="Events" full_name="EC\Poetry\Events">
        <package name="Client" full_name="EC\Poetry\Events\Client"/>
        <package name="NotificationHandler" full_name="EC\Poetry\Events\NotificationHandler"/>
        <package name="Notifications" full_name="EC\Poetry\Events\Notifications"/>
      </package>
      <package name="Exceptions" full_name="EC\Poetry\Exceptions">
        <package name="Notifications" full_name="EC\Poetry\Exceptions\Notifications"/>
      </package>
      <package name="Messages" full_name="EC\Poetry\Messages">
        <package name="Components" full_name="EC\Poetry\Messages\Components">
          <package name="Constraints" full_name="EC\Poetry\Messages\Components\Constraints"/>
        </package>
        <package name="Notifications" full_name="EC\Poetry\Messages\Notifications"/>
        <package name="Requests" full_name="EC\Poetry\Messages\Requests"/>
        <package name="Responses" full_name="EC\Poetry\Messages\Responses"/>
        <package name="Traits" full_name="EC\Poetry\Messages\Traits"/>
      </package>
      <package name="Services" full_name="EC\Poetry\Services">
        <package name="Plates" full_name="EC\Poetry\Services\Plates"/>
        <package name="Providers" full_name="EC\Poetry\Services\Providers"/>
      </package>
      <package name="Traits" full_name="EC\Poetry\Traits"/>
    </package>
  </package>
  <package name="PhpDrush" full_name="PhpDrush"/>
  <package name="PhpGit" full_name="PhpGit"/>
  <package name="Poetry" full_name="Poetry"/>
  <package name="global" full_name="global"/>
  <package name="iTopApi" full_name="iTopApi"/>
  <package name="spec" full_name="spec">
    <package name="EC" full_name="spec\EC">
      <package name="Poetry" full_name="spec\EC\Poetry">
        <package name="Messages" full_name="spec\EC\Poetry\Messages">
          <package name="Traits" full_name="spec\EC\Poetry\Messages\Traits"/>
        </package>
      </package>
    </package>
  </package>
  <namespace name="BacktracTasks" full_name="BacktracTasks"/>
  <namespace name="EC" full_name="EC">
    <namespace name="Poetry" full_name="EC\Poetry">
      <namespace name="Events" full_name="EC\Poetry\Events">
        <namespace name="Client" full_name="EC\Poetry\Events\Client"/>
        <namespace name="NotificationHandler" full_name="EC\Poetry\Events\NotificationHandler"/>
        <namespace name="Notifications" full_name="EC\Poetry\Events\Notifications"/>
      </namespace>
      <namespace name="Exceptions" full_name="EC\Poetry\Exceptions">
        <namespace name="Notifications" full_name="EC\Poetry\Exceptions\Notifications"/>
      </namespace>
      <namespace name="Messages" full_name="EC\Poetry\Messages">
        <namespace name="Components" full_name="EC\Poetry\Messages\Components">
          <namespace name="Constraints" full_name="EC\Poetry\Messages\Components\Constraints"/>
        </namespace>
        <namespace name="Notifications" full_name="EC\Poetry\Messages\Notifications"/>
        <namespace name="Requests" full_name="EC\Poetry\Messages\Requests"/>
        <namespace name="Responses" full_name="EC\Poetry\Messages\Responses"/>
        <namespace name="Traits" full_name="EC\Poetry\Messages\Traits"/>
      </namespace>
      <namespace name="Services" full_name="EC\Poetry\Services">
        <namespace name="Plates" full_name="EC\Poetry\Services\Plates"/>
        <namespace name="Providers" full_name="EC\Poetry\Services\Providers"/>
      </namespace>
      <namespace name="Traits" full_name="EC\Poetry\Traits"/>
    </namespace>
    <namespace name="Utils" full_name="EC\Utils">
      <namespace name="Backtrac" full_name="EC\Utils\Backtrac"/>
    </namespace>
  </namespace>
  <namespace name="EcasPhpCASParser" full_name="EcasPhpCASParser"/>
  <namespace name="PhpDrush" full_name="PhpDrush"/>
  <namespace name="PhpGit" full_name="PhpGit"/>
  <namespace name="iTopApi" full_name="iTopApi"/>
  <namespace name="spec" full_name="spec">
    <namespace name="EC" full_name="spec\EC">
      <namespace name="Poetry" full_name="spec\EC\Poetry">
        <namespace name="Messages" full_name="spec\EC\Poetry\Messages">
          <namespace name="Components" full_name="spec\EC\Poetry\Messages\Components"/>
          <namespace name="Requests" full_name="spec\EC\Poetry\Messages\Requests"/>
          <namespace name="Responses" full_name="spec\EC\Poetry\Messages\Responses"/>
          <namespace name="Traits" full_name="spec\EC\Poetry\Messages\Traits"/>
        </namespace>
      </namespace>
    </namespace>
  </namespace>
  <deprecated count="0"/>
</project>

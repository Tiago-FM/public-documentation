[
{
	"uri": "https://docs.fpfis.eu/php-sdks/",
	"title": "PHP SDKs",
	"tags": [],
	"description": "",
	"content": " A curated lists of PHP SDKs maintained by FPFIS :\niTopApi The plugins SDK allows for interactions with iTop CMDB.\ncomposer require ec-europa/itopapi:~1.0  Backtrac PHP client This projects includes both a client library and a phing helper to trigger visual comparison.\ncomposer require ec-europa/backtrac-php-client:~0.1  "
},
{
	"uri": "https://docs.fpfis.eu/docker-images/",
	"title": "Docker images",
	"tags": [],
	"description": "",
	"content": " Hub All images are available on FPFIS\u0026rsquo;s Docker hub\nA curated lists of docker images maintained by FPFIS\nRedis Redis Docker image\ndocker pull fpfis/redis  Varnish Varnish Docker image\ndocker pull fpfis/varnish  "
},
{
	"uri": "https://docs.fpfis.eu/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/",
	"title": "FPFIS documentation",
	"tags": [],
	"description": "",
	"content": " Introduction This space is a placeholder for all documentation about FPFIS\u0026rsquo;s OpenSource projects.\nPHP SDKs Multiple PHP SDKs are provided for various clients.\nDocker images Docker images are also provided for other tasks, eg, an nginx web server, a Composer Docker image\n"
},
{
	"uri": "https://docs.fpfis.eu/docker-images/redis/",
	"title": "Redis",
	"tags": [],
	"description": "",
	"content": " Image Image is named fpfis/redis and based on CentOS 6.\nConfiguration No configuration is available for this image.\nPort Redis is running on port 6379 by default.\nExample docker run -p 6379:6379 -ti --rm fpfis/redis   \n"
},
{
	"uri": "https://docs.fpfis.eu/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.fpfis.eu/docker-images/varnish/",
	"title": "Varnish",
	"tags": [],
	"description": "",
	"content": " Image Image is named fpfis/varnish and based on CentOS 6.\nConfiguration Use the following environment variable to configure the image :\nHTTP_PORT Port to listen to ( default 6080 )\nDEFAULT_BACKEND Backend to connect to ( default localhost:8080 )\nMouting VCL volume VCL must be mounted in /etc/varnish and a default.vcl should be present.\nExample Assuming you have a working VCL with default.vcl in your local varnish folder :\ndocker run -p 6080:6080 -ti --rm -e DEFAULT_BACKEND=172.16.10.1:8080 -v $(pwd)/varnish:/etc/varnish fpfis/varnish   \n"
}]